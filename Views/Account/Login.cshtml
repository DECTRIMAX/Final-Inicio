<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gobierno de Monclova - Acceso</title>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0d4f3c 0%, #1a7a5e 50%, #2d8f6f 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .login-container {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 25px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            padding: clamp(25px, 5vw, 50px);
            width: 100%;
            max-width: min(950px, 95vw);
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin: 10px;
        }

        .header {
            margin-bottom: clamp(25px, 4vw, 40px);
            position: relative;
        }

        .government-logo {
            display: flex;
            justify-content: center;
            margin-bottom: clamp(20px, 3vw, 30px);
        }

        .main-logo {
            width: clamp(150px, 20vw, 200px);
            height: clamp(120px, 16vw, 160px);
            border-radius: 20px;
            overflow: hidden;
            background: transparent;
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
            box-shadow: none;
        }

            .main-logo img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                object-position: center;
                background: transparent;
                border: none;
                box-shadow: none;
            }

        .header h1 {
            color: #0d4f3c;
            font-size: clamp(24px, 6vw, 36px);
            font-weight: 800;
            margin-bottom: clamp(10px, 2vw, 15px);
            letter-spacing: -1px;
        }

        .header p {
            color: #555;
            font-size: clamp(14px, 3.5vw, 18px);
            font-weight: 500;
            opacity: 0.9;
        }

        .user-type-selector {
            margin-bottom: clamp(20px, 3vw, 30px);
        }

            .user-type-selector label {
                display: block;
                margin-bottom: clamp(8px, 2vw, 12px);
                color: #2d3748;
                font-weight: 600;
                font-size: clamp(14px, 3vw, 16px);
            }

            .user-type-selector select,
            .form-group input {
                width: 100%;
                padding: clamp(12px, 3vw, 16px);
                border: 2px solid #e2e8f0;
                border-radius: 12px;
                font-size: clamp(14px, 3vw, 16px);
                background: rgba(255, 255, 255, 0.9);
                color: #2d3748;
                cursor: pointer;
                transition: all 0.3s ease;
                font-weight: 500;
            }

                .user-type-selector select:focus,
                .form-group input:focus {
                    border-color: #1a7a5e;
                    outline: none;
                    box-shadow: 0 0 0 4px rgba(26, 122, 94, 0.15);
                    background: white;
                    transform: translateY(-1px);
                }

        .citizen-section {
            display: none;
        }

            .citizen-section.show {
                display: block;
            }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
        }

        .action-btn {
            flex: 1;
            padding: 12px;
            border: 2px solid #1a7a5e;
            background: transparent;
            color: #1a7a5e;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .action-btn.active {
                background: #1a7a5e;
                color: white;
            }

            .action-btn:hover {
                background: #1a7a5e;
                color: white;
            }

        .form-group {
            margin-bottom: clamp(20px, 3vw, 25px);
            text-align: left;
        }

            .form-group label {
                display: block;
                margin-bottom: clamp(6px, 1.5vw, 8px);
                color: #2d3748;
                font-weight: 600;
                font-size: clamp(14px, 3vw, 16px);
            }

        .required {
            color: #e53e3e;
        }

        .file-upload {
            position: relative;
        }

            .file-upload input[type="file"] {
                display: none;
            }

        .file-upload-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            padding: 15px;
            border: 2px dashed #e2e8f0;
            border-radius: 10px;
            background: #f8f9fa;
            color: #666;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }

            .file-upload-btn:hover {
                border-color: #1a7a5e;
                background: rgba(26, 122, 94, 0.05);
                color: #1a7a5e;
            }

            .file-upload-btn.has-file {
                border-color: #22c55e;
                background: rgba(34, 197, 94, 0.1);
                color: #15803d;
            }

        .login-btn {
            width: 100%;
            padding: clamp(16px, 3vw, 20px);
            background: linear-gradient(135deg, #0d4f3c 0%, #1a7a5e 50%, #2d8f6f 100%);
            color: white;
            border: none;
            border-radius: 15px;
            font-size: clamp(16px, 3vw, 18px);
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: clamp(15px, 2vw, 20px);
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 8px 20px rgba(13, 79, 60, 0.3);
        }

            .login-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 15px 35px rgba(13, 79, 60, 0.4);
                background: linear-gradient(135deg, #0a3d2f 0%, #157353 50%, #268763 100%);
            }

            .login-btn:active {
                transform: translateY(-1px);
            }

            .login-btn:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none;
            }

        .error-message {
            color: #e53e3e;
            font-size: 14px;
            margin-top: 8px;
            display: none;
            font-weight: 500;
        }

        .success-message {
            background: linear-gradient(135deg, #d4edda, #c3e6cb);
            color: #155724;
            padding: 15px;
            border-radius: 12px;
            margin-top: 20px;
            border: 1px solid #c3e6cb;
            display: none;
            font-weight: 500;
        }

        .general-error {
            background: linear-gradient(135deg, #f8d7da, #f5c6cb);
            color: #721c24;
            padding: 15px;
            border-radius: 12px;
            margin-top: 20px;
            border: 1px solid #f5c6cb;
            display: none;
            font-weight: 500;
        }

        .hidden {
            display: none !important;
        }

        .ciudadano-message {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            border: 2px solid #22c55e;
            border-radius: 15px;
            padding: 20px;
            margin: 25px 0;
            color: #15803d;
            font-size: 16px;
            text-align: center;
            display: none;
            font-weight: 600;
            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.2);
        }

            .ciudadano-message.show {
                display: block;
            }

        .services-section {
            margin-top: clamp(30px, 5vw, 50px);
            padding-top: clamp(25px, 4vw, 40px);
            border-top: 2px solid #e2e8f0;
        }

        .services-title {
            color: #2d3748;
            font-size: clamp(20px, 4vw, 24px);
            font-weight: 700;
            margin-bottom: clamp(25px, 5vw, 40px);
            text-align: center;
            background: linear-gradient(135deg, #0d4f3c, #1a7a5e);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .services-grid {
            display: flex;
            flex-wrap: wrap;
            gap: clamp(10px, 2vw, 20px);
            margin-bottom: clamp(20px, 4vw, 30px);
            justify-content: center;
            align-items: stretch;
            padding: 0 10px;
        }

        .service-icon {
            display: flex;
            flex-direction: column;
            align-items: center;
            color: #4a5568;
            text-align: center;
            cursor: pointer;
            transition: all 0.4s ease;
            padding: clamp(15px, 3vw, 20px) clamp(10px, 2vw, 15px);
            border-radius: clamp(12px, 2vw, 20px);
            background: linear-gradient(135deg, rgba(255,255,255,0.8), rgba(248,250,252,0.9));
            border: 1px solid rgba(226, 232, 240, 0.5);
            box-sizing: border-box;
            min-height: clamp(120px, 20vw, 160px);
            justify-content: flex-start;
            flex: 1 1 auto;
            min-width: clamp(140px, 25vw, 200px);
            max-width: clamp(160px, 30vw, 220px);
        }

            .service-icon:hover {
                transform: translateY(-5px) scale(1.02);
                color: #2d3748;
                background: linear-gradient(135deg, rgba(255,255,255,1), rgba(241,245,249,1));
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            }

            .service-icon .icon-circle {
                width: clamp(55px, 10vw, 80px);
                height: clamp(55px, 10vw, 80px);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-bottom: clamp(8px, 2vw, 15px);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease;
                overflow: hidden;
                background: linear-gradient(135deg, #ffffff, #f8fafc);
                border: 2px solid rgba(26, 122, 94, 0.1);
                flex-shrink: 0;
            }

            .service-icon:hover .icon-circle {
                box-shadow: 0 12px 25px rgba(0, 0, 0, 0.18);
                transform: scale(1.05);
                background: linear-gradient(135deg, #ffffff, #f1f5f9);
                border-color: rgba(26, 122, 94, 0.3);
            }

            .service-icon .icon-circle img {
                width: 65%;
                height: 65%;
                object-fit: contain;
            }

            .service-icon span {
                font-weight: 600;
                color: #4a5568;
                line-height: 1.3;
                word-wrap: break-word;
                font-size: clamp(11px, 2.5vw, 14px);
                transition: color 0.3s ease;
                text-align: center;
                display: flex;
                align-items: center;
                justify-content: center;
                flex-grow: 1;
                hyphens: auto;
                word-break: break-word;
            }

            .service-icon:hover span {
                color: #1a7a5e;
                font-weight: 700;
            }

        .limpieza .icon-circle {
            background: linear-gradient(135deg, #fef7cd, #fef3c7);
        }

        .recoleccion .icon-circle {
            background: linear-gradient(135deg, #fed7d7, #fed7e2);
        }

        .alumbrado .icon-circle {
            background: linear-gradient(135deg, #e0f2fe, #bae6fd);
        }

        .bacheo .icon-circle {
            background: linear-gradient(135deg, #f3e8ff, #e9d5ff);
        }

        .forestacion .icon-circle {
            background: linear-gradient(135deg, #d1fae5, #bbf7d0);
        }

        .servicios-generales .icon-circle {
            background: linear-gradient(135deg, #f1f5f9, #e2e8f0);
        }
    </style>
</head>
<body>
    <div class="login-container" id="loginContainer">
        <div class="header">
            <div class="government-logo">
                <div class="main-logo">
                    <img src="~/imagenes/LOGO.png" alt="Logo Gobierno Monclova"
                         onerror="this.style.display='none'; this.parentNode.innerHTML='<div style=\'display:flex;align-items:center;justify-content:center;width:100%;height:100%;background:linear-gradient(135deg, #0d4f3c 0%, #1a7a5e 100%);color:white;font-weight:bold;font-size:28px;border-radius:20px;\'>GOB</div>'">
                </div>
            </div>
            <h1>Gobierno de Monclova</h1>
            <p>Sistema de Acceso Digital</p>
        </div>

        <div id="loginForm">
            <div class="user-type-selector">
                <label for="userType">Tipo de Usuario:</label>
                <select id="userType" name="userType" required>
                    <option value="ciudadano" selected>Ciudadano</option>
                    <option value="operativo">Operativo</option>
                    <option value="administrador">Administrador</option>
                    <option value="jefeAdministracion">Jefe de Administración</option>
                    <option value="director">Director</option>
                </select>
            </div>

            <div id="ciudadanoMessage" class="ciudadano-message">
                <strong>✓ Acceso ciudadano disponible</strong><br>
                Inicie sesión con su cuenta existente o regístrese para acceder a los servicios municipales.
            </div>

            <div id="citizenSection" class="citizen-section">
                <div class="action-buttons">
                    <button type="button" class="action-btn active" id="loginModeBtn">Iniciar Sesión</button>
                    <button type="button" class="action-btn" id="registerModeBtn">Registrarse</button>
                </div>

                <div id="citizenLoginFields">
                    <div class="form-group">
                        <label for="citizenLoginEmail">Correo Electrónico <span class="required">*</span></label>
                        <input type="email" id="citizenLoginEmail" name="citizenLoginEmail" placeholder="ejemplo@correo.com" required>
                        <div class="error-message" id="citizenLoginEmailError"></div>
                    </div>
                    <div class="form-group">
                        <label for="citizenLoginPassword">Contraseña <span class="required">*</span></label>
                        <input type="password" id="citizenLoginPassword" name="citizenLoginPassword" placeholder="Su contraseña" required>
                        <div class="error-message" id="citizenLoginPasswordError"></div>
                    </div>
                </div>

                <div id="citizenRegisterFields" class="hidden">
                    <div class="form-group">
                        <label for="firstName">Nombre(s) <span class="required">*</span></label>
                        <input type="text" id="firstName" name="firstName" placeholder="Ej: Juan Carlos" required
                               pattern="[A-Za-zÀ-ÿ\u00f1\u00d1\s]*">
                        <div class="error-message" id="firstNameError"></div>
                    </div>
                    <div class="form-group">
                        <label for="lastName1">Primer Apellido <span class="required">*</span></label>
                        <input type="text" id="lastName1" name="lastName1" placeholder="Ej: Pérez" required
                               pattern="[A-Za-zÀ-ÿ\u00f1\u00d1\s]*">
                        <div class="error-message" id="lastName1Error"></div>
                    </div>
                    <div class="form-group">
                        <label for="lastName2">Segundo Apellido <span class="required">*</span></label>
                        <input type="text" id="lastName2" name="lastName2" placeholder="Ej: García" required
                               pattern="[A-Za-zÀ-ÿ\u00f1\u00d1\s]*">
                        <div class="error-message" id="lastName2Error"></div>
                    </div>
                    <div class="form-group">
                        <label for="email">Correo Electrónico <span class="required">*</span></label>
                        <input type="email" id="email" name="email" placeholder="ejemplo@correo.com" required>
                        <div class="error-message" id="emailError"></div>
                    </div>
                    <div class="form-group">
                        <label for="phone">Teléfono <span class="required">*</span></label>
                        <input type="tel" id="phone" name="phone" placeholder="844-123-4567" required
                               pattern="[0-9\-\s\(\)\+]*" inputmode="numeric">
                        <div class="error-message" id="phoneError"></div>
                    </div>
                    <div class="form-group">
                        <label for="inePhoto">Foto de Credencial INE <span class="required">*</span></label>
                        <div class="file-upload">
                            <input type="file" id="inePhoto" name="inePhoto" accept="image/*" required>
                            <label for="inePhoto" class="file-upload-btn" id="fileUploadLabel">
                                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z" />
                                </svg>
                                <span>Seleccionar foto de INE</span>
                            </label>
                        </div>
                        <div class="error-message" id="inePhotoError"></div>
                    </div>
                    <div class="form-group">
                        <label for="registerPassword">Contraseña <span class="required">*</span></label>
                        <input type="password" id="registerPassword" name="registerPassword" placeholder="Mínimo 6 caracteres" required>
                        <div class="error-message" id="registerPasswordError"></div>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirmar Contraseña <span class="required">*</span></label>
                        <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Repita su contraseña" required>
                        <div class="error-message" id="confirmPasswordError"></div>
                    </div>
                </div>
            </div>

            <div id="loginFields" class="hidden">
                <div class="form-group">
                    <label for="usuario">Usuario <span class="required">*</span></label>
                    <input type="text" id="usuario" name="usuario" placeholder="Ingrese su usuario" required>
                    <div class="error-message" id="usuarioError"></div>
                </div>
                <div class="form-group">
                    <label for="password">Contraseña <span class="required">*</span></label>
                    <input type="password" id="password" name="password" placeholder="Ingrese su contraseña" required>
                    <div class="error-message" id="passwordError"></div>
                </div>
            </div>

            <button type="button" class="login-btn" id="submitBtn" onclick="handleLogin()">
                Acceder
            </button>

            <div class="general-error" id="generalError"></div>
            <div class="success-message" id="successMessage"></div>
        </div>

        <div class="services-section">
            <div class="services-title">Servicios Primarios Municipales</div>
            <div class="services-grid" id="servicesGrid">
                <div class="service-icon limpieza">
                    <div class="icon-circle">
                        <img src="~/imagenes/CuadrillaDeLimpieza.png" alt="Limpieza Pública"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\' /></svg>'">
                    </div>
                    <span>Limpieza Pública</span>
                </div>
                <div class="service-icon recoleccion">
                    <div class="icon-circle">
                        <img src="~/imagenes/RecoleccionDeBasura.png" alt="Recolección de Basura"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M19 7h-3V6c0-1.1-.9-2-2-2H10c-1.1 0-2 .9-2 2v1H5c-1.1 0-2 .9-2 2v1c0 1.1.9 2 2 2v9c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2v-9c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM10 6h4v1h-4V6zm7 15H7V12h10v9zm-8-7v6h2v-6h-2zm4 0v6h2v-6h-2z\'/></svg>'">
                    </div>
                    <span>Recolección de Basura</span>
                </div>
                <div class="service-icon alumbrado">
                    <div class="icon-circle">
                        <img src="~/imagenes/Alumbrado.png" alt="Alumbrado Público"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M9 21c0 .5.4 1 1 1h4c.6 0 1-.5 1-1v-1H9v1zm3-19C8.1 2 5 5.1 5 9c0 2.4 1.2 4.5 3 5.7V17c0 .5.4 1 1 1h6c.6 0 1-.5 1-1v-2.3c1.8-1.3 3-3.4 3-5.7 0-3.9-3.1-7-7-7z\'/></svg>'">
                    </div>
                    <span>Alumbrado Público</span>
                </div>
                <div class="service-icon bacheo">
                    <div class="icon-circle">
                        <img src="~/imagenes/Bacheo.png" alt="Bacheo"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M21.71 11.29l-9-9c-.39-.39-1.02-.39-1.41 0l-9 9c-.39.39-.39 1.02 0 1.41l9 9c.39.39 1.02.39 1.41 0l9-9c.39-.39.39-1.02 0-1.41zM12 17L7 12l5-5 5 5-5 5z\'/></svg>'">
                    </div>
                    <span>Bacheo</span>
                </div>
                <div class="service-icon forestacion">
                    <div class="icon-circle">
                        <img src="~/imagenes/Forestacion.png" alt="Forestación"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M17,8C8,10 5.9,16.17 3.82,21.34L5.17,22L6.58,17.58C8.13,20.81 10.24,23 12,23C13.76,23 15.87,20.81 17.42,17.58L18.83,22L20.18,21.34C18.1,16.17 16,10 17,8Z\'/></svg>'">
                    </div>
                    <span>Forestación</span>
                </div>
                <div class="service-icon servicios-generales">
                    <div class="icon-circle">
                        <img src="~/imagenes/ServiciosPrimarios.png" alt="Servicios Generales"
                             onerror="this.outerHTML='<svg viewBox=\'0 0 24 24\'><path d=\'M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\' /></svg>'">
                    </div>
                    <span>Servicios Primarios</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentUserType = '';
        let currentMode = 'login';

              const testUsers = {
            operativo: {
                usuario: 'operativoTest',
                password: '1234',
                usuarios_especificos: {
                    'OperativoAlumbrado': { password: '1234', dashboard: '/Home/OperativoAlumbrado' },
                    'OperativoBacheo': { password: '1234', dashboard: '/Home/OperativoBacheo' },
                    'OperativoTaller': { password: '1234', dashboard: '/Home/OperativoTaller' }
                }
            },
            administrador: {
                usuario: 'adminTest',
                password: '1234',
                usuarios_especificos: {
                    'adminRecoleccion': { password: '1234', dashboard: '/Home/DashboardAdministradorRecoleccion' },
                    'adminAlumbrado': { password: '1234', dashboard: '/Home/DashboardAdministradorAlumbrado' },
                    'adminBacheo': { password: '1234', dashboard: '/Home/DashboardAdministradorBacheo' },
                    'adminLimpia': { password: '1234', dashboard: '/Home/DashboardAdministradorLimpia' },
                    'adminObras': { password: '1234', dashboard: '/Home/DashboardAdministradorObras' },
                    'adminAlmacen': { password: '1234', dashboard: '/Home/InicioAlmacen' },
                    'adminAtencionServiciosPrimarios': { password: '1234', dashboard: '/Home/PanelAtencionServiciosPrimarios' },
                    'adminAtencionCiudadana': { password: '1234', dashboard: '/Home/PanelGeneralAtencionCiudadana' },


                }
            },
            jefeAdministracion: { usuario: 'jefeAdminTest', password: '1234' },
            director: {
                usuario: 'directorTest',
                password: '1234',
                usuarios_especificos: {
                    'DirectorBacheo': { password: '1234', dashboard: '/home/InicioDirectorBacheo' },
                    'DirectorAlumbrado': { password: '1234', dashboard: '/home/InicioDirectorAlumbrado' },
                    'DirectorRecoleccion': { password: '1234', dashboard: '/home/InicioDirectorRecoleccion' },
                    'DirectorServicios': { password: '1234', dashboard: '/home/PanelGeneralDirectorServiciosPrimarios' },
                    'DirectorTaller': { password: '1234', dashboard: '/home/PanelTallerMecanico' },
                    'DirectorAtencionCiudadana': { password: '1234', dashboard: '/home/PanelDirectoraGeneralAtencionCiudadana' },
                     'DirectorAlmacen': { password: '1234', dashboard: '/home/PanelGeneralAlmacen' }
                     
                }
            }
        };
        function validateEmail(email) {
            if (!email) return false;
            if (typeof email !== 'string') return false;
            if (email.length < 5) return false;

            email = email.toLowerCase().trim();
            var atCount = 0;
            var atPosition = -1;
            var lastDotPosition = -1;

            for (var i = 0; i < email.length; i++) {
                var char = email.charAt(i);
                if (char === String.fromCharCode(64)) {
                    atCount++;
                    atPosition = i;
                }
                if (char === '.') {
                    lastDotPosition = i;
                }
                if (char === ' ' || char === '\t' || char === '\n') {
                    return false;
                }
            }

            if (atCount !== 1) return false;
            if (atPosition < 1) return false;
            if (atPosition > email.length - 3) return false;
            if (lastDotPosition < atPosition + 2) return false;
            if (lastDotPosition > email.length - 2) return false;

            return true;
        }

        function saveCitizen(userData) {
            let citizens = JSON.parse(localStorage.getItem('citizens') || '[]');
            const newCitizen = {
                id: Date.now(),
                fullName: userData.fullName,
                email: userData.email,
                phone: userData.phone,
                password: userData.password,
                inePhotoName: userData.inePhotoName || 'archivo_ine.jpg',
                createdAt: new Date().toISOString()
            };
            citizens.push(newCitizen);
            localStorage.setItem('citizens', JSON.stringify(citizens));
            return newCitizen;
        }

        function findCitizen(email, password) {
            const citizens = JSON.parse(localStorage.getItem('citizens') || '[]');
            return citizens.find(citizen => citizen.email === email && citizen.password === password);
        }

        function emailExists(email) {
            const citizens = JSON.parse(localStorage.getItem('citizens') || '[]');
            return citizens.some(citizen => citizen.email === email);
        }

        function showMessage(message, type) {
            hideAllMessages();
            const messageElement = document.getElementById(type === 'success' ? 'successMessage' : 'generalError');
            if (messageElement) {
                messageElement.textContent = message;
                messageElement.style.display = 'block';
            }
        }

        function hideAllMessages() {
            document.getElementById('successMessage').style.display = 'none';
            document.getElementById('generalError').style.display = 'none';
            const errors = document.querySelectorAll('.error-message');
            errors.forEach(error => error.style.display = 'none');
        }

        function showFieldError(fieldName, message) {
            const errorElement = document.getElementById(fieldName + 'Error');
            if (errorElement) {
                errorElement.textContent = message;
                errorElement.style.display = 'block';
            }
        }

        function updateButtonText() {
            const submitBtn = document.getElementById('submitBtn');
            if (currentUserType === 'ciudadano') {
                submitBtn.textContent = currentMode === 'login' ? 'INICIAR SESIÓN' : 'REGISTRARSE';
            } else {
                submitBtn.textContent = 'ACCEDER';
            }
        }

        function switchCitizenMode(mode) {
            currentMode = mode;
            const loginBtn = document.getElementById('loginModeBtn');
            const registerBtn = document.getElementById('registerModeBtn');
            const loginFields = document.getElementById('citizenLoginFields');
            const registerFields = document.getElementById('citizenRegisterFields');

            if (mode === 'login') {
                loginBtn.classList.add('active');
                registerBtn.classList.remove('active');
                loginFields.classList.remove('hidden');
                registerFields.classList.add('hidden');
            } else {
                loginBtn.classList.remove('active');
                registerBtn.classList.add('active');
                loginFields.classList.add('hidden');
                registerFields.classList.remove('hidden');
            }

            hideAllMessages();
            updateButtonText();
        }

        function updateFileUploadDisplay() {
            const fileInput = document.getElementById('inePhoto');
            const label = document.getElementById('fileUploadLabel');
            const span = label.querySelector('span');

            if (fileInput.files && fileInput.files.length > 0) {
                const fileName = fileInput.files[0].name;
                label.classList.add('has-file');
                span.textContent = `Archivo seleccionado: ${fileName}`;
            } else {
                label.classList.remove('has-file');
                span.textContent = 'Seleccionar foto de INE';
            }
        }

        function validateCitizenLogin() {
            const email = document.getElementById('citizenLoginEmail').value.trim();
            const password = document.getElementById('citizenLoginPassword').value.trim();
            let isValid = true;

            hideAllMessages();

            if (!email) {
                showFieldError('citizenLoginEmail', 'El correo electrónico es requerido');
                isValid = false;
            } else if (!validateEmail(email)) {
                showFieldError('citizenLoginEmail', 'Ingrese un correo electrónico válido');
                isValid = false;
            }

            if (!password) {
                showFieldError('citizenLoginPassword', 'La contraseña es requerida');
                isValid = false;
            }

            return isValid ? { email, password } : null;
        }

        function validateName(name) {
            if (!name) return false;
            name = name.trim();
            if (name.length === 0) return false;

            for (var i = 0; i < name.length; i++) {
                var char = name.charAt(i);
                var charCode = char.charCodeAt(0);
                if (char === ' ') continue;
                if ((charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122)) continue;
                if (charCode >= 192 && charCode <= 255) continue;
                if (char === 'ñ' || char === 'Ñ') continue;
                return false;
            }

            return true;
        }

        function validatePhone(phone) {
            if (!phone) return false;
            var cleanPhone = phone.replace(/[\s\-\(\)\+]/g, '');
            for (var i = 0; i < cleanPhone.length; i++) {
                var char = cleanPhone.charAt(i);
                if (char < '0' || char > '9') {
                    return false;
                }
            }
            return cleanPhone.length >= 10;
        }

        function validateCitizenRegister() {
            const firstName = document.getElementById('firstName').value.trim();
            const lastName1 = document.getElementById('lastName1').value.trim();
            const lastName2 = document.getElementById('lastName2').value.trim();
            const email = document.getElementById('email').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const password = document.getElementById('registerPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const inePhoto = document.getElementById('inePhoto').files[0];
            let isValid = true;

            hideAllMessages();

            if (!firstName) {
                showFieldError('firstName', 'El nombre es requerido');
                isValid = false;
            } else if (!validateName(firstName)) {
                showFieldError('firstName', 'Ingrese un nombre válido (solo letras)');
                isValid = false;
            }

            if (!lastName1) {
                showFieldError('lastName1', 'El primer apellido es requerido');
                isValid = false;
            } else if (!validateName(lastName1)) {
                showFieldError('lastName1', 'Ingrese un apellido válido (solo letras)');
                isValid = false;
            }

            if (!lastName2) {
                showFieldError('lastName2', 'El segundo apellido es requerido');
                isValid = false;
            } else if (!validateName(lastName2)) {
                showFieldError('lastName2', 'Ingrese un apellido válido (solo letras)');
                isValid = false;
            }

            if (!email) {
                showFieldError('email', 'El correo electrónico es requerido');
                isValid = false;
            } else if (!validateEmail(email)) {
                showFieldError('email', 'Ingrese un correo electrónico válido');
                isValid = false;
            } else if (emailExists(email)) {
                showFieldError('email', 'Este correo ya está registrado');
                isValid = false;
            }

            if (!phone) {
                showFieldError('phone', 'El teléfono es requerido');
                isValid = false;
            } else if (!validatePhone(phone)) {
                showFieldError('phone', 'Ingrese un teléfono válido (solo números, mínimo 10 dígitos)');
                isValid = false;
            }

            if (!inePhoto) {
                showFieldError('inePhoto', 'La foto de credencial INE es requerida');
                isValid = false;
            }

            if (!password) {
                showFieldError('registerPassword', 'La contraseña es requerida');
                isValid = false;
            } else if (password.length < 6) {
                showFieldError('registerPassword', 'La contraseña debe tener al menos 6 caracteres');
                isValid = false;
            }

            if (!confirmPassword) {
                showFieldError('confirmPassword', 'Confirme su contraseña');
                isValid = false;
            } else if (password !== confirmPassword) {
                showFieldError('confirmPassword', 'Las contraseñas no coinciden');
                isValid = false;
            }

            return isValid ? {
                fullName: firstName + ' ' + lastName1 + ' ' + lastName2,
                firstName: firstName,
                lastName1: lastName1,
                lastName2: lastName2,
                email,
                phone,
                password,
                inePhotoName: inePhoto.name
            } : null;
        }

        function validateOtherUsers() {
            const usuario = document.getElementById('usuario').value.trim();
            const password = document.getElementById('password').value.trim();
            let isValid = true;

            hideAllMessages();

            if (!usuario) {
                showFieldError('usuario', 'El usuario es requerido');
                isValid = false;
            }

            if (!password) {
                showFieldError('password', 'La contraseña es requerida');
                isValid = false;
            }

            return isValid ? { usuario, password } : null;
        }

        function handleLogin() {
            if (!currentUserType) {
                showMessage('Por favor seleccione un tipo de usuario', 'error');
                return;
            }

            if (currentUserType === 'ciudadano') {
                if (currentMode === 'login') {
                    handleCitizenLogin();
                } else {
                    handleCitizenRegister();
                }
            } else {
                handleOtherUserLogin();
            }
        }

        function handleCitizenLogin() {
            const data = validateCitizenLogin();
            if (!data) return;

            const user = findCitizen(data.email, data.password);
            if (user) {
                showMessage('¡Bienvenido! Redirigiendo...', 'success');
                setTimeout(() => {
                    window.location.href = '/Home/DashboardCiudadano';
                }, 1500);
            } else {
                showMessage('Correo o contraseña incorrectos', 'error');
            }
        }

        function handleCitizenRegister() {
            const data = validateCitizenRegister();
            if (!data) return;

            try {
                saveCitizen(data);
                showMessage('¡Registro exitoso! Ya puede iniciar sesión', 'success');
                setTimeout(() => {
                    switchCitizenMode('login');
                    document.getElementById('citizenLoginEmail').value = data.email;
                }, 2000);
            } catch (error) {
                showMessage('Error al registrar. Intente nuevamente', 'error');
            }
        }

        function handleOtherUserLogin() {
            const data = validateOtherUsers();
            if (!data) return;

            if (currentUserType === 'operativo') {
                const operativoConfig = testUsers.operativo;

                if (operativoConfig.usuarios_especificos[data.usuario]) {
                    const userConfig = operativoConfig.usuarios_especificos[data.usuario];
                    if (userConfig.password === data.password) {
                        showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                        setTimeout(() => {
                            window.location.href = userConfig.dashboard;
                        }, 1500);
                        return;
                    }
                }

                if (operativoConfig.usuario === data.usuario && operativoConfig.password === data.password) {
                    showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                    setTimeout(() => {
                        window.location.href = '/Home/DashboardOperativo';
                    }, 1500);
                    return;
                }

                showMessage('Usuario o contraseña incorrectos', 'error');
                return;
            }

            if (currentUserType === 'administrador') {
                const adminConfig = testUsers.administrador;

                if (adminConfig.usuarios_especificos[data.usuario]) {
                    const userConfig = adminConfig.usuarios_especificos[data.usuario];
                    if (userConfig.password === data.password) {
                        showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                        setTimeout(() => {
                            window.location.href = userConfig.dashboard;
                        }, 1500);
                        return;
                    }
                }

                if (adminConfig.usuario === data.usuario && adminConfig.password === data.password) {
                    showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                    setTimeout(() => {
                        window.location.href = '/Home/DashboardAdministradorRecoleccion';
                    }, 1500);
                    return;
                }

                showMessage('Usuario o contraseña incorrectos', 'error');
                return;
            }

            if (currentUserType === 'director') {
                const directorConfig = testUsers.director;

                if (directorConfig.usuarios_especificos[data.usuario]) {
                    const userConfig = directorConfig.usuarios_especificos[data.usuario];
                    if (userConfig.password === data.password) {
                        showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                        setTimeout(() => {
                            window.location.href = userConfig.dashboard;
                        }, 1500);
                        return;
                    }
                }

                if (directorConfig.usuario === data.usuario && directorConfig.password === data.password) {
                    showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                    setTimeout(() => {
                        window.location.href = '/Home/DashboardDirector';
                    }, 1500);
                    return;
                }

                showMessage('Usuario o contraseña incorrectos', 'error');
                return;
            }

            const userConfig = testUsers[currentUserType];
            if (userConfig && userConfig.usuario === data.usuario && userConfig.password === data.password) {
                const routes = {
                    jefeAdministracion: '/home/GeneralJefeAdministrivo'
                };

                showMessage('¡Acceso autorizado! Redirigiendo...', 'success');
                setTimeout(() => {
                    window.location.href = routes[currentUserType];
                }, 1500);
            } else {
                showMessage('Usuario o contraseña incorrectos', 'error');
            }
        }

        function adjustServicesLayout() {
            const services = document.querySelectorAll('.service-icon');
            const screenWidth = window.innerWidth;

            services.forEach(service => {
                service.style.width = '';
                service.style.flexBasis = '';
            });

            if (screenWidth <= 480) {
                services.forEach(service => {
                    service.style.flexBasis = 'calc(50% - 10px)';
                    service.style.maxWidth = '180px';
                });
            } else if (screenWidth <= 768) {
                services.forEach(service => {
                    service.style.flexBasis = 'calc(33.333% - 15px)';
                    service.style.maxWidth = '200px';
                });
            } else if (screenWidth <= 1024) {
                services.forEach(service => {
                    service.style.flexBasis = 'calc(25% - 15px)';
                    service.style.maxWidth = '220px';
                });
            } else {
                services.forEach(service => {
                    service.style.flexBasis = 'calc(16.666% - 15px)';
                    service.style.maxWidth = '200px';
                });
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            console.log('Sistema cargado correctamente');

            currentUserType = 'ciudadano';
            const citizenSection = document.getElementById('citizenSection');
            const ciudadanoMessage = document.getElementById('ciudadanoMessage');

            ciudadanoMessage.classList.add('show');
            citizenSection.classList.add('show');
            currentMode = 'login';
            switchCitizenMode('login');
            updateButtonText();

            adjustServicesLayout();
            window.addEventListener('resize', function() {
                setTimeout(adjustServicesLayout, 100);
            });

            document.getElementById('userType').addEventListener('change', function() {
                currentUserType = this.value;
                const citizenSection = document.getElementById('citizenSection');
                const loginFields = document.getElementById('loginFields');
                const ciudadanoMessage = document.getElementById('ciudadanoMessage');

                citizenSection.classList.remove('show');
                loginFields.classList.add('hidden');
                ciudadanoMessage.classList.remove('show');
                hideAllMessages();

                if (currentUserType === 'ciudadano') {
                    ciudadanoMessage.classList.add('show');
                    citizenSection.classList.add('show');
                    currentMode = 'login';
                    switchCitizenMode('login');
                } else if (currentUserType !== '') {
                    loginFields.classList.remove('hidden');
                }

                updateButtonText();
            });

            document.getElementById('loginModeBtn').addEventListener('click', function(e) {
                e.preventDefault();
                switchCitizenMode('login');
            });

            document.getElementById('registerModeBtn').addEventListener('click', function(e) {
                e.preventDefault();
                switchCitizenMode('register');
            });

            document.getElementById('inePhoto').addEventListener('change', function(e) {
                e.stopPropagation();
                updateFileUploadDisplay();
            });

            const nameFields = ['firstName', 'lastName1', 'lastName2'];
            nameFields.forEach(function(fieldId) {
                const field = document.getElementById(fieldId);
                field.addEventListener('input', function(e) {
                    var value = e.target.value;
                    var cleanValue = value.replace(/[^A-Za-zÀ-ÿ\u00f1\u00d1\s]/g, '');
                    if (value !== cleanValue) {
                        e.target.value = cleanValue;
                    }
                });
                field.addEventListener('keypress', function(e) {
                    var char = String.fromCharCode(e.which);
                    var charCode = e.which;
                    if (charCode === 8 || charCode === 0) return;
                    if (char === ' ') return;
                    if ((charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122)) return;
                    if (charCode >= 192 && charCode <= 255) return;
                    e.preventDefault();
                });
            });

            document.getElementById('phone').addEventListener('input', function(e) {
                var value = e.target.value;
                var cleanValue = value.replace(/[^0-9\s\-\(\)\+]/g, '');
                if (value !== cleanValue) {
                    e.target.value = cleanValue;
                }
            });

            document.getElementById('phone').addEventListener('keypress', function(e) {
                var char = String.fromCharCode(e.which);
                if (!/[0-9\s\-\(\)\+]/.test(char) && e.which !== 8 && e.which !== 0) {
                    e.preventDefault();
                }
            });

            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    const errorElement = document.getElementById(this.id + 'Error');
                    if (errorElement) {
                        errorElement.style.display = 'none';
                    }
                });
            });
        });
    </script>
</body>
</html>