<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Bacheo - Monclova</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f5f5;
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
        }

        .nav-panel {
            position: fixed;
            top: 0;
            right: -400px;
            width: 380px;
            height: 100vh;
            background: linear-gradient(180deg, #ffffff 0%, #f0f9f4 100%);
            box-shadow: -10px 0 30px rgba(40, 167, 69, 0.3);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 1000;
            overflow: hidden;
            border-left: 1px solid #d4edda;
        }

            .nav-panel.open {
                right: 0;
            }

        .nav-panel-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(40, 167, 69, 0.4);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 999;
        }

            .nav-panel-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .nav-toggle {
            position: fixed;
            top: 50%;
            right: 20px;
            transform: translateY(-50%);
            width: 56px;
            height: 56px;
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            border: none;
            border-radius: 50%;
            color: white;
            font-size: 1.4rem;
            cursor: pointer;
            box-shadow: 0 20px 25px -5px rgba(40, 167, 69, 0.2);
            transition: all 0.3s ease;
            z-index: 1001;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-toggle:hover {
                transform: translateY(-50%) scale(1.1);
                box-shadow: 0 25px 35px -5px rgba(40, 167, 69, 0.4);
            }

            .nav-toggle.active {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                transform: translateY(-50%) rotate(180deg);
            }

        .nav-panel-header {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            padding: 2rem 1.5rem;
            color: white;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .nav-panel-title {
            font-size: 1.3rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .nav-panel-subtitle {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .nav-panel-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-panel-close:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: rotate(90deg);
            }

        .nav-panel-body {
            padding: 1.5rem;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            background: #ffffff;
            border-radius: 12px;
            color: #334155;
            text-decoration: none;
            transition: all 0.3s ease;
            border: 1px solid #d4edda;
            cursor: pointer;
        }

            .nav-item:hover {
                background: #f0f9f4;
                transform: translateX(-5px);
                border-color: #28a745;
                box-shadow: 0 4px 6px -1px rgba(40, 167, 69, 0.1);
            }

            .nav-item.active {
                background: linear-gradient(135deg, #28a745, #1e7e34);
                color: white;
                border-color: #28a745;
            }

        .nav-item-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #28a745, #1e7e34);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            color: white;
            margin-right: 1rem;
            transition: all 0.3s ease;
        }

        .nav-item.active .nav-item-icon {
            background: rgba(255, 255, 255, 0.2);
        }

        .nav-item:hover .nav-item-icon {
            transform: scale(1.1) rotate(5deg);
        }

        .nav-item-content {
            flex: 1;
        }

        .nav-item-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #1e293b;
        }

        .nav-item.active .nav-item-title {
            color: white;
        }

        .nav-item-desc {
            font-size: 0.8rem;
            color: #64748b;
        }

        .nav-item.active .nav-item-desc {
            color: rgba(255, 255, 255, 0.8);
        }

        .nav-item-arrow {
            font-size: 0.9rem;
            color: #94a3b8;
            transition: all 0.3s ease;
        }

        .nav-item:hover .nav-item-arrow {
            color: #28a745;
            transform: translateX(3px);
        }

        .nav-item.active .nav-item-arrow {
            color: white;
        }

        .nav-panel-body::-webkit-scrollbar {
            width: 6px;
        }

        .nav-panel-body::-webkit-scrollbar-track {
            background: #f0f9f4;
        }

        .nav-panel-body::-webkit-scrollbar-thumb {
            background: #5cb85c;
            border-radius: 3px;
        }

            .nav-panel-body::-webkit-scrollbar-thumb:hover {
                background: #28a745;
            }

        .header {
            background: linear-gradient(135deg, #1e7e34 0%, #28a745 100%);
            color: white;
            padding: 1.5rem 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1600px;
            margin: 0 auto;
            gap: 1.5rem;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 1.2rem;
        }

        .logo-container {
            display: flex;
            gap: 0.8rem;
        }

        .logo {
            width: 70px;
            height: 70px;
            background: white;
            border-radius: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid #28a745;
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            overflow: hidden;
            padding: 8px;
            flex-shrink: 0;
        }

            .logo img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                display: block;
            }

            .logo i {
                color: #28a745;
                font-size: 1.8rem;
            }

        .header-info h1 {
            font-size: 1.5rem;
            font-weight: 800;
            color: white;
            margin-bottom: 0.3rem;
        }

        .header-info p {
            font-size: 0.95rem;
            color: rgba(255, 255, 255, 0.9);
        }

        .user-avatar {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid #28a745;
            overflow: hidden;
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }

            .user-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .user-avatar i {
                color: #28a745;
                font-size: 1.8rem;
            }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 1rem;
        }

        .filters-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            border: 1px solid #d4edda;
            margin-bottom: 1.5rem;
        }

        .filters-title {
            font-size: 1.15rem;
            font-weight: 800;
            color: #28a745;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .date-range {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.5rem;
        }

            .date-range input {
                padding: 0.75rem;
                background: #f8f9fa;
                border: 1px solid #ddd;
                border-radius: 10px;
                color: #333;
                font-size: 0.92rem;
            }

                .date-range input:focus {
                    outline: none;
                    border-color: #28a745;
                }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-label {
            font-weight: 600;
            color: #666;
            font-size: 0.87rem;
        }

        .form-select {
            padding: 0.75rem;
            background: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 10px;
            color: #333;
            font-size: 0.92rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .form-select:focus {
                outline: none;
                border-color: #28a745;
                box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
            }

            .form-select:hover {
                border-color: #28a745;
            }

        .btn {
            padding: 0.75rem 1.35rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.88rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #28a745, #1e7e34);
            color: white;
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(40, 167, 69, 0.4);
            }

        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .kpi-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            border: 1px solid #d4edda;
            transition: all 0.3s ease;
        }

            .kpi-card:hover {
                border-color: #28a745;
                transform: translateY(-3px);
                box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
            }

        .kpi-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .kpi-value {
            font-size: 2rem;
            font-weight: 800;
            margin-bottom: 0.3rem;
        }

        .kpi-label {
            font-size: 0.85rem;
            color: #666;
        }

        .charts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .chart-card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            border: 1px solid #d4edda;
            transition: all 0.3s ease;
        }

            .chart-card:hover {
                border-color: #28a745;
            }

        .chart-header {
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #e0e0e0;
        }

        .chart-title {
            font-size: 1.15rem;
            font-weight: 800;
            color: #28a745;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .chart-wrapper {
            position: relative;
            width: 100%;
            min-height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .chart-wrapper canvas {
                max-width: 100%;
                max-height: 400px;
            }

        .notification {
            position: fixed;
            top: 1.6rem;
            right: 1.6rem;
            padding: 0.95rem 1.4rem;
            border-radius: 12px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
            z-index: 3000;
            font-weight: 600;
            display: none;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.92rem;
        }

            .notification.show {
                display: flex;
            }

            .notification.success {
                background: #28a745;
                color: white;
            }

            .notification.info {
                background: #3B82F6;
                color: white;
            }
    </style>
</head>
<body>
    <div class="nav-panel-overlay" id="navPanelOverlay" onclick="toggleNavPanel()"></div>
    <button class="nav-toggle" id="navToggle" onclick="toggleNavPanel()">
        <i class="fas fa-th-large"></i>
    </button>

    <div class="nav-panel" id="navPanel">
        <div class="nav-panel-header">
            <button class="nav-panel-close" onclick="toggleNavPanel()">
                <i class="fas fa-times"></i>
            </button>
            <h3 class="nav-panel-title">Sistema de Bacheo</h3>
            <p class="nav-panel-subtitle">Navegación Principal</p>
        </div>
        <div class="nav-panel-body">
            <div class="nav-item" onclick="redirectTo('captura')">
                <div class="nav-item-icon"><i class="fas fa-plus-circle"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Captura</div>
                    <div class="nav-item-desc">Registro de bacheos</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('programacion')">
                <div class="nav-item-icon"><i class="fas fa-calendar-alt"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Programación</div>
                    <div class="nav-item-desc">Horarios y cuadrillas</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('mapa')">
                <div class="nav-item-icon"><i class="fas fa-map-marked-alt"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Mapa Interactivo</div>
                    <div class="nav-item-desc">Ubicación de bacheos</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('rastreo')">
                <div class="nav-item-icon"><i class="fas fa-satellite-dish"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Rastreo GPS</div>
                    <div class="nav-item-desc">Monitoreo de unidades</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item active">
                <div class="nav-item-icon"><i class="fas fa-chart-line"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Dashboard</div>
                    <div class="nav-item-desc">Estadísticas y reportes</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('reportes')">
                <div class="nav-item-icon"><i class="fas fa-exclamation-triangle"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Reportes</div>
                    <div class="nav-item-desc">Incidencias ciudadanas</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('material')">
                <div class="nav-item-icon"><i class="fas fa-toolbox"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Material Utilizado</div>
                    <div class="nav-item-desc">Control de inventario</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('asistencia')">
                <div class="nav-item-icon"><i class="fas fa-user-check"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Asistencia</div>
                    <div class="nav-item-desc">Control de personal</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('repositorio')">
                <div class="nav-item-icon"><i class="fas fa-id-card"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Repositorio Vehicular</div>
                    <div class="nav-item-desc">Gestión de unidades</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('citas')">
                <div class="nav-item-icon"><i class="fas fa-wrench"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Citas Mantenimiento</div>
                    <div class="nav-item-desc">Agendar servicios</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('oficios')">
                <div class="nav-item-icon"><i class="fas fa-file-invoice"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Oficios a Almacén</div>
                    <div class="nav-item-desc">Envío de solicitudes</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
        </div>
    </div>

    <header class="header">
        <div class="header-content">
            <div class="logo-section">
                <div class="logo-container">
                    <div class="logo">
                        <img src="/imagenes/Bacheo.png" alt="Bacheo" onerror="this.parentElement.innerHTML='<i class=\'fas fa-road\'></i>'">
                    </div>
                    <div class="logo">
                        <img src="/imagenes/LOGO.png" alt="Gobierno" onerror="this.parentElement.innerHTML='<i class=\'fas fa-landmark\'></i>'">
                    </div>
                </div>
                <div class="header-info">
                    <h1>Dashboard Analítico - Servicios Primarios</h1>
                    <p>Municipio de Monclova, Coahuila</p>
                </div>
            </div>
            <div class="user-avatar">
                <img src="/images/usuario.jpg" alt="Usuario" onerror="this.parentElement.innerHTML='<i class=\'fas fa-user-cog\'></i>'">
            </div>
        </div>
    </header>

    <div class="container">
        <div class="filters-card">
            <div class="filters-title">
                <i class="fas fa-filter"></i>
                Filtros de Búsqueda
            </div>
            <div class="filters-grid">
                <div class="form-group">
                    <label class="form-label">Tipo de Trabajo</label>
                    <select class="form-select" id="filterTipo">
                        <option value="">Todos</option>
                        <option value="BACHEO">Bacheo</option>
                        <option value="BORDO">Bordo</option>
                        <option value="GENERAL">General</option>
                        <option value="SIMAS">SIMAS</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">Sector</label>
                    <select class="form-select" id="filterSector"><option value="">Todos</option></select>
                </div>
                <div class="form-group">
                    <label class="form-label">Colonia</label>
                    <select class="form-select" id="filterColonia"><option value="">Todas</option></select>
                </div>
                <div class="form-group">
                    <label class="form-label">Camión</label>
                    <select class="form-select" id="filterCamion"><option value="">Todos</option></select>
                </div>
                <div class="form-group">
                    <label class="form-label">Período</label>
                    <select class="form-select" id="filterPeriodo">
                        <option value="all">Todo el tiempo</option>
                        <option value="7">Últimos 7 días</option>
                        <option value="30">Últimos 30 días</option>
                        <option value="90">Últimos 90 días</option>
                        <option value="custom">Rango personalizado</option>
                    </select>
                </div>
                <div class="form-group" id="customDateRange" style="display: none;">
                    <label class="form-label">Rango de Fechas</label>
                    <div class="date-range">
                        <input type="date" id="fechaInicio">
                        <input type="date" id="fechaFin">
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Mes</label>
                    <select class="form-select" id="filterMes"><option value="">Todos</option></select>
                </div>
                <div class="form-group">
                    <label class="form-label">Año</label>
                    <select class="form-select" id="filterAnio"><option value="">Todos</option></select>
                </div>
                <div class="form-group" style="display: flex; align-items: flex-end;">
                    <button class="btn btn-primary" onclick="resetFilters()" style="width: 100%;">
                        <i class="fas fa-redo"></i> Resetear
                    </button>
                </div>
            </div>
        </div>

        <div class="kpi-grid">
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(40, 167, 69, 0.2);"><i class="fas fa-clipboard-list" style="color: #28a745;"></i></div>
                <div class="kpi-value" style="color: #28a745;" id="totalRegistros">0</div>
                <div class="kpi-label">Total Registros</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(16, 185, 129, 0.2);"><i class="fas fa-ruler-combined" style="color: #10B981;"></i></div>
                <div class="kpi-value" style="color: #10B981;" id="areaTotal">0</div>
                <div class="kpi-label">Área Total (m²)</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(59, 130, 246, 0.2);"><i class="fas fa-fill-drip" style="color: #3B82F6;"></i></div>
                <div class="kpi-value" style="color: #3B82F6;" id="totalLiga">0</div>
                <div class="kpi-label">Liga Total (L)</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(245, 158, 11, 0.2);"><i class="fas fa-calculator" style="color: #F59E0B;"></i></div>
                <div class="kpi-value" style="color: #F59E0B;" id="promedioLiga">0</div>
                <div class="kpi-label">Promedio Liga (L)</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(40, 167, 69, 0.2);"><i class="fas fa-road" style="color: #28a745;"></i></div>
                <div class="kpi-value" style="color: #28a745;" id="totalBacheo">0</div>
                <div class="kpi-label">Bacheo</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(245, 158, 11, 0.2);"><i class="fas fa-layer-group" style="color: #F59E0B;"></i></div>
                <div class="kpi-value" style="color: #F59E0B;" id="totalBordos">0</div>
                <div class="kpi-label">Bordos</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(16, 185, 129, 0.2);"><i class="fas fa-water" style="color: #10B981;"></i></div>
                <div class="kpi-value" style="color: #10B981;" id="totalSimas">0</div>
                <div class="kpi-label">SIMAS</div>
            </div>
            <div class="kpi-card">
                <div class="kpi-icon" style="background: rgba(59, 130, 246, 0.2);"><i class="fas fa-truck" style="color: #3B82F6;"></i></div>
                <div class="kpi-value" style="color: #3B82F6;" id="camionesActivos">0</div>
                <div class="kpi-label">Camiones Activos</div>
            </div>
        </div>

        <div class="charts-grid">
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-chart-pie"></i> Trabajos por Tipo</h3></div>
                <div class="chart-wrapper"><canvas id="tipoChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-fill-drip"></i> Consumo de Liga por Tipo</h3></div>
                <div class="chart-wrapper"><canvas id="ligaChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-chart-line"></i> Liga Diaria (Últimos 7 días)</h3></div>
                <div class="chart-wrapper"><canvas id="ligaDiariaChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-map-marked-alt"></i> Top 5 Sectores</h3></div>
                <div class="chart-wrapper"><canvas id="sectoresChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-building"></i> Top 5 Colonias</h3></div>
                <div class="chart-wrapper"><canvas id="coloniasChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-truck-moving"></i> Rendimiento por Camión</h3></div>
                <div class="chart-wrapper"><canvas id="camionesChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-calendar-week"></i> Producción Semanal</h3></div>
                <div class="chart-wrapper"><canvas id="semanalChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-chart-line"></i> Tendencia Mensual</h3></div>
                <div class="chart-wrapper"><canvas id="tendenciaChart"></canvas></div>
            </div>
            <div class="chart-card">
                <div class="chart-header"><h3 class="chart-title"><i class="fas fa-percentage"></i> Distribución de Área por Tipo</h3></div>
                <div class="chart-wrapper"><canvas id="areaChart"></canvas></div>
            </div>
        </div>
    </div>

    <div id="notification" class="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notificationText"></span>
    </div>

    <script>
        let allRecords = [], filteredRecords = [], navPanelOpen = false;
        const charts = {};

        document.addEventListener('DOMContentLoaded', init);

        function init() {
            setupEventListeners();
            loadRecords();
            populateFilters();
            applyFilters();
        }

        function toggleNavPanel() {
            const navPanel = document.getElementById('navPanel');
            const overlay = document.getElementById('navPanelOverlay');
            const toggleBtn = document.getElementById('navToggle');
            navPanelOpen = !navPanelOpen;
            if (navPanelOpen) {
                navPanel.classList.add('open');
                overlay.classList.add('active');
                toggleBtn.classList.add('active');
                toggleBtn.innerHTML = '<i class="fas fa-times"></i>';
                document.body.style.overflow = 'hidden';
            } else {
                navPanel.classList.remove('open');
                overlay.classList.remove('active');
                toggleBtn.classList.remove('active');
                toggleBtn.innerHTML = '<i class="fas fa-th-large"></i>';
                document.body.style.overflow = '';
            }
        }

        function redirectTo(module) {
            if (navPanelOpen) toggleNavPanel();
            const urls = {
                'captura': '/Home/CapturaBacheo',
                'programacion': '/Home/ProgramacionBacheo',
                'mapa': '/Home/MapaBacheo',
                'rastreo': '/Home/RastreoBacheo',
                'dashboard': '/Home/DashboardBacheo',
                'reportes': '/Home/ReportesBacheo',
                'material': '/Home/MaterialUtilizadoBacheo',
                'asistencia': '/Home/AsistenciaPersonalBacheo',
                'repositorio': '/Home/RepositorioPlacasBacheo',
                'citas': '/Home/AgendarCitasMantenimiento',
                'oficios': '/Home/EnviarOficiosAlmacenBacheo'
            };
            if (urls[module]) {
                showNotification('Navegando a ' + module, 'info');
                setTimeout(() => window.location.href = urls[module], 800);
            }
        }

        function setupEventListeners() {
            ['filterTipo', 'filterSector', 'filterColonia', 'filterCamion', 'filterMes', 'filterAnio', 'fechaInicio', 'fechaFin'].forEach(id => {
                document.getElementById(id).addEventListener('change', applyFilters);
            });
            document.getElementById('filterPeriodo').addEventListener('change', function() {
                document.getElementById('customDateRange').style.display = this.value === 'custom' ? 'block' : 'none';
                applyFilters();
            });
        }

        function loadRecords() {
            const saved = localStorage.getItem('serviciosPrimariosRecords');
            if (saved) {
                allRecords = JSON.parse(saved);
            }
            if (allRecords.length === 0) {
                generateSampleData();
            }
        }

        function generateSampleData() {
            const tipos = ['BACHEO', 'BORDO', 'GENERAL', 'SIMAS'];
            const sectores = ['311', '312', '313', '314', '315'];
            const colonias = ['ZONA CENTRO', 'NUEVA ROSITA', 'LAS AMERICAS', 'TECNOLOGICO', 'SATELITE'];
            const camiones = ['19', '23', '27', '31', '35'];

            for (let i = 0; i < 120; i++) {
                const date = new Date();
                date.setDate(date.getDate() - Math.floor(Math.random() * 90));
                const tipo = tipos[Math.floor(Math.random() * tipos.length)];
                const area = parseFloat((Math.random() * 50 + 10).toFixed(2));
                const factor = tipo !== 'SIMAS' ? 0.5 : 0;
                const liga = tipo !== 'SIMAS' ? parseFloat((area * factor).toFixed(2)) : 0;

                allRecords.push({
                    id: i + 1,
                    type: tipo,
                    sector: sectores[Math.floor(Math.random() * sectores.length)],
                    date: date.toISOString().split('T')[0],
                    colony: colonias[Math.floor(Math.random() * colonias.length)],
                    truck: camiones[Math.floor(Math.random() * camiones.length)],
                    area: area,
                    factorLiga: factor,
                    ligaLitros: liga
                });
            }
        }

        function populateFilters() {
            const sectores = [...new Set(allRecords.map(r => r.sector))].sort();
            const colonias = [...new Set(allRecords.map(r => r.colony))].sort();
            const camiones = [...new Set(allRecords.map(r => r.truck))].sort();

            document.getElementById('filterSector').innerHTML = '<option value="">Todos</option>' + sectores.map(s => '<option value="' + s + '">Sector ' + s + '</option>').join('');
            document.getElementById('filterColonia').innerHTML = '<option value="">Todas</option>' + colonias.map(c => '<option value="' + c + '">' + c + '</option>').join('');
            document.getElementById('filterCamion').innerHTML = '<option value="">Todos</option>' + camiones.map(c => '<option value="' + c + '">Camión ' + c + '</option>').join('');

            const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
            document.getElementById('filterMes').innerHTML = '<option value="">Todos</option>' + meses.map((m, i) => '<option value="' + (i + 1) + '">' + m + '</option>').join('');

            const anios = [...new Set(allRecords.map(r => new Date(r.date).getFullYear()))].sort().reverse();
            document.getElementById('filterAnio').innerHTML = '<option value="">Todos</option>' + anios.map(a => '<option value="' + a + '">' + a + '</option>').join('');

            document.getElementById('fechaFin').value = new Date().toISOString().split('T')[0];
        }

        function applyFilters() {
            const tipo = document.getElementById('filterTipo').value;
            const sector = document.getElementById('filterSector').value;
            const colonia = document.getElementById('filterColonia').value;
            const camion = document.getElementById('filterCamion').value;
            const periodo = document.getElementById('filterPeriodo').value;
            const mes = document.getElementById('filterMes').value;
            const anio = document.getElementById('filterAnio').value;
            const fechaInicio = document.getElementById('fechaInicio').value;
            const fechaFin = document.getElementById('fechaFin').value;

            filteredRecords = allRecords.filter(r => {
                let pass = true;
                if (tipo && r.type !== tipo) pass = false;
                if (sector && r.sector !== sector) pass = false;
                if (colonia && r.colony !== colonia) pass = false;
                if (camion && r.truck !== camion) pass = false;

                const recordDate = new Date(r.date);
                if (mes && recordDate.getMonth() + 1 !== parseInt(mes)) pass = false;
                if (anio && recordDate.getFullYear() !== parseInt(anio)) pass = false;

                if (periodo === 'custom') {
                    if (fechaInicio && r.date < fechaInicio) pass = false;
                    if (fechaFin && r.date > fechaFin) pass = false;
                } else if (periodo !== 'all') {
                    const diffDays = Math.floor((new Date() - recordDate) / (1000 * 60 * 60 * 24));
                    if (diffDays > parseInt(periodo)) pass = false;
                }
                return pass;
            });
            updateDashboard();
        }

        function resetFilters() {
            ['filterTipo', 'filterSector', 'filterColonia', 'filterCamion', 'filterMes', 'filterAnio', 'fechaInicio'].forEach(id => {
                document.getElementById(id).value = '';
            });
            document.getElementById('filterPeriodo').value = 'all';
            document.getElementById('fechaFin').value = new Date().toISOString().split('T')[0];
            document.getElementById('customDateRange').style.display = 'none';
            applyFilters();
            showNotification('Filtros reseteados', 'success');
        }

        function updateDashboard() {
            updateKPIs();
            updateCharts();
        }

        function updateKPIs() {
            document.getElementById('totalRegistros').textContent = filteredRecords.length;
            const area = filteredRecords.reduce((s, r) => s + parseFloat(r.area || 0), 0);
            document.getElementById('areaTotal').textContent = area.toFixed(0);
            const totalLiga = filteredRecords.reduce((s, r) => s + parseFloat(r.ligaLitros || 0), 0);
            document.getElementById('totalLiga').textContent = totalLiga.toFixed(0);
            const conLiga = filteredRecords.filter(r => r.ligaLitros > 0).length;
            document.getElementById('promedioLiga').textContent = conLiga > 0 ? (totalLiga / conLiga).toFixed(1) : '0';
            document.getElementById('totalBacheo').textContent = filteredRecords.filter(r => r.type === 'BACHEO').length;
            document.getElementById('totalBordos').textContent = filteredRecords.filter(r => r.type === 'BORDO').length;
            document.getElementById('totalSimas').textContent = filteredRecords.filter(r => r.type === 'SIMAS').length;
            document.getElementById('camionesActivos').textContent = new Set(filteredRecords.map(r => r.truck)).size;
        }

        function updateCharts() {
            createTipoChart();
            createLigaChart();
            createLigaDiariaChart();
            createSectoresChart();
            createColoniasChart();
            createCamionesChart();
            createSemanalChart();
            createTendenciaChart();
            createAreaChart();
        }

        function createTipoChart() {
            const data = {};
            filteredRecords.forEach(r => data[r.type] = (data[r.type] || 0) + 1);
            const ctx = document.getElementById('tipoChart');
            if (charts.tipo) charts.tipo.destroy();
            charts.tipo = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: Object.keys(data),
                    datasets: [{
                        data: Object.values(data),
                        backgroundColor: ['rgba(40, 167, 69, 0.9)', 'rgba(245, 158, 11, 0.9)', 'rgba(59, 130, 246, 0.9)', 'rgba(16, 185, 129, 0.9)'],
                        borderWidth: 4,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: { color: '#666', padding: 20, font: { size: 14, weight: '600' } }
                        }
                    }
                }
            });
        }

        function createLigaChart() {
            const ligaPorTipo = {};
            filteredRecords.forEach(r => {
                if (r.ligaLitros && r.ligaLitros > 0) {
                    ligaPorTipo[r.type] = (ligaPorTipo[r.type] || 0) + parseFloat(r.ligaLitros);
                }
            });
            const ctx = document.getElementById('ligaChart');
            if (charts.liga) charts.liga.destroy();
            charts.liga = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: Object.keys(ligaPorTipo),
                    datasets: [{
                        label: 'Liga (Litros)',
                        data: Object.values(ligaPorTipo).map(v => v.toFixed(0)),
                        backgroundColor: ['rgba(40, 167, 69, 0.9)', 'rgba(245, 158, 11, 0.9)', 'rgba(59, 130, 246, 0.9)'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createLigaDiariaChart() {
            const last7Days = [], ligas = [];
            for (let i = 6; i >= 0; i--) {
                const date = new Date();
                date.setDate(date.getDate() - i);
                const dateStr = date.toISOString().split('T')[0];
                last7Days.push(date.toLocaleDateString('es-MX', { weekday: 'short', day: 'numeric' }));
                const dayLiga = filteredRecords.filter(r => r.date === dateStr).reduce((s, r) => s + parseFloat(r.ligaLitros || 0), 0);
                ligas.push(dayLiga.toFixed(0));
            }
            const ctx = document.getElementById('ligaDiariaChart');
            if (charts.ligaDiaria) charts.ligaDiaria.destroy();
            charts.ligaDiaria = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: last7Days,
                    datasets: [{
                        label: 'Liga (L)',
                        data: ligas,
                        borderColor: 'rgba(59, 130, 246, 1)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createSectoresChart() {
            const data = {};
            filteredRecords.forEach(r => data[r.sector] = (data[r.sector] || 0) + parseFloat(r.area || 0));
            const sorted = Object.entries(data).sort((a, b) => b[1] - a[1]).slice(0, 5);
            const ctx = document.getElementById('sectoresChart');
            if (charts.sectores) charts.sectores.destroy();
            charts.sectores = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: sorted.map(s => 'Sector ' + s[0]),
                    datasets: [{
                        label: 'Área (m²)',
                        data: sorted.map(s => s[1].toFixed(0)),
                        backgroundColor: ['rgba(40, 167, 69, 0.9)', 'rgba(245, 158, 11, 0.9)', 'rgba(59, 130, 246, 0.9)', 'rgba(16, 185, 129, 0.9)', 'rgba(168, 85, 247, 0.9)'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createColoniasChart() {
            const data = {};
            filteredRecords.forEach(r => data[r.colony] = (data[r.colony] || 0) + 1);
            const sorted = Object.entries(data).sort((a, b) => b[1] - a[1]).slice(0, 5);
            const ctx = document.getElementById('coloniasChart');
            if (charts.colonias) charts.colonias.destroy();
            charts.colonias = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: sorted.map(c => c[0]),
                    datasets: [{
                        data: sorted.map(c => c[1]),
                        backgroundColor: ['rgba(16, 185, 129, 0.9)', 'rgba(59, 130, 246, 0.9)', 'rgba(245, 158, 11, 0.9)', 'rgba(40, 167, 69, 0.9)', 'rgba(168, 85, 247, 0.9)'],
                        borderWidth: 4,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: { color: '#666', padding: 20, font: { size: 13, weight: '600' } }
                        }
                    }
                }
            });
        }

        function createCamionesChart() {
            const data = {};
            filteredRecords.forEach(r => data[r.truck] = (data[r.truck] || 0) + parseFloat(r.area || 0));
            const sorted = Object.entries(data).sort((a, b) => b[1] - a[1]).slice(0, 5);
            const ctx = document.getElementById('camionesChart');
            if (charts.camiones) charts.camiones.destroy();
            charts.camiones = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: sorted.map(c => 'Camión ' + c[0]),
                    datasets: [{
                        label: 'Área (m²)',
                        data: sorted.map(c => c[1].toFixed(0)),
                        backgroundColor: ['rgba(245, 158, 11, 0.9)', 'rgba(16, 185, 129, 0.9)', 'rgba(40, 167, 69, 0.9)', 'rgba(59, 130, 246, 0.9)', 'rgba(168, 85, 247, 0.9)'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createSemanalChart() {
            const last7Days = [], areas = [];
            for (let i = 6; i >= 0; i--) {
                const date = new Date();
                date.setDate(date.getDate() - i);
                const dateStr = date.toISOString().split('T')[0];
                last7Days.push(date.toLocaleDateString('es-MX', { weekday: 'short', day: 'numeric' }));
                const dayArea = filteredRecords.filter(r => r.date === dateStr).reduce((s, r) => s + parseFloat(r.area || 0), 0);
                areas.push(dayArea.toFixed(0));
            }
            const ctx = document.getElementById('semanalChart');
            if (charts.semanal) charts.semanal.destroy();
            charts.semanal = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: last7Days,
                    datasets: [{
                        label: 'Área (m²)',
                        data: areas,
                        borderColor: 'rgba(40, 167, 69, 1)',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4,
                        fill: true,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createTendenciaChart() {
            const mesesData = {};
            filteredRecords.forEach(r => {
                const mes = r.date.substring(0, 7);
                mesesData[mes] = (mesesData[mes] || 0) + 1;
            });
            const sorted = Object.entries(mesesData).sort().slice(-6);
            const labels = sorted.map(m => {
                const [year, month] = m[0].split('-');
                const meses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];
                return meses[parseInt(month) - 1];
            });
            const ctx = document.getElementById('tendenciaChart');
            if (charts.tendencia) charts.tendencia.destroy();
            charts.tendencia = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Registros',
                        data: sorted.map(m => m[1]),
                        borderColor: 'rgba(59, 130, 246, 1)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#666', font: { size: 12 } }, grid: { color: '#e0e0e0' } },
                        x: { ticks: { color: '#666', font: { size: 12 } }, grid: { display: false } }
                    }
                }
            });
        }

        function createAreaChart() {
            const areasPorTipo = {};
            filteredRecords.forEach(r => areasPorTipo[r.type] = (areasPorTipo[r.type] || 0) + parseFloat(r.area || 0));
            const ctx = document.getElementById('areaChart');
            if (charts.area) charts.area.destroy();
            charts.area = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: Object.keys(areasPorTipo),
                    datasets: [{
                        data: Object.values(areasPorTipo).map(v => v.toFixed(0)),
                        backgroundColor: ['rgba(40, 167, 69, 0.9)', 'rgba(245, 158, 11, 0.9)', 'rgba(59, 130, 246, 0.9)', 'rgba(16, 185, 129, 0.9)'],
                        borderWidth: 4,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1.3,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: { color: '#666', padding: 20, font: { size: 14, weight: '600' } }
                        }
                    }
                }
            });
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            const text = document.getElementById('notificationText');
            const icon = notification.querySelector('i');
            icon.className = type === 'success' ? 'fas fa-check-circle' : 'fas fa-info-circle';
            notification.className = 'notification ' + type + ' show';
            text.textContent = message;
            setTimeout(() => notification.classList.remove('show'), 3000);
        }

        console.log('Dashboard Bacheo v7.0 - Verde con Liga');
        console.log('Total registros: ' + allRecords.length);
        console.log('Gráficas: 9/9 operativas (incluye liga)');
        console.log('Navegación: 11 módulos');
    </script>
</body>
</html>