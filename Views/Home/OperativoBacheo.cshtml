<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Captura en Campo - Bacheo</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }

        :root {
            --primary: #DC2626;
            --primary-light: #F87171;
            --success: #10B981;
            --danger: #EF4444;
            --info: #3B82F6;
            --bg-primary: #FFFFFF;
            --bg-secondary: #F8F9FA;
            --bg-tertiary: #E9ECEF;
            --text-primary: #212529;
            --text-secondary: #6C757D;
            --border: #DEE2E6;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #F8F9FA 0%, #FFFFFF 100%);
            color: var(--text-primary);
            min-height: 100vh;
            padding-bottom: 20px;
        }

        .header {
            background: linear-gradient(135deg, #FFFFFF 0%, #F8F9FA 100%);
            padding: 1rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
            border-bottom: 2px solid var(--border);
        }

        .header-content {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .logo {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 2px solid var(--primary);
            font-size: 1.5rem;
            color: white;
            box-shadow: 0 2px 8px rgba(220, 38, 38, 0.2);
        }

        .header-info h1 {
            font-size: 1.1rem;
            font-weight: 700;
            margin-bottom: 0.2rem;
            color: var(--text-primary);
        }

        .header-info p {
            font-size: 0.8rem;
            color: var(--text-secondary);
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 1rem;
        }

        .card {
            background: white;
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border: 1px solid var(--border);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .section-title {
            font-size: 1rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .work-type-selector {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 0.8rem;
            margin-bottom: 1rem;
        }

        .work-type-btn {
            padding: 1.2rem;
            background: white;
            border: 2px solid var(--border);
            border-radius: 12px;
            cursor: pointer;
            text-align: center;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

            .work-type-btn:active {
                transform: scale(0.98);
            }

            .work-type-btn.active {
                background: linear-gradient(135deg, var(--primary), var(--primary-light));
                border-color: var(--primary);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3);
            }

            .work-type-btn i {
                font-size: 2rem;
                display: block;
                margin-bottom: 0.5rem;
                color: var(--primary);
            }

            .work-type-btn.active i {
                color: white;
            }

            .work-type-btn p {
                font-weight: 600;
                color: var(--text-primary);
                font-size: 0.9rem;
            }

            .work-type-btn.active p {
                color: white;
            }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 0.9rem;
            background: white;
            border: 2px solid var(--border);
            border-radius: 10px;
            color: var(--text-primary);
            font-size: 1rem;
            font-family: inherit;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        }

            .form-input:focus, .form-select:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
            }

        .form-row {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 0.8rem;
        }

        @@media (max-width: 480px) {
            .form-row {
                grid-template-columns: 1fr;
            }
        }

        .btn {
            width: 100%;
            padding: 1rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .btn:active {
                transform: translateY(1px);
            }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            color: white;
        }

        .btn-success {
            background: var(--success);
            color: white;
        }

        .btn-secondary {
            background: white;
            color: var(--text-primary);
            border: 2px solid var(--border);
        }

        .location-display {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            padding: 1rem;
            background: rgba(16, 185, 129, 0.1);
            border: 2px solid var(--success);
            border-radius: 10px;
            margin-top: 0.8rem;
        }

            .location-display i {
                color: var(--success);
                font-size: 1.2rem;
            }

        .photo-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 0.8rem;
            margin-top: 0.8rem;
        }

        .photo-capture {
            position: relative;
            aspect-ratio: 1;
            background: white;
            border: 2px dashed var(--border);
            border-radius: 12px;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        }

            .photo-capture:active {
                transform: scale(0.95);
            }

            .photo-capture.has-photo {
                border-style: solid;
                border-color: var(--success);
                box-shadow: 0 2px 8px rgba(16, 185, 129, 0.2);
            }

            .photo-capture i {
                font-size: 2rem;
                color: var(--primary);
                margin-bottom: 0.3rem;
            }

            .photo-capture p {
                font-size: 0.75rem;
                color: var(--text-secondary);
                font-weight: 600;
            }

            .photo-capture img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: 10px;
            }

        .photo-remove {
            position: absolute;
            top: 5px;
            right: 5px;
            width: 28px;
            height: 28px;
            background: var(--danger);
            border: none;
            border-radius: 50%;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            z-index: 10;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .notification {
            position: fixed;
            top: 1rem;
            left: 50%;
            transform: translateX(-50%);
            padding: 1rem 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 5000;
            font-weight: 600;
            display: none;
            align-items: center;
            gap: 0.8rem;
            max-width: 90%;
        }

            .notification.show {
                display: flex;
            }

            .notification.success {
                background: var(--success);
                color: white;
            }

            .notification.error {
                background: var(--danger);
                color: white;
            }

            .notification.info {
                background: var(--info);
                color: white;
            }

        .calculated-field {
            background: rgba(220, 38, 38, 0.08) !important;
            border-color: var(--primary) !important;
            font-weight: 700;
            color: var(--primary) !important;
        }

        .help-text {
            font-size: 0.8rem;
            color: var(--text-secondary);
            margin-top: 0.3rem;
            font-style: italic;
        }

        .photo-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 3000;
            display: none;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

            .photo-modal.show {
                display: flex;
            }

        .photo-modal-content {
            background: white;
            border-radius: 16px;
            padding: 1.5rem;
            max-width: 400px;
            width: 100%;
        }

        .photo-modal h3 {
            color: var(--text-primary);
            margin-bottom: 1rem;
            font-size: 1.1rem;
        }

        .photo-options {
            display: grid;
            gap: 0.8rem;
        }

        .photo-option-btn {
            padding: 1rem;
            background: white;
            border: 2px solid var(--border);
            border-radius: 10px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 1rem;
            transition: all 0.3s ease;
        }

            .photo-option-btn:active {
                transform: scale(0.98);
            }

            .photo-option-btn:hover {
                border-color: var(--primary);
                background: #FEF2F2;
            }

            .photo-option-btn i {
                font-size: 1.5rem;
                color: var(--primary);
            }

            .photo-option-btn span {
                color: var(--text-primary);
                font-weight: 600;
            }

        .custom-marker {
            background: transparent !important;
            border: none !important;
        }

        #map {
            width: 100%;
            height: 100%;
            touch-action: pan-x pan-y;
        }

        .leaflet-container {
            font-family: inherit;
        }

        .leaflet-control-zoom a {
            width: 40px !important;
            height: 40px !important;
            line-height: 40px !important;
            font-size: 20px !important;
        }

        @@media (max-width: 768px) {
            .leaflet-control-zoom {
                margin-top: 10px;
                margin-right: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <div class="logo">
                <i class="fas fa-road"></i>
            </div>
            <div class="header-info">
                <h1>Captura en Campo - Bacheo</h1>
                <p>Sistema de Servicios Primarios</p>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="card">
            <div class="section-title">
                <i class="fas fa-clipboard-list"></i>
                Tipo de Trabajo
            </div>
            <div class="work-type-selector">
                <div class="work-type-btn" onclick="selectType(event, 'BACHEO')">
                    <i class="fas fa-road"></i>
                    <p>Bacheo</p>
                </div>
                <div class="work-type-btn" onclick="selectType(event, 'BORDO')">
                    <i class="fas fa-layer-group"></i>
                    <p>Bordo</p>
                </div>
                <div class="work-type-btn" onclick="selectType(event, 'GENERAL')">
                    <i class="fas fa-tools"></i>
                    <p>General</p>
                </div>
                <div class="work-type-btn" onclick="selectType(event, 'SIMAS')">
                    <i class="fas fa-water"></i>
                    <p>SIMAS</p>
                </div>
            </div>
        </div>

        <form id="captureForm">
            <div class="card">
                <div class="section-title">
                    <i class="fas fa-info-circle"></i>
                    Información General
                </div>

                <div id="folioPersonalGroup" style="display:none;">
                    <div class="form-group">
                        <label class="form-label">Folio</label>
                        <input type="text" class="form-input" id="personalFolio" placeholder="Ej: SIMAS-2024-001">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Sector *</label>
                        <input type="text" class="form-input" id="sector" required placeholder="Ej: 311">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Fecha *</label>
                        <input type="date" class="form-input" id="date" required>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Camión *</label>
                    <input type="text" class="form-input" id="truck" required placeholder="Ej: 19">
                </div>
            </div>

            <div class="card">
                <div class="section-title">
                    <i class="fas fa-map-marker-alt"></i>
                    Ubicación
                </div>

                <div class="form-group">
                    <label class="form-label">Colonia *</label>
                    <input type="text" class="form-input" id="colony" required placeholder="Ej: ZONA CENTRO">
                </div>

                <div class="form-group">
                    <label class="form-label">Calle *</label>
                    <input type="text" class="form-input" id="street" required placeholder="Ej: CALLE PROGRESO">
                </div>

                <div class="form-group">
                    <label class="form-label">Entre qué calles *</label>
                    <input type="text" class="form-input" id="between" required placeholder="Ej: ALTOS IBARRA Y MUTUALISMO">
                </div>

                <div class="form-group">
                    <label class="form-label">Ubicación GPS</label>
                    <div class="form-row">
                        <button type="button" class="btn btn-success" onclick="captureLocation()">
                            <i class="fas fa-location-arrow"></i>
                            GPS Actual
                        </button>
                        <button type="button" class="btn btn-success" onclick="openMapSelector()">
                            <i class="fas fa-map-marked-alt"></i>
                            Seleccionar en Mapa
                        </button>
                    </div>
                    <div id="locationDisplay" class="location-display" style="display:none;">
                        <i class="fas fa-check-circle"></i>
                        <span id="locationText"></span>
                    </div>
                </div>
            </div>

            <div class="card" id="photoSection">
                <div class="section-title">
                    <i class="fas fa-camera"></i>
                    Fotografías
                </div>

                <div class="photo-grid" id="normalPhotos">
                    <div class="photo-capture" onclick="triggerPhoto('photo1')">
                        <i class="fas fa-camera"></i>
                        <p>Antes</p>
                        <img id="preview1" style="display:none;">
                        <button type="button" class="photo-remove" id="remove1" style="display:none;" onclick="removePhoto(event, 'photo1')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('photo2')">
                        <i class="fas fa-camera"></i>
                        <p>Durante</p>
                        <img id="preview2" style="display:none;">
                        <button type="button" class="photo-remove" id="remove2" style="display:none;" onclick="removePhoto(event, 'photo2')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('photo3')">
                        <i class="fas fa-camera"></i>
                        <p>Después</p>
                        <img id="preview3" style="display:none;">
                        <button type="button" class="photo-remove" id="remove3" style="display:none;" onclick="removePhoto(event, 'photo3')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>

                <div class="photo-grid" id="simasPhotos" style="display:none;">
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto1')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 1</p>
                        <img id="previewSimas1" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas1" style="display:none;" onclick="removePhoto(event, 'simasPhoto1')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto2')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 2</p>
                        <img id="previewSimas2" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas2" style="display:none;" onclick="removePhoto(event, 'simasPhoto2')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto3')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 3</p>
                        <img id="previewSimas3" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas3" style="display:none;" onclick="removePhoto(event, 'simasPhoto3')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto4')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 4</p>
                        <img id="previewSimas4" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas4" style="display:none;" onclick="removePhoto(event, 'simasPhoto4')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto5')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 5</p>
                        <img id="previewSimas5" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas5" style="display:none;" onclick="removePhoto(event, 'simasPhoto5')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="photo-capture" onclick="triggerPhoto('simasPhoto6')">
                        <i class="fas fa-camera"></i>
                        <p>Foto 6</p>
                        <img id="previewSimas6" style="display:none;">
                        <button type="button" class="photo-remove" id="removeSimas6" style="display:none;" onclick="removePhoto(event, 'simasPhoto6')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="card" id="medidasSection">
                <div class="section-title">
                    <i class="fas fa-ruler-combined"></i>
                    Medidas
                </div>

                <div id="cantidadStep">
                    <div class="form-group">
                        <label class="form-label">¿Cuántos baches/áreas trabajaste? *</label>
                        <input type="number" class="form-input" id="cantidadBaches" min="1" placeholder="Ej: 4">
                        <p class="help-text">Ingresa la cantidad total de baches o áreas (sin límite)</p>
                    </div>
                    <button type="button" class="btn btn-secondary" onclick="generarFormularioMedidas()">
                        <i class="fas fa-arrow-right"></i>
                        Continuar
                    </button>
                </div>

                <div id="medidasFormulario" style="display:none;">
                    <p class="help-text" style="margin-bottom: 1rem;">
                        Completa las medidas para cada bache
                    </p>
                    <div id="medidasInputs"></div>
                    <button type="button" class="btn btn-secondary" onclick="volverCantidad()">
                        <i class="fas fa-arrow-left"></i>
                        Cambiar Cantidad
                    </button>
                </div>
            </div>

            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i>
                Guardar Registro
            </button>
        </form>
    </div>

    <input type="file" id="photoInput1" accept="image/*" style="display:none;">
    <input type="file" id="photoInput2" accept="image/*" style="display:none;">
    <input type="file" id="photoInput3" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas1" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas2" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas3" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas4" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas5" accept="image/*" style="display:none;">
    <input type="file" id="photoInputSimas6" accept="image/*" style="display:none;">

    <input type="file" id="cameraInput1" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInput2" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInput3" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas1" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas2" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas3" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas4" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas5" accept="image/*" capture style="display:none;">
    <input type="file" id="cameraInputSimas6" accept="image/*" capture style="display:none;">

    <div id="photoModal" class="photo-modal">
        <div class="photo-modal-content">
            <h3><i class="fas fa-images" style="color: var(--primary);"></i> Selecciona una opción</h3>
            <div class="photo-options">
                <div class="photo-option-btn" onclick="selectPhotoOption('camera')">
                    <i class="fas fa-camera"></i>
                    <span>Tomar Foto con Cámara</span>
                </div>
                <div class="photo-option-btn" onclick="selectPhotoOption('gallery')">
                    <i class="fas fa-image"></i>
                    <span>Seleccionar de Galería/Archivos</span>
                </div>
                <div class="photo-option-btn" onclick="closePhotoModal()" style="border-color: var(--danger);">
                    <i class="fas fa-times" style="color: var(--danger);"></i>
                    <span style="color: var(--danger);">Cancelar</span>
                </div>
            </div>
        </div>
    </div>

    <div id="mapModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:white; z-index:2000;">
        <div style="height:100%; display:flex; flex-direction:column;">
            <div style="display:flex; justify-content:space-between; align-items:center; padding:1rem; background:#f8f9fa; border-bottom:2px solid #e0e0e0;">
                <h3 style="color:#333; font-size:1.1rem; margin:0;">
                    <i class="fas fa-map-marked-alt" style="color:#DC2626;"></i> Seleccionar Ubicación
                </h3>
                <button onclick="closeMapModal()" style="background:#DC2626; color:white; border:none; padding:0.6rem 1rem; border-radius:8px; cursor:pointer; font-weight:600;">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div style="padding:0.8rem; background:#f8f9fa; border-bottom:1px solid #e0e0e0;">
                <p style="margin:0; color:#666; font-size:0.85rem;">
                    <i class="fas fa-info-circle" style="color:#DC2626;"></i> Toca en el mapa o arrastra el marcador rojo
                </p>
            </div>
            <div id="map" style="flex:1;"></div>
            <div style="padding:1rem; background:#f8f9fa; border-top:2px solid #e0e0e0;">
                <button onclick="confirmarUbicacion()" style="width:100%; background:#10B981; color:white; border:none; padding:1rem; border-radius:10px; font-size:1rem; font-weight:600; cursor:pointer;">
                    <i class="fas fa-check-circle"></i> Confirmar Ubicación
                </button>
            </div>
        </div>
    </div>

    <div id="notification" class="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notificationText"></span>
    </div>

    <script>
        let currentType = '';
        let currentLocation = null;
        let photos = {
            photo1: '', photo2: '', photo3: '',
            simasPhoto1: '', simasPhoto2: '', simasPhoto3: '',
            simasPhoto4: '', simasPhoto5: '', simasPhoto6: ''
        };
        let folioCounter = parseInt(localStorage.getItem('campoFolioCounter') || '1');
        let map = null;
        let marker = null;
        let tempMapLocation = null;
        let currentPhotoId = null;

        document.addEventListener('DOMContentLoaded', function () {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;

            document.getElementById('photoInput1').addEventListener('change', e => handlePhoto(e, 'photo1'));
            document.getElementById('photoInput2').addEventListener('change', e => handlePhoto(e, 'photo2'));
            document.getElementById('photoInput3').addEventListener('change', e => handlePhoto(e, 'photo3'));
            document.getElementById('photoInputSimas1').addEventListener('change', e => handlePhoto(e, 'simasPhoto1'));
            document.getElementById('photoInputSimas2').addEventListener('change', e => handlePhoto(e, 'simasPhoto2'));
            document.getElementById('photoInputSimas3').addEventListener('change', e => handlePhoto(e, 'simasPhoto3'));
            document.getElementById('photoInputSimas4').addEventListener('change', e => handlePhoto(e, 'simasPhoto4'));
            document.getElementById('photoInputSimas5').addEventListener('change', e => handlePhoto(e, 'simasPhoto5'));
            document.getElementById('photoInputSimas6').addEventListener('change', e => handlePhoto(e, 'simasPhoto6'));

            document.getElementById('cameraInput1').addEventListener('change', e => handlePhoto(e, 'photo1'));
            document.getElementById('cameraInput2').addEventListener('change', e => handlePhoto(e, 'photo2'));
            document.getElementById('cameraInput3').addEventListener('change', e => handlePhoto(e, 'photo3'));
            document.getElementById('cameraInputSimas1').addEventListener('change', e => handlePhoto(e, 'simasPhoto1'));
            document.getElementById('cameraInputSimas2').addEventListener('change', e => handlePhoto(e, 'simasPhoto2'));
            document.getElementById('cameraInputSimas3').addEventListener('change', e => handlePhoto(e, 'simasPhoto3'));
            document.getElementById('cameraInputSimas4').addEventListener('change', e => handlePhoto(e, 'simasPhoto4'));
            document.getElementById('cameraInputSimas5').addEventListener('change', e => handlePhoto(e, 'simasPhoto5'));
            document.getElementById('cameraInputSimas6').addEventListener('change', e => handlePhoto(e, 'simasPhoto6'));

            document.getElementById('captureForm').addEventListener('submit', handleSubmit);
        });

        function selectType(e, type) {
            currentType = type;

            document.querySelectorAll('.work-type-btn').forEach(btn => btn.classList.remove('active'));
            e.target.closest('.work-type-btn').classList.add('active');

            const folioGroup = document.getElementById('folioPersonalGroup');
            const medidasSection = document.getElementById('medidasSection');
            const normalPhotos = document.getElementById('normalPhotos');
            const simasPhotos = document.getElementById('simasPhotos');

            if (type === 'SIMAS') {
                folioGroup.style.display = 'block';
                medidasSection.style.display = 'block';
                normalPhotos.style.display = 'none';
                simasPhotos.style.display = 'grid';
            } else {
                medidasSection.style.display = 'block';
                normalPhotos.style.display = 'grid';
                simasPhotos.style.display = 'none';

                if (type === 'BORDO') {
                    folioGroup.style.display = 'block';
                } else {
                    folioGroup.style.display = 'none';
                }
            }

            showNotification('Tipo seleccionado: ' + type, 'success');
        }

        function generarFormularioMedidas() {
            const cantidad = parseInt(document.getElementById('cantidadBaches').value);

            if (!cantidad || cantidad < 1) {
                showNotification('Ingresa una cantidad válida', 'error');
                return;
            }

            if (cantidad > 100) {
                if (!confirm(`¿Estás seguro de registrar ${cantidad} registros? Cantidades muy grandes pueden tardar en cargar.`)) {
                    return;
                }
            }

            const container = document.getElementById('medidasInputs');
            const isBordo = currentType === 'BORDO';
            const isSimas = currentType === 'SIMAS';

            showNotification(`Generando formulario para ${cantidad} registro(s)...`, 'info');

            let html = '';
            for (let i = 1; i <= cantidad; i++) {
                html += `
                        <div class="card" style="margin-bottom: 1rem; padding: 1rem; background: white; border: 2px solid var(--border); box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);">
                            <h4 style="color: var(--primary); margin-bottom: 0.8rem; font-size: 0.95rem;">
                                <i class="fas fa-hashtag"></i> ${isSimas ? 'Registro SIMAS' : 'Bache'} ${i}
                            </h4>
                            ${!isSimas ? `
                            <div class="form-row">
                                <div class="form-group">
                                    <label class="form-label">Largo (m)</label>
                                    <input type="number" step="0.01" class="form-input" id="largo_${i}"
                                           oninput="calcularArea(${i})" required placeholder="0.00">
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Ancho (m)</label>
                                    <input type="number" step="0.01" class="form-input" id="ancho_${i}"
                                           oninput="calcularArea(${i})" required placeholder="0.00">
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group">
                                    <label class="form-label">Área (m²)</label>
                                    <input type="number" step="0.01" class="form-input calculated-field"
                                           id="area_${i}" readonly placeholder="Auto">
                                </div>
                                ${isBordo ? `
                                <div class="form-group">
                                    <label class="form-label">Grosor (cm)</label>
                                    <input type="number" step="0.01" class="form-input" id="grosor_${i}"
                                           placeholder="0.00">
                                </div>
                                ` : ''}
                            </div>
                            ` : `
                            <div class="form-group">
                                <label class="form-label">Descripción del Trabajo</label>
                                <input type="text" class="form-input" id="descripcion_${i}"
                                       required placeholder="Ej: Reparación de fuga">
                            </div>
                            `}
                        </div>
                    `;
            }

            container.innerHTML = html;
            document.getElementById('cantidadStep').style.display = 'none';
            document.getElementById('medidasFormulario').style.display = 'block';

            showNotification(`Formulario para ${cantidad} registro(s) generado exitosamente`, 'success');
        }

        function calcularArea(index) {
            const largo = parseFloat(document.getElementById(`largo_${index}`).value) || 0;
            const ancho = parseFloat(document.getElementById(`ancho_${index}`).value) || 0;
            document.getElementById(`area_${index}`).value = (largo * ancho).toFixed(2);
        }

        function volverCantidad() {
            document.getElementById('cantidadStep').style.display = 'block';
            document.getElementById('medidasFormulario').style.display = 'none';
            document.getElementById('medidasInputs').innerHTML = '';
        }

        function captureLocation() {
            if (!navigator.geolocation) {
                showNotification('GPS no disponible en este dispositivo', 'error');
                return;
            }

            showNotification('Obteniendo ubicación GPS...', 'info');

            const options = {
                enableHighAccuracy: true,
                timeout: 15000,
                maximumAge: 0
            };

            navigator.geolocation.getCurrentPosition(
                position => {
                    currentLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        accuracy: position.coords.accuracy
                    };

                    document.getElementById('locationDisplay').style.display = 'flex';
                    document.getElementById('locationText').textContent =
                        `Lat: ${currentLocation.lat.toFixed(6)}, Lng: ${currentLocation.lng.toFixed(6)} (±${Math.round(currentLocation.accuracy)}m)`;

                    showNotification('Ubicación GPS capturada exitosamente', 'success');
                },
                error => {
                    let errorMessage = 'Error al obtener ubicación';

                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            errorMessage = 'Permiso de ubicación denegado. Activa el GPS en configuración';
                            break;
                        case error.POSITION_UNAVAILABLE:
                            errorMessage = 'Ubicación no disponible. Verifica que tengas GPS activado';
                            break;
                        case error.TIMEOUT:
                            errorMessage = 'Tiempo agotado. Intenta de nuevo';
                            break;
                    }

                    showNotification(errorMessage, 'error');
                },
                options
            );
        }

        function openMapSelector() {
            document.getElementById('mapModal').style.display = 'block';
            document.body.style.overflow = 'hidden';

            setTimeout(() => {
                if (!map) {
                    const defaultLat = 26.9068;
                    const defaultLng = -101.4205;

                    map = L.map('map').setView([defaultLat, defaultLng], 15);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '© OpenStreetMap',
                        maxZoom: 19
                    }).addTo(map);

                    const redIcon = L.divIcon({
                        className: 'custom-marker',
                        html: '<div style="background:#DC2626; width:30px; height:30px; border-radius:50% 50% 50% 0; transform:rotate(-45deg); border:3px solid white; box-shadow:0 2px 8px rgba(0,0,0,0.3);"><div style="width:10px; height:10px; background:white; border-radius:50%; position:absolute; top:50%; left:50%; transform:translate(-50%, -50%) rotate(45deg);"></div></div>',
                        iconSize: [30, 30],
                        iconAnchor: [15, 30]
                    });

                    marker = L.marker([defaultLat, defaultLng], {
                        icon: redIcon,
                        draggable: true
                    }).addTo(map);

                    tempMapLocation = { lat: defaultLat, lng: defaultLng };

                    marker.on('dragend', function (e) {
                        const pos = marker.getLatLng();
                        tempMapLocation = { lat: pos.lat, lng: pos.lng };
                        showNotification('Ubicación actualizada', 'info');
                    });

                    map.on('click', function (e) {
                        marker.setLatLng(e.latlng);
                        tempMapLocation = { lat: e.latlng.lat, lng: e.latlng.lng };
                        showNotification('Ubicación seleccionada', 'info');
                    });

                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(
                            position => {
                                const userLat = position.coords.latitude;
                                const userLng = position.coords.longitude;
                                map.setView([userLat, userLng], 17);
                                marker.setLatLng([userLat, userLng]);
                                tempMapLocation = { lat: userLat, lng: userLng };

                                L.circle([userLat, userLng], {
                                    color: '#3B82F6',
                                    fillColor: '#3B82F6',
                                    fillOpacity: 0.2,
                                    radius: 50
                                }).addTo(map);

                                showNotification('Ubicación actual encontrada', 'success');
                            },
                            error => {
                                showNotification('No se pudo obtener ubicación GPS', 'error');
                            },
                            {
                                enableHighAccuracy: true,
                                timeout: 10000,
                                maximumAge: 0
                            }
                        );
                    }
                } else {
                    setTimeout(() => map.invalidateSize(), 100);
                }
            }, 100);
        }

        function closeMapModal() {
            document.getElementById('mapModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        function confirmarUbicacion() {
            if (tempMapLocation) {
                currentLocation = tempMapLocation;
                document.getElementById('locationDisplay').style.display = 'flex';
                document.getElementById('locationText').textContent =
                    `Lat: ${currentLocation.lat.toFixed(6)}, Lng: ${currentLocation.lng.toFixed(6)}`;
                showNotification('Ubicación seleccionada correctamente', 'success');
                closeMapModal();
            }
        }

        function triggerPhoto(photoId) {
            currentPhotoId = photoId;
            document.getElementById('photoModal').classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closePhotoModal() {
            document.getElementById('photoModal').classList.remove('show');
            document.body.style.overflow = 'auto';
            currentPhotoId = null;
        }

        function selectPhotoOption(option) {
            if (!currentPhotoId) return;

            closePhotoModal();

            const inputMaps = {
                camera: {
                    photo1: 'cameraInput1',
                    photo2: 'cameraInput2',
                    photo3: 'cameraInput3',
                    simasPhoto1: 'cameraInputSimas1',
                    simasPhoto2: 'cameraInputSimas2',
                    simasPhoto3: 'cameraInputSimas3',
                    simasPhoto4: 'cameraInputSimas4',
                    simasPhoto5: 'cameraInputSimas5',
                    simasPhoto6: 'cameraInputSimas6'
                },
                gallery: {
                    photo1: 'photoInput1',
                    photo2: 'photoInput2',
                    photo3: 'photoInput3',
                    simasPhoto1: 'photoInputSimas1',
                    simasPhoto2: 'photoInputSimas2',
                    simasPhoto3: 'photoInputSimas3',
                    simasPhoto4: 'photoInputSimas4',
                    simasPhoto5: 'photoInputSimas5',
                    simasPhoto6: 'photoInputSimas6'
                }
            };

            const inputId = inputMaps[option][currentPhotoId];
            if (inputId) {
                document.getElementById(inputId).click();
            }
        }

        function handlePhoto(e, photoId) {
            const file = e.target.files[0];
            if (!file) return;

            if (!file.type.startsWith('image/')) {
                showNotification('Por favor selecciona una imagen válida', 'error');
                return;
            }

            if (file.size > 10 * 1024 * 1024) {
                showNotification('La imagen es muy grande. Máximo 10MB', 'error');
                return;
            }

            showNotification('Cargando imagen...', 'info');

            const reader = new FileReader();
            reader.onload = event => {
                photos[photoId] = event.target.result;

                const previewMap = {
                    photo1: 'preview1',
                    photo2: 'preview2',
                    photo3: 'preview3',
                    simasPhoto1: 'previewSimas1',
                    simasPhoto2: 'previewSimas2',
                    simasPhoto3: 'previewSimas3',
                    simasPhoto4: 'previewSimas4',
                    simasPhoto5: 'previewSimas5',
                    simasPhoto6: 'previewSimas6'
                };
                const removeMap = {
                    photo1: 'remove1',
                    photo2: 'remove2',
                    photo3: 'remove3',
                    simasPhoto1: 'removeSimas1',
                    simasPhoto2: 'removeSimas2',
                    simasPhoto3: 'removeSimas3',
                    simasPhoto4: 'removeSimas4',
                    simasPhoto5: 'removeSimas5',
                    simasPhoto6: 'removeSimas6'
                };

                const preview = document.getElementById(previewMap[photoId]);
                const removeBtn = document.getElementById(removeMap[photoId]);
                const container = preview.parentElement;

                preview.src = event.target.result;
                preview.style.display = 'block';
                container.classList.add('has-photo');
                removeBtn.style.display = 'flex';
                container.querySelector('i').style.display = 'none';
                container.querySelector('p').style.display = 'none';

                showNotification('Imagen cargada exitosamente', 'success');
            };

            reader.onerror = () => {
                showNotification('Error al cargar la imagen', 'error');
            };

            reader.readAsDataURL(file);
        }

        function removePhoto(event, photoId) {
            event.stopPropagation();
            photos[photoId] = '';

            const previewMap = {
                photo1: 'preview1',
                photo2: 'preview2',
                photo3: 'preview3',
                simasPhoto1: 'previewSimas1',
                simasPhoto2: 'previewSimas2',
                simasPhoto3: 'previewSimas3',
                simasPhoto4: 'previewSimas4',
                simasPhoto5: 'previewSimas5',
                simasPhoto6: 'previewSimas6'
            };
            const removeMap = {
                photo1: 'remove1',
                photo2: 'remove2',
                photo3: 'remove3',
                simasPhoto1: 'removeSimas1',
                simasPhoto2: 'removeSimas2',
                simasPhoto3: 'removeSimas3',
                simasPhoto4: 'removeSimas4',
                simasPhoto5: 'removeSimas5',
                simasPhoto6: 'removeSimas6'
            };

            const preview = document.getElementById(previewMap[photoId]);
            const removeBtn = document.getElementById(removeMap[photoId]);
            const container = preview.parentElement;

            preview.style.display = 'none';
            preview.src = '';
            container.classList.remove('has-photo');
            removeBtn.style.display = 'none';
            container.querySelector('i').style.display = 'block';
            container.querySelector('p').style.display = 'block';

            showNotification('Imagen eliminada', 'info');
        }

        function generateFolio() {
            const date = new Date();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const year = date.getFullYear().toString().slice(-2);
            const num = String(folioCounter).padStart(4, '0');
            folioCounter++;
            return `BCH${month}${year}-${num}`;
        }

        function handleSubmit(e) {
            e.preventDefault();

            if (!currentType) {
                showNotification('Seleccione un tipo de trabajo', 'error');
                return;
            }

            const cantidad = parseInt(document.getElementById('cantidadBaches').value);

            if (!cantidad) {
                showNotification('Ingrese la cantidad de registros', 'error');
                return;
            }

            if (document.getElementById('medidasFormulario').style.display === 'none') {
                showNotification('Complete el formulario de medidas', 'error');
                return;
            }

            const baseData = {
                type: currentType,
                personalFolio: document.getElementById('personalFolio').value,
                sector: document.getElementById('sector').value,
                date: document.getElementById('date').value,
                colony: document.getElementById('colony').value,
                street: document.getElementById('street').value,
                between: document.getElementById('between').value,
                truck: document.getElementById('truck').value,
                location: currentLocation,
                photos: { ...photos }
            };

            let records = [];

            for (let i = 1; i <= cantidad; i++) {
                const record = {
                    ...baseData,
                    folio: generateFolio(),
                    id: Date.now() + Math.random()
                };

                if (currentType === 'SIMAS') {
                    const descripcion = document.getElementById(`descripcion_${i}`).value;
                    if (!descripcion) {
                        showNotification(`Complete la descripción del registro ${i}`, 'error');
                        return;
                    }
                    record.descripcion = descripcion;
                } else {
                    const largo = parseFloat(document.getElementById(`largo_${i}`).value);
                    const ancho = parseFloat(document.getElementById(`ancho_${i}`).value);
                    const area = parseFloat(document.getElementById(`area_${i}`).value);

                    if (!largo || !ancho) {
                        showNotification(`Complete las medidas del registro ${i}`, 'error');
                        return;
                    }

                    record.largo = largo;
                    record.ancho = ancho;
                    record.area = area;

                    if (currentType === 'BORDO') {
                        const grosor = document.getElementById(`grosor_${i}`).value;
                        record.thickness = grosor;
                    }
                }

                records.push(record);
            }

            const existing = JSON.parse(localStorage.getItem('serviciosPrimariosRecords') || '[]');
            existing.push(...records);
            localStorage.setItem('serviciosPrimariosRecords', JSON.stringify(existing));
            localStorage.setItem('campoFolioCounter', folioCounter.toString());

            showNotification(`${records.length} registro(s) guardado(s) exitosamente`, 'success');

            setTimeout(() => {
                resetForm();
            }, 2000);
        }

        function resetForm() {
            document.getElementById('captureForm').reset();
            currentType = '';
            currentLocation = null;
            photos = {
                photo1: '', photo2: '', photo3: '',
                simasPhoto1: '', simasPhoto2: '', simasPhoto3: '',
                simasPhoto4: '', simasPhoto5: '', simasPhoto6: ''
            };

            document.querySelectorAll('.work-type-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.photo-capture').forEach(cap => {
                cap.classList.remove('has-photo');
                cap.querySelector('img').style.display = 'none';
                cap.querySelector('.photo-remove').style.display = 'none';
                cap.querySelector('i').style.display = 'block';
                cap.querySelector('p').style.display = 'block';
            });

            document.getElementById('locationDisplay').style.display = 'none';
            document.getElementById('cantidadStep').style.display = 'block';
            document.getElementById('medidasFormulario').style.display = 'none';
            document.getElementById('medidasInputs').innerHTML = '';

            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;

            showNotification('Formulario listo para nuevo registro', 'info');
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            const text = document.getElementById('notificationText');
            const icon = notification.querySelector('i');

            icon.className = type === 'success' ? 'fas fa-check-circle' :
                type === 'error' ? 'fas fa-exclamation-circle' :
                    'fas fa-info-circle';

            notification.className = `notification ${type} show`;
            text.textContent = message;

            setTimeout(() => notification.classList.remove('show'), 3500);
        }
    </script>
</body>
</html>