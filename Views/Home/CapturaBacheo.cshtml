<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema Servicios Primarios - Monclova</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f5f5;
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
        }

        /* PANEL DE NAVEGACIÓN */
        .nav-panel {
            position: fixed;
            top: 0;
            right: -400px;
            width: 380px;
            height: 100vh;
            background: linear-gradient(180deg, #ffffff 0%, #f0f9f4 100%);
            box-shadow: -10px 0 30px rgba(40, 167, 69, 0.3);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 1000;
            overflow: hidden;
            border-left: 1px solid #d4edda;
        }

            .nav-panel.open {
                right: 0;
            }

        .nav-panel-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(40, 167, 69, 0.4);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 999;
        }

            .nav-panel-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .nav-toggle {
            position: fixed;
            top: 50%;
            right: 20px;
            transform: translateY(-50%);
            width: 56px;
            height: 56px;
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            border: none;
            border-radius: 50%;
            color: white;
            font-size: 1.4rem;
            cursor: pointer;
            box-shadow: 0 20px 25px -5px rgba(40, 167, 69, 0.2);
            transition: all 0.3s ease;
            z-index: 1001;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-toggle:hover {
                transform: translateY(-50%) scale(1.1);
                box-shadow: 0 25px 35px -5px rgba(40, 167, 69, 0.4);
            }

            .nav-toggle.active {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                transform: translateY(-50%) rotate(180deg);
            }

        .nav-panel-header {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            padding: 2rem 1.5rem;
            color: white;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .nav-panel-title {
            font-size: 1.3rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .nav-panel-subtitle {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .nav-panel-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-panel-close:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: rotate(90deg);
            }

        .nav-panel-body {
            padding: 1.5rem;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            background: #ffffff;
            border-radius: 12px;
            color: #334155;
            text-decoration: none;
            transition: all 0.3s ease;
            border: 1px solid #d4edda;
            cursor: pointer;
        }

            .nav-item:hover {
                background: #f0f9f4;
                transform: translateX(-5px);
                border-color: #28a745;
                box-shadow: 0 4px 6px -1px rgba(40, 167, 69, 0.1);
            }

            .nav-item.active {
                background: linear-gradient(135deg, #28a745, #1e7e34);
                color: white;
                border-color: #28a745;
            }

        .nav-item-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #28a745, #1e7e34);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            color: white;
            margin-right: 1rem;
            transition: all 0.3s ease;
        }

        .nav-item.active .nav-item-icon {
            background: rgba(255, 255, 255, 0.2);
        }

        .nav-item:hover .nav-item-icon {
            transform: scale(1.1) rotate(5deg);
        }

        .nav-item-content {
            flex: 1;
        }

        .nav-item-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #1e293b;
        }

        .nav-item.active .nav-item-title {
            color: white;
        }

        .nav-item-desc {
            font-size: 0.8rem;
            color: #64748b;
        }

        .nav-item.active .nav-item-desc {
            color: rgba(255, 255, 255, 0.8);
        }

        .nav-item-arrow {
            font-size: 0.9rem;
            color: #94a3b8;
            transition: all 0.3s ease;
        }

        .nav-item:hover .nav-item-arrow {
            color: #28a745;
            transform: translateX(3px);
        }

        .nav-item.active .nav-item-arrow {
            color: white;
        }

        .nav-panel-body::-webkit-scrollbar {
            width: 6px;
        }

        .nav-panel-body::-webkit-scrollbar-track {
            background: #f0f9f4;
        }

        .nav-panel-body::-webkit-scrollbar-thumb {
            background: #5cb85c;
            border-radius: 3px;
        }

            .nav-panel-body::-webkit-scrollbar-thumb:hover {
                background: #28a745;
            }

        .header {
            background: linear-gradient(135deg, #1e7e34 0%, #28a745 100%);
            color: white;
            padding: 1.5rem 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1600px;
            margin: 0 auto;
            gap: 1.5rem;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 1.2rem;
        }

        .logo-container {
            display: flex;
            gap: 0.8rem;
        }

        .logo {
            width: 70px;
            height: 70px;
            background: white;
            border-radius: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid #28a745;
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            overflow: hidden;
            padding: 8px;
            flex-shrink: 0;
        }

            .logo img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                display: block;
            }

            .logo i {
                color: #28a745;
                font-size: 1.8rem;
            }

        .header-info h1 {
            font-size: 1.5rem;
            font-weight: 800;
            color: white;
            margin-bottom: 0.3rem;
        }

        .header-info p {
            font-size: 0.95rem;
            color: rgba(255, 255, 255, 0.9);
        }

        .user-avatar {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid #28a745;
            overflow: hidden;
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }

            .user-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .user-avatar i {
                color: #28a745;
                font-size: 1.8rem;
            }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 1rem;
        }

        .stats-bar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 0.9rem;
            margin-bottom: 1.2rem;
        }

        .stat-item {
            background: white;
            padding: 1.1rem;
            border-radius: 12px;
            border: 1px solid #d4edda;
            text-align: center;
            transition: all 0.3s ease;
        }

            .stat-item:hover {
                border-color: #28a745;
                transform: translateY(-3px);
                box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
            }

        .stat-number {
            font-size: 1.9rem;
            font-weight: 800;
            color: #28a745;
            margin-bottom: 0.35rem;
        }

        .stat-label {
            font-size: 0.78rem;
            color: #666;
        }

        .toolbar {
            background: white;
            padding: 1.25rem;
            border-radius: 12px;
            margin-bottom: 1.2rem;
            border: 1px solid #d4edda;
        }

        .toolbar-row {
            display: flex;
            gap: 0.85rem;
            flex-wrap: wrap;
            align-items: center;
            margin-bottom: 0.85rem;
        }

            .toolbar-row:last-child {
                margin-bottom: 0;
            }

        .search-box {
            flex: 1;
            min-width: 230px;
            position: relative;
        }

            .search-box input {
                width: 100%;
                padding: 0.75rem 1rem 0.75rem 2.4rem;
                background: #f8f9fa;
                border: 1px solid #ddd;
                border-radius: 10px;
                color: #333;
                font-size: 0.88rem;
            }

            .search-box i {
                position: absolute;
                left: 0.85rem;
                top: 50%;
                transform: translateY(-50%);
                color: #666;
            }

        .filter-group {
            display: flex;
            gap: 0.65rem;
            flex-wrap: wrap;
            flex: 1;
        }

        select {
            padding: 0.75rem 0.95rem;
            background: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 10px;
            color: #333;
            font-size: 0.82rem;
            cursor: pointer;
            min-width: 125px;
            flex: 1;
        }

        .btn {
            padding: 0.75rem 1.35rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.88rem;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .btn-primary {
            background: linear-gradient(135deg, #28a745, #1e7e34);
            color: white;
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(40, 167, 69, 0.4);
            }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

            .btn-secondary:hover {
                background: #5a6268;
            }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .fab {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            width: 62px;
            height: 62px;
            border-radius: 50%;
            background: linear-gradient(135deg, #28a745, #1e7e34);
            color: white;
            border: none;
            font-size: 1.65rem;
            cursor: pointer;
            box-shadow: 0 8px 30px rgba(40, 167, 69, 0.5);
            z-index: 999;
            transition: all 0.3s ease;
        }

            .fab:hover {
                transform: scale(1.12) rotate(90deg);
                box-shadow: 0 12px 40px rgba(40, 167, 69, 0.7);
            }

        .records-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));
            gap: 1.25rem;
            margin-bottom: 2rem;
        }

        .record-card {
            background: white;
            border-radius: 15px;
            padding: 1.35rem;
            border: 1px solid #d4edda;
            transition: all 0.3s ease;
        }

            .record-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 40px rgba(40, 167, 69, 0.15);
                border-color: #28a745;
            }

        .record-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
        }

        .record-type {
            padding: 0.38rem 0.75rem;
            border-radius: 8px;
            font-size: 0.72rem;
            font-weight: 700;
        }

        .type-bacheo {
            background: rgba(40, 167, 69, 0.2);
            color: #28a745;
        }

        .type-bordo {
            background: rgba(245, 158, 11, 0.2);
            color: #F59E0B;
        }

        .type-general {
            background: rgba(59, 130, 246, 0.2);
            color: #3B82F6;
        }

        .type-simas {
            background: rgba(16, 185, 129, 0.2);
            color: #10B981;
        }

        .record-folio {
            background: #f8f9fa;
            padding: 0.38rem 0.75rem;
            border-radius: 8px;
            font-size: 0.72rem;
            font-weight: 700;
            color: #666;
            border: 1px solid #ddd;
        }

        .record-details {
            display: flex;
            flex-direction: column;
            gap: 0.45rem;
            margin-top: 0.85rem;
            padding-top: 0.85rem;
            border-top: 1px solid #e0e0e0;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.87rem;
            color: #666;
        }

            .detail-item i {
                width: 17px;
                color: #28a745;
            }

            .detail-item a {
                color: #3B82F6;
                text-decoration: none;
            }

                .detail-item a:hover {
                    text-decoration: underline;
                }

        .liga-highlight {
            background: rgba(40, 167, 69, 0.1);
            padding: 0.5rem;
            border-radius: 6px;
            border-left: 3px solid #28a745;
            font-weight: 600;
        }

        .photos-preview {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.85rem;
            padding-top: 0.85rem;
            border-top: 1px solid #e0e0e0;
        }

        .photo-thumb {
            width: 58px;
            height: 58px;
            background: #f8f9fa;
            border-radius: 8px;
            overflow: hidden;
            cursor: pointer;
            border: 1px solid #ddd;
            transition: all 0.3s ease;
            position: relative;
        }

            .photo-thumb:hover {
                transform: scale(1.08);
                border-color: #28a745;
                box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
            }

                .photo-thumb:hover::after {
                    content: '\f002';
                    font-family: 'Font Awesome 6 Free';
                    font-weight: 900;
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    color: white;
                    font-size: 1.2rem;
                    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
                    background: rgba(40, 167, 69, 0.8);
                    width: 100%;
                    height: 100%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }

            .photo-thumb img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .record-actions {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.85rem;
            padding-top: 0.85rem;
            border-top: 1px solid #e0e0e0;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

            .modal.active {
                display: flex;
            }

        .modal-content {
            background: white;
            border-radius: 17px;
            padding: 1.9rem;
            max-width: 1050px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            border: 2px solid #d4edda;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.6rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #e0e0e0;
        }

        .modal-title {
            font-size: 1.35rem;
            font-weight: 800;
            color: #28a745;
        }

        .form-group {
            margin-bottom: 1.15rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.45rem;
            font-weight: 600;
            color: #666;
            font-size: 0.87rem;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 0.75rem;
            background: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 10px;
            color: #333;
            font-size: 0.92rem;
            font-family: inherit;
        }

            .form-input:focus, .form-select:focus, .form-textarea:focus {
                outline: none;
                border-color: #28a745;
                box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
            }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(185px, 1fr));
            gap: 0.95rem;
        }

        .calculated-field {
            background: rgba(40, 167, 69, 0.12) !important;
            border-color: #28a745 !important;
            font-weight: 700;
            color: #28a745 !important;
        }

        .photo-capture-section {
            margin: 1.25rem 0;
            padding: 1.25rem;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #d4edda;
        }

        .photo-capture-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(145px, 1fr));
            gap: 0.95rem;
            margin-top: 0.95rem;
        }

        .photo-capture {
            position: relative;
            text-align: center;
            padding: 1.25rem;
            background: white;
            border: 2px dashed #ddd;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 165px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

            .photo-capture:hover {
                border-color: #28a745;
                background: #f0f9f4;
                transform: translateY(-3px);
            }

            .photo-capture.has-photo {
                border-style: solid;
                border-color: #28a745;
            }

            .photo-capture img {
                width: 100%;
                height: 115px;
                object-fit: cover;
                border-radius: 8px;
                margin-bottom: 0.45rem;
            }

            .photo-capture i {
                font-size: 2.3rem;
                color: #666;
                margin-bottom: 0.45rem;
            }

            .photo-capture p {
                font-size: 0.82rem;
                color: #666;
                font-weight: 600;
            }

        .photo-remove {
            position: absolute;
            top: 6px;
            right: 6px;
            width: 26px;
            height: 26px;
            background: #dc3545;
            border: none;
            border-radius: 50%;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.78rem;
        }

        .location-section {
            margin: 1.25rem 0;
            padding: 1.25rem;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #d4edda;
        }

        .location-display {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.95rem;
            background: white;
            border: 1px solid #28a745;
            border-radius: 10px;
            margin-top: 0.95rem;
        }

            .location-display i {
                color: #28a745;
                font-size: 1.15rem;
            }

        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 3.5rem 2rem;
            color: #666;
        }

            .empty-state i {
                font-size: 3.8rem;
                margin-bottom: 0.9rem;
                color: #ddd;
            }

        .notification {
            position: fixed;
            top: 1.6rem;
            left: 50%;
            transform: translateX(-50%);
            padding: 0.95rem 1.4rem;
            border-radius: 12px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
            z-index: 3000;
            font-weight: 600;
            display: none;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.92rem;
        }

            .notification.show {
                display: flex;
            }

            .notification.success {
                background: #28a745;
                color: white;
            }

            .notification.error {
                background: #dc3545;
                color: white;
            }

            .notification.info {
                background: #3B82F6;
                color: white;
            }

        .table-container {
            overflow-x: auto;
            margin: 1.25rem 0;
            border-radius: 12px;
            border: 1px solid #d4edda;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        th {
            background: #f8f9fa;
            padding: 0.95rem;
            text-align: left;
            font-weight: 700;
            color: #28a745;
            border-bottom: 2px solid #e0e0e0;
            font-size: 0.82rem;
        }

        td {
            padding: 0.75rem 0.95rem;
            border-bottom: 1px solid #e0e0e0;
            color: #666;
            font-size: 0.87rem;
        }

            td input {
                width: 100%;
                padding: 0.52rem;
                background: #f8f9fa;
                border: 1px solid #ddd;
                border-radius: 7px;
                color: #333;
            }

        .map-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 3000;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

            .map-modal.active {
                display: flex;
            }

        .map-modal-content {
            background: white;
            border-radius: 12px;
            width: 90%;
            max-width: 900px;
            height: 80vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .map-modal-header {
            padding: 1.5rem;
            border-bottom: 2px solid #e0e0e0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .map-modal-title {
            font-size: 1.3rem;
            font-weight: 800;
            color: #28a745;
        }

        .map-modal-body {
            flex: 1;
            position: relative;
        }

        #mapSelector {
            width: 100%;
            height: 100%;
        }

        .map-instructions {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(40, 167, 69, 0.95);
            color: white;
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 90%;
        }

        .map-modal-footer {
            padding: 1.5rem;
            border-top: 2px solid #e0e0e0;
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
        }

        .location-buttons {
            display: flex;
            gap: 0.8rem;
            flex-wrap: wrap;
        }

        .image-viewer-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 4000;
            align-items: center;
            justify-content: center;
        }

            .image-viewer-modal.active {
                display: flex;
            }

        .image-viewer-content {
            max-width: 85%;
            max-height: 75vh;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

            .image-viewer-content img {
                max-width: 100%;
                max-height: 60vh;
                object-fit: contain;
                border-radius: 8px;
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            }

        .image-viewer-close {
            position: absolute;
            top: -60px;
            right: -10px;
            background: #dc3545;
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.4);
        }

            .image-viewer-close:hover {
                background: #bb2d3b;
                transform: rotate(90deg) scale(1.1);
            }

        .image-viewer-download {
            margin-top: 20px;
            background: #28a745;
            border: none;
            padding: 0.9rem 1.8rem;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

            .image-viewer-download:hover {
                background: #1e7e34;
                transform: translateY(-2px);
                box-shadow: 0 6px 16px rgba(40, 167, 69, 0.4);
            }
    </style>
</head>
<body>
    <div class="nav-panel-overlay" id="navPanelOverlay" onclick="toggleNavPanel()"></div>

    <button class="nav-toggle" id="navToggle" onclick="toggleNavPanel()">
        <i class="fas fa-th-large"></i>
    </button>

    <div class="nav-panel" id="navPanel">
        <div class="nav-panel-header">
            <button class="nav-panel-close" onclick="toggleNavPanel()">
                <i class="fas fa-times"></i>
            </button>
            <h3 class="nav-panel-title">Sistema de Bacheo</h3>
            <p class="nav-panel-subtitle">Navegación Principal</p>
        </div>

        <div class="nav-panel-body">
            <div class="nav-item active">
                <div class="nav-item-icon">
                    <i class="fas fa-plus-circle"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Captura</div>
                    <div class="nav-item-desc">Registro de bacheos</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('programacion')">
                <div class="nav-item-icon">
                    <i class="fas fa-calendar-alt"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Programación</div>
                    <div class="nav-item-desc">Horarios y cuadrillas</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('mapa')">
                <div class="nav-item-icon">
                    <i class="fas fa-map-marked-alt"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Mapa Interactivo</div>
                    <div class="nav-item-desc">Ubicación de bacheos</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('trazado')">
                <div class="nav-item-icon">
                    <i class="fas fa-route"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Trazado de Rutas</div>
                    <div class="nav-item-desc">Planificación de recorridos</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('rastreo')">
                <div class="nav-item-icon">
                    <i class="fas fa-satellite-dish"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Rastreo GPS</div>
                    <div class="nav-item-desc">Monitoreo de unidades</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('dashboard')">
                <div class="nav-item-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Dashboard</div>
                    <div class="nav-item-desc">Estadísticas y reportes</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('reportes')">
                <div class="nav-item-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Reportes</div>
                    <div class="nav-item-desc">Incidencias ciudadanas</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('material')">
                <div class="nav-item-icon">
                    <i class="fas fa-toolbox"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Material Utilizado</div>
                    <div class="nav-item-desc">Control de inventario</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('asistencia')">
                <div class="nav-item-icon">
                    <i class="fas fa-user-check"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Asistencia</div>
                    <div class="nav-item-desc">Control de personal</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('repositorio')">
                <div class="nav-item-icon">
                    <i class="fas fa-id-card"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Repositorio Vehicular</div>
                    <div class="nav-item-desc">Gestión de unidades</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('citas')">
                <div class="nav-item-icon">
                    <i class="fas fa-wrench"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Citas Mantenimiento</div>
                    <div class="nav-item-desc">Agendar servicios</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>

            <div class="nav-item" onclick="redirectTo('oficios')">
                <div class="nav-item-icon">
                    <i class="fas fa-file-invoice"></i>
                </div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Oficios a Almacén</div>
                    <div class="nav-item-desc">Envío de solicitudes</div>
                </div>
                <div class="nav-item-arrow">
                    <i class="fas fa-chevron-right"></i>
                </div>
            </div>
        </div>
    </div>

    <header class="header">
        <div class="header-content">
            <div class="logo-section">
                <div class="logo-container">
                    <div class="logo">
                        <img src="/imagenes/Bacheo.png" alt="Bacheo" onerror="this.parentElement.innerHTML='<i class=\'fas fa-road\'></i>'">
                    </div>
                    <div class="logo">
                        <img src="/imagenes/LOGO.png" alt="Gobierno" onerror="this.parentElement.innerHTML='<i class=\'fas fa-landmark\'></i>'">
                    </div>
                </div>
                <div class="header-info">
                    <h1>Sistema de Servicios Primarios</h1>
                    <p>Municipio de Monclova, Coahuila</p>
                </div>
            </div>
            <div class="user-avatar">
                <img src="/images/usuario.jpg" alt="Usuario" onerror="this.parentElement.innerHTML='<i class=\'fas fa-user-cog\'></i>'">
            </div>
        </div>
    </header>

    <div class="container">
        <div class="stats-bar">
            <div class="stat-item">
                <div class="stat-number" id="totalRecords">0</div>
                <div class="stat-label">Total Registros</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalArea">0</div>
                <div class="stat-label">Área Total (m²)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalLiga">0</div>
                <div class="stat-label">Liga Gastada (L)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="monthRecords">0</div>
                <div class="stat-label">Mes Actual</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalSimas">0</div>
                <div class="stat-label">SIMAS</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalBordos">0</div>
                <div class="stat-label">Bordos</div>
            </div>
        </div>

        <div class="toolbar">
            <div class="toolbar-row">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="Buscar por folio, colonia, dirección...">
                </div>
                <button class="btn btn-primary" id="exportBtn">
                    <i class="fas fa-download"></i>
                    Exportar
                </button>
            </div>
            <div class="toolbar-row">
                <div class="filter-group">
                    <select id="filterType">
                        <option value="all">Todos los Tipos</option>
                        <option value="BACHEO">Bacheo</option>
                        <option value="BORDO">Bordo</option>
                        <option value="GENERAL">General</option>
                        <option value="SIMAS">SIMAS</option>
                    </select>
                    <select id="filterPeriod" onchange="updateDateFilters()">
                        <option value="">Seleccionar Periodo</option>
                        <option value="day">Por Día</option>
                        <option value="week">Por Semana</option>
                        <option value="month">Por Mes</option>
                        <option value="year">Por Año</option>
                    </select>
                    <input type="date" id="filterDate" style="display:none;" onchange="renderRecords()">
                    <select id="filterWeek" style="display:none;" onchange="renderRecords()">
                        <option value="">Seleccionar Semana</option>
                    </select>
                    <select id="filterMonthSelect" style="display:none;" onchange="renderRecords()">
                        <option value="">Seleccionar Mes</option>
                    </select>
                    <select id="filterYear" style="display:none;" onchange="renderRecords()">
                        <option value="">Seleccionar Año</option>
                    </select>
                    <select id="filterSector">
                        <option value="">Todos los Sectores</option>
                    </select>
                    <select id="filterColony">
                        <option value="">Todas las Colonias</option>
                    </select>
                    <select id="filterTruck">
                        <option value="">Todos los Camiones</option>
                    </select>
                    <button class="btn btn-secondary" onclick="clearAllFilters()" title="Limpiar filtros">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>

        <div id="recordsContainer" class="records-grid"></div>
    </div>

    <button class="fab" id="addBtn">
        <i class="fas fa-plus"></i>
    </button>

    <div id="typeModal" class="modal">
        <div class="modal-content" style="max-width: 680px;">
            <div class="modal-header">
                <h2 class="modal-title">Selecciona el Tipo de Trabajo</h2>
                <button class="btn btn-secondary" onclick="closeTypeModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 1rem;">
                <div class="photo-capture" onclick="selectWorkType('BACHEO')" style="cursor: pointer;">
                    <i class="fas fa-road" style="color: #28a745;"></i>
                    <p style="color: #333; font-weight: 700;">Bacheo</p>
                </div>
                <div class="photo-capture" onclick="selectWorkType('BORDO')" style="cursor: pointer;">
                    <i class="fas fa-layer-group" style="color: #F59E0B;"></i>
                    <p style="color: #333; font-weight: 700;">Bordo</p>
                </div>
                <div class="photo-capture" onclick="selectWorkType('GENERAL')" style="cursor: pointer;">
                    <i class="fas fa-tools" style="color: #3B82F6;"></i>
                    <p style="color: #333; font-weight: 700;">General</p>
                </div>
                <div class="photo-capture" onclick="selectWorkType('SIMAS')" style="cursor: pointer;">
                    <i class="fas fa-water" style="color: #10B981;"></i>
                    <p style="color: #333; font-weight: 700;">SIMAS</p>
                </div>
            </div>
        </div>
    </div>

    <div id="formModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Nuevo Registro</h2>
                <button class="btn btn-secondary" onclick="closeFormModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="recordForm">
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Tipo de Trabajo</label>
                        <input type="text" class="form-input" id="workTypeDisplay" readonly>
                    </div>
                    <div class="form-group" id="folioPersonalGroup" style="display:none;">
                        <label class="form-label">Folio del Personal</label>
                        <input type="text" class="form-input" id="personalFolio" placeholder="Ej: SIMAS-2024-001">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Sector</label>
                        <input type="text" class="form-input" id="sector" required placeholder="Ej: 311">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Fecha</label>
                        <input type="date" class="form-input" id="date" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Camión</label>
                        <input type="text" class="form-input" id="truck" required placeholder="Ej: 19">
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Colonia</label>
                    <input type="text" class="form-input" id="colony" required placeholder="Ej: ZONA CENTRO">
                </div>
                <div class="form-group">
                    <label class="form-label">Dirección (Calle)</label>
                    <input type="text" class="form-input" id="street" required placeholder="Ej: CALLE PROGRESO">
                </div>
                <div class="form-group">
                    <label class="form-label">Entre qué calles</label>
                    <input type="text" class="form-input" id="between" required placeholder="Ej: ALTOS IBARRA Y MUTUALISMO">
                </div>

                <div class="location-section">
                    <label class="form-label">Ubicación GPS (Opcional)</label>
                    <div class="location-buttons">
                        <button type="button" class="btn btn-success" onclick="captureCurrentLocation()" style="flex: 1;">
                            <i class="fas fa-crosshairs"></i>
                            GPS Actual
                        </button>
                        <button type="button" class="btn btn-primary" onclick="openMapSelector()" style="flex: 1;">
                            <i class="fas fa-map-marked-alt"></i>
                            Seleccionar en Mapa
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="clearLocation()" title="Limpiar ubicación">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div id="locationDisplay" class="location-display" style="display:none;">
                        <i class="fas fa-check-circle"></i>
                        <span id="locationText"></span>
                    </div>
                </div>

                <div class="form-row" id="dimensionsSection">
                    <div class="form-group">
                        <label class="form-label">Largo (m)</label>
                        <input type="number" step="0.01" class="form-input" id="base" placeholder="0.00" oninput="calculateAll()">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Ancho (m)</label>
                        <input type="number" step="0.01" class="form-input" id="height" placeholder="0.00" oninput="calculateAll()">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Área (m²)</label>
                        <input type="number" step="0.01" class="form-input calculated-field" id="area" placeholder="Auto" readonly>
                    </div>
                    <div class="form-group" id="thicknessGroup" style="display:none;">
                        <label class="form-label">Grosor (cm)</label>
                        <input type="number" step="0.01" class="form-input" id="thickness" placeholder="0.00">
                    </div>
                </div>

                <div class="form-row" id="ligaSection">
                    <div class="form-group">
                        <label class="form-label">Factor de Liga (personalizable)</label>
                        <input type="number" step="0.01" class="form-input" id="factorLiga" placeholder="Ej: 0.5" value="0.5" oninput="calculateLiga()" min="0">
                        <small style="color: #666; font-size: 0.75rem; display: block; margin-top: 0.3rem;">
                            <i class="fas fa-edit"></i> Puedes usar cualquier valor | Sugeridos: 0.5 (general) o 0.3 (ligero)
                        </small>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Liga Necesaria (Litros)</label>
                        <input type="number" step="0.01" class="form-input calculated-field" id="ligaLitros" placeholder="Auto" readonly>
                        <small style="color: #666; font-size: 0.75rem; display: block; margin-top: 0.3rem;">
                            <i class="fas fa-calculator"></i> Área × Factor = Liga
                        </small>
                    </div>
                </div>

                <div class="photo-capture-section">
                    <label class="form-label">Fotografías (Opcional)</label>
                    <div class="photo-capture-grid" id="normalPhotosSection">
                        <div class="photo-capture" id="photoCapture1" onclick="triggerPhotoInput('photo1')">
                            <i class="fas fa-camera"></i>
                            <p>Antes</p>
                            <img id="preview1" style="display:none;">
                            <button type="button" class="photo-remove" id="remove1" style="display:none;" onclick="removePhoto(event, 'photo1')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="photo-capture" id="photoCapture2" onclick="triggerPhotoInput('photo2')">
                            <i class="fas fa-camera"></i>
                            <p>Durante</p>
                            <img id="preview2" style="display:none;">
                            <button type="button" class="photo-remove" id="remove2" style="display:none;" onclick="removePhoto(event, 'photo2')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="photo-capture" id="photoCapture3" onclick="triggerPhotoInput('photo3')">
                            <i class="fas fa-camera"></i>
                            <p>Después</p>
                            <img id="preview3" style="display:none;">
                            <button type="button" class="photo-remove" id="remove3" style="display:none;" onclick="removePhoto(event, 'photo3')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="photo-capture-grid" id="simasPhotoSection" style="display:none;">
                        <div class="photo-capture" id="photoCaptureSimasOnly" onclick="triggerPhotoInput('simasPhoto')" style="grid-column: 1 / -1; max-width: 400px; margin: 0 auto;">
                            <i class="fas fa-camera"></i>
                            <p>Fotografía de SIMAS</p>
                            <img id="previewSimas" style="display:none;">
                            <button type="button" class="photo-remove" id="removeSimas" style="display:none;" onclick="removePhoto(event, 'simasPhoto')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">¿Cuántos registros con esta dirección?</label>
                    <input type="number" class="form-input" id="multipleCount" min="1" max="50" value="1" placeholder="1">
                </div>

                <button type="submit" class="btn btn-primary" style="width:100%; margin-top:1rem;">
                    <i class="fas fa-save"></i>
                    Guardar Registro
                </button>
            </form>
        </div>
    </div>

    <div id="multipleModal" class="modal">
        <div class="modal-content" style="max-width: 1150px;">
            <div class="modal-header">
                <h2 class="modal-title">Captura Múltiple</h2>
                <button class="btn btn-secondary" onclick="closeMultipleModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <p style="color: #666; margin-bottom: 1rem; font-size: 0.92rem;">Complete las medidas para cada registro. El factor de liga es ajustable para cada bacheo (por defecto 0.5)</p>
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Largo (m)</th>
                            <th>Ancho (m)</th>
                            <th>Área (m²)</th>
                            <th id="thicknessHeader" style="display:none;">Grosor (cm)</th>
                            <th>Factor Liga</th>
                            <th>Liga (L)</th>
                        </tr>
                    </thead>
                    <tbody id="multipleTableBody"></tbody>
                </table>
            </div>
            <button type="button" class="btn btn-primary" style="width:100%; margin-top:1rem;" onclick="saveMultipleRecords()">
                <i class="fas fa-save"></i>
                Guardar Todos
            </button>
        </div>
    </div>

    <input type="file" id="photoInput1" accept="image/*" capture="environment" style="display:none;">
    <input type="file" id="photoInput2" accept="image/*" capture="environment" style="display:none;">
    <input type="file" id="photoInput3" accept="image/*" capture="environment" style="display:none;">
    <input type="file" id="photoInputSimas" accept="image/*" capture="environment" style="display:none;">

    <div id="notification" class="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notificationText"></span>
    </div>

    <div id="mapModal" class="map-modal">
        <div class="map-modal-content">
            <div class="map-modal-header">
                <h3 class="map-modal-title">Seleccionar Ubicación en el Mapa</h3>
                <button class="btn btn-secondary" onclick="closeMapSelector()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="map-modal-body">
                <div class="map-instructions">
                    <i class="fas fa-hand-pointer"></i> Haz clic en el mapa para seleccionar la ubicación
                </div>
                <div id="mapSelector"></div>
            </div>
            <div class="map-modal-footer">
                <button class="btn btn-secondary" onclick="closeMapSelector()">
                    Cancelar
                </button>
                <button class="btn btn-success" onclick="confirmMapLocation()">
                    <i class="fas fa-check"></i>
                    Confirmar Ubicación
                </button>
            </div>
        </div>
    </div>

    <div id="imageViewerModal" class="image-viewer-modal" onclick="closeImageViewer()">
        <div class="image-viewer-content" onclick="event.stopPropagation()">
            <button class="image-viewer-close" onclick="closeImageViewer()">
                <i class="fas fa-times"></i>
            </button>
            <img id="imageViewerImg" src="" alt="Imagen">
            <button class="image-viewer-download" onclick="downloadCurrentImage()">
                <i class="fas fa-download"></i>
                Descargar Imagen
            </button>
        </div>
    </div>

    <script>
        let records = [];
        let currentWorkType = '';
        let currentLocation = null;
        let tempFormData = {};
        let folioCounter = 1;
        let editingRecordId = null;
        let navPanelOpen = false;
        const photos = { photo1: '', photo2: '', photo3: '', simasPhoto: '' };

        let mapSelector = null;
        let tempMarker = null;
        let selectedLocation = null;
        let currentImageSrc = '';

        document.addEventListener('DOMContentLoaded', function() {
            loadRecords();
            setupEventListeners();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;
            updateStats();
            populateFilters();

            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    if (document.getElementById('imageViewerModal').classList.contains('active')) {
                        closeImageViewer();
                    }
                    if (document.getElementById('mapModal').classList.contains('active')) {
                        closeMapSelector();
                    }
                }
            });
        });

        function toggleNavPanel() {
            const navPanel = document.getElementById('navPanel');
            const overlay = document.getElementById('navPanelOverlay');
            const toggleBtn = document.getElementById('navToggle');

            navPanelOpen = !navPanelOpen;

            if (navPanelOpen) {
                navPanel.classList.add('open');
                overlay.classList.add('active');
                toggleBtn.classList.add('active');
                toggleBtn.innerHTML = '<i class="fas fa-times"></i>';
                document.body.style.overflow = 'hidden';
            } else {
                navPanel.classList.remove('open');
                overlay.classList.remove('active');
                toggleBtn.classList.remove('active');
                toggleBtn.innerHTML = '<i class="fas fa-th-large"></i>';
                document.body.style.overflow = '';
            }
        }

        function redirectTo(module) {
            if (navPanelOpen) toggleNavPanel();

            const urls = {
                'programacion': '/Home/ProgramacionBacheo',
                'mapa': '/Home/MapaBacheo',
                'trazado': '/Home/TrazadoRutasBacheo',
                'rastreo': '/Home/RastreoBacheo',
                'dashboard': '/Home/DashboardBacheo',
                'reportes': '/Home/ReportesBacheo',
                'material': '/Home/MaterialUtilizadoBacheo',
                'asistencia': '/Home/AsistenciaPersonalBacheo',
                'repositorio': '/Home/RepositorioPlacasBacheo',
                'citas': '/Home/AgendarCitasMantenimiento',
                'oficios': '/Home/EnviarOficiosAlmacenBacheo'
            };

            if (urls[module]) {
                showNotification('Navegando a ' + module, 'info');
                setTimeout(function() {
                    window.location.href = urls[module];
                }, 800);
            }
        }

        function setupEventListeners() {
            document.getElementById('addBtn').addEventListener('click', openTypeModal);
            document.getElementById('recordForm').addEventListener('submit', handleFormSubmit);
            document.getElementById('searchInput').addEventListener('input', renderRecords);
            document.getElementById('filterType').addEventListener('change', renderRecords);
            document.getElementById('filterSector').addEventListener('change', renderRecords);
            document.getElementById('filterColony').addEventListener('change', renderRecords);
            document.getElementById('filterTruck').addEventListener('change', renderRecords);
            document.getElementById('exportBtn').addEventListener('click', exportToCSV);

            document.getElementById('photoInput1').addEventListener('change', function(e) { handlePhotoUpload(e, 'photo1'); });
            document.getElementById('photoInput2').addEventListener('change', function(e) { handlePhotoUpload(e, 'photo2'); });
            document.getElementById('photoInput3').addEventListener('change', function(e) { handlePhotoUpload(e, 'photo3'); });
            document.getElementById('photoInputSimas').addEventListener('change', function(e) { handlePhotoUpload(e, 'simasPhoto'); });
        }

        function calculateAll() {
            const base = parseFloat(document.getElementById('base').value) || 0;
            const height = parseFloat(document.getElementById('height').value) || 0;
            const area = (base * height).toFixed(2);
            document.getElementById('area').value = area;
            calculateLiga();
        }

        function calculateLiga() {
            const area = parseFloat(document.getElementById('area').value) || 0;
            const factor = parseFloat(document.getElementById('factorLiga').value) || 0;

            if (area > 0 && factor > 0) {
                const litros = (area * factor).toFixed(2);
                document.getElementById('ligaLitros').value = litros;
            } else {
                document.getElementById('ligaLitros').value = '';
            }
        }

        function openTypeModal() {
            document.getElementById('typeModal').classList.add('active');
        }

        function closeTypeModal() {
            document.getElementById('typeModal').classList.remove('active');
        }

        function selectWorkType(type) {
            currentWorkType = type;
            document.getElementById('workTypeDisplay').value = type;

            const folioGroup = document.getElementById('folioPersonalGroup');
            const thicknessGroup = document.getElementById('thicknessGroup');
            const ligaSection = document.getElementById('ligaSection');
            const dimensionsSection = document.getElementById('dimensionsSection');
            const normalPhotosSection = document.getElementById('normalPhotosSection');
            const simasPhotoSection = document.getElementById('simasPhotoSection');

            if (type === 'SIMAS') {
                folioGroup.style.display = 'block';
                dimensionsSection.style.display = 'none';
                ligaSection.style.display = 'none';
                normalPhotosSection.style.display = 'none';
                simasPhotoSection.style.display = 'grid';
            } else {
                dimensionsSection.style.display = 'grid';
                ligaSection.style.display = 'grid';
                normalPhotosSection.style.display = 'grid';
                simasPhotoSection.style.display = 'none';
                if (type === 'BORDO') {
                    folioGroup.style.display = 'block';
                    thicknessGroup.style.display = 'block';
                } else {
                    folioGroup.style.display = 'none';
                    thicknessGroup.style.display = 'none';
                }
            }

            closeTypeModal();
            document.getElementById('formModal').classList.add('active');
        }

        function closeFormModal() {
            document.getElementById('formModal').classList.remove('active');
            document.getElementById('recordForm').reset();
            photos.photo1 = '';
            photos.photo2 = '';
            photos.photo3 = '';
            photos.simasPhoto = '';
            currentLocation = null;
            selectedLocation = null;
            if (tempMarker && mapSelector) {
                mapSelector.removeLayer(tempMarker);
                tempMarker = null;
            }
            editingRecordId = null;
            resetPhotoPreviews();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;
            document.querySelector('#formModal .modal-title').textContent = 'Nuevo Registro';
            document.getElementById('locationDisplay').style.display = 'none';
        }

        function closeMultipleModal() {
            document.getElementById('multipleModal').classList.remove('active');
        }

        function captureCurrentLocation() {
            if (!navigator.geolocation) {
                showNotification('Geolocalización no disponible', 'error');
                return;
            }

            showNotification('Obteniendo ubicación actual...', 'info');

            navigator.geolocation.getCurrentPosition(
                function(position) {
                    currentLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    document.getElementById('locationDisplay').style.display = 'flex';
                    document.getElementById('locationText').textContent =
                        'Lat: ' + currentLocation.lat.toFixed(6) + ', Lng: ' + currentLocation.lng.toFixed(6);
                    showNotification('Ubicación GPS capturada', 'success');
                },
                function(error) {
                    showNotification('Error al obtener GPS: ' + error.message, 'error');
                }
            );
        }

        function openMapSelector() {
            document.getElementById('mapModal').classList.add('active');

            setTimeout(function() {
                if (!mapSelector) {
                    const monclova = [26.9070, -101.4205];
                    mapSelector = L.map('mapSelector').setView(monclova, 13);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '© OpenStreetMap contributors',
                        maxZoom: 19
                    }).addTo(mapSelector);

                    const markerIcon = L.divIcon({
                        html: '<div style="background: #28a745; width: 40px; height: 40px; border-radius: 50% 50% 50% 0; transform: rotate(-45deg); border: 3px solid white; box-shadow: 0 4px 12px rgba(0,0,0,0.4); display: flex; align-items: center; justify-content: center;"><i class="fas fa-map-marker-alt" style="color: white; transform: rotate(45deg); font-size: 18px;"></i></div>',
                        className: '',
                        iconSize: [40, 40],
                        iconAnchor: [20, 40]
                    });

                    mapSelector.on('click', function(e) {
                        if (tempMarker) {
                            mapSelector.removeLayer(tempMarker);
                        }
                        tempMarker = L.marker([e.latlng.lat, e.latlng.lng], { icon: markerIcon }).addTo(mapSelector);
                        selectedLocation = {
                            lat: e.latlng.lat,
                            lng: e.latlng.lng
                        };
                    });
                }

                mapSelector.invalidateSize();

                if (currentLocation) {
                    mapSelector.setView([currentLocation.lat, currentLocation.lng], 16);

                    if (tempMarker) {
                        mapSelector.removeLayer(tempMarker);
                    }

                    const markerIcon = L.divIcon({
                        html: '<div style="background: #28a745; width: 40px; height: 40px; border-radius: 50% 50% 50% 0; transform: rotate(-45deg); border: 3px solid white; box-shadow: 0 4px 12px rgba(0,0,0,0.4); display: flex; align-items: center; justify-content: center;"><i class="fas fa-map-marker-alt" style="color: white; transform: rotate(45deg); font-size: 18px;"></i></div>',
                        className: '',
                        iconSize: [40, 40],
                        iconAnchor: [20, 40]
                    });

                    tempMarker = L.marker([currentLocation.lat, currentLocation.lng], { icon: markerIcon }).addTo(mapSelector);
                    selectedLocation = currentLocation;
                }
            }, 100);
        }

        function closeMapSelector() {
            document.getElementById('mapModal').classList.remove('active');
        }

        function confirmMapLocation() {
            if (!selectedLocation) {
                showNotification('Por favor selecciona una ubicación en el mapa', 'error');
                return;
            }

            currentLocation = selectedLocation;
            document.getElementById('locationDisplay').style.display = 'flex';
            document.getElementById('locationText').textContent =
                'Lat: ' + currentLocation.lat.toFixed(6) + ', Lng: ' + currentLocation.lng.toFixed(6);

            closeMapSelector();
            showNotification('Ubicación seleccionada correctamente', 'success');
        }

        function clearLocation() {
            currentLocation = null;
            selectedLocation = null;
            if (tempMarker && mapSelector) {
                mapSelector.removeLayer(tempMarker);
                tempMarker = null;
            }
            document.getElementById('locationDisplay').style.display = 'none';
            showNotification('Ubicación eliminada', 'info');
        }

        function triggerPhotoInput(photoId) {
            let inputId;
            if (photoId === 'photo1') {
                inputId = 'photoInput1';
            } else if (photoId === 'photo2') {
                inputId = 'photoInput2';
            } else if (photoId === 'photo3') {
                inputId = 'photoInput3';
            } else if (photoId === 'simasPhoto') {
                inputId = 'photoInputSimas';
            }
            document.getElementById(inputId).click();
        }

        function handlePhotoUpload(e, photoId) {
            const file = e.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(event) {
                photos[photoId] = event.target.result;

                let previewId, captureId, removeBtnId;
                if (photoId === 'simasPhoto') {
                    previewId = 'previewSimas';
                    captureId = 'photoCaptureSimasOnly';
                    removeBtnId = 'removeSimas';
                } else {
                    const num = photoId.slice(-1);
                    previewId = 'preview' + num;
                    captureId = 'photoCapture' + num;
                    removeBtnId = 'remove' + num;
                }

                const preview = document.getElementById(previewId);
                const capture = document.getElementById(captureId);
                const removeBtn = document.getElementById(removeBtnId);

                preview.src = event.target.result;
                preview.style.display = 'block';
                capture.classList.add('has-photo');
                removeBtn.style.display = 'flex';

                capture.querySelector('i').style.display = 'none';
                capture.querySelector('p').style.display = 'none';

                showNotification('Imagen cargada', 'success');
            };
            reader.readAsDataURL(file);
        }

        function removePhoto(event, photoId) {
            event.stopPropagation();
            photos[photoId] = '';

            let previewId, captureId, removeBtnId, inputId;
            if (photoId === 'simasPhoto') {
                previewId = 'previewSimas';
                captureId = 'photoCaptureSimasOnly';
                removeBtnId = 'removeSimas';
                inputId = 'photoInputSimas';
            } else {
                const num = photoId.slice(-1);
                previewId = 'preview' + num;
                captureId = 'photoCapture' + num;
                removeBtnId = 'remove' + num;
                inputId = 'photoInput' + num;
            }

            const preview = document.getElementById(previewId);
            const capture = document.getElementById(captureId);
            const removeBtn = document.getElementById(removeBtnId);
            const input = document.getElementById(inputId);

            preview.style.display = 'none';
            preview.src = '';
            capture.classList.remove('has-photo');
            removeBtn.style.display = 'none';
            capture.querySelector('i').style.display = 'block';
            capture.querySelector('p').style.display = 'block';
            input.value = '';

            showNotification('Imagen eliminada', 'info');
        }

        function resetPhotoPreviews() {
            for (let i = 1; i <= 3; i++) {
                const preview = document.getElementById('preview' + i);
                const capture = document.getElementById('photoCapture' + i);
                const removeBtn = document.getElementById('remove' + i);
                const input = document.getElementById('photoInput' + i);

                preview.style.display = 'none';
                preview.src = '';
                capture.classList.remove('has-photo');
                removeBtn.style.display = 'none';
                capture.querySelector('i').style.display = 'block';
                capture.querySelector('p').style.display = 'block';
                if (input) input.value = '';
            }

            const previewSimas = document.getElementById('previewSimas');
            const captureSimas = document.getElementById('photoCaptureSimasOnly');
            const removeBtnSimas = document.getElementById('removeSimas');
            const inputSimas = document.getElementById('photoInputSimas');

            if (previewSimas) {
                previewSimas.style.display = 'none';
                previewSimas.src = '';
                captureSimas.classList.remove('has-photo');
                removeBtnSimas.style.display = 'none';
                captureSimas.querySelector('i').style.display = 'block';
                captureSimas.querySelector('p').style.display = 'block';
                inputSimas.value = '';
            }
        }

        function generateFolio() {
            const date = new Date();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const year = date.getFullYear().toString().slice(-2);
            const num = String(folioCounter).padStart(4, '0');
            folioCounter++;
            return 'BCH' + month + year + '-' + num;
        }

        function handleFormSubmit(e) {
            e.preventDefault();

            tempFormData = {
                type: currentWorkType,
                personalFolio: document.getElementById('personalFolio').value,
                sector: document.getElementById('sector').value,
                date: document.getElementById('date').value,
                colony: document.getElementById('colony').value,
                street: document.getElementById('street').value,
                between: document.getElementById('between').value,
                truck: document.getElementById('truck').value,
                location: currentLocation || null,
                photos: {
                    photo1: photos.photo1,
                    photo2: photos.photo2,
                    photo3: photos.photo3,
                    simasPhoto: photos.simasPhoto
                }
            };

            const count = parseInt(document.getElementById('multipleCount').value) || 1;

            if (count === 1) {
                const ligaLitros = document.getElementById('ligaLitros').value || '';
                const factorLiga = document.getElementById('factorLiga').value || '';

                const record = {
                    id: editingRecordId || Date.now(),
                    folio: editingRecordId ? records.find(r => r.id === editingRecordId).folio : generateFolio(),
                    type: tempFormData.type,
                    personalFolio: tempFormData.personalFolio,
                    sector: tempFormData.sector,
                    date: tempFormData.date,
                    colony: tempFormData.colony,
                    street: tempFormData.street,
                    between: tempFormData.between,
                    truck: tempFormData.truck,
                    base: document.getElementById('base').value,
                    height: document.getElementById('height').value,
                    area: document.getElementById('area').value,
                    thickness: document.getElementById('thickness').value,
                    factorLiga: factorLiga,
                    ligaLitros: ligaLitros,
                    location: tempFormData.location,
                    photos: tempFormData.photos
                };

                if (editingRecordId) {
                    const index = records.findIndex(r => r.id === editingRecordId);
                    if (index !== -1) {
                        records[index] = record;
                    }
                    showNotification('Registro actualizado', 'success');
                } else {
                    records.push(record);
                    showNotification('Registro guardado', 'success');
                }

                saveRecords();
                closeFormModal();
                renderRecords();
                updateStats();
                populateFilters();
            } else {
                closeFormModal();
                setupMultipleTable(count);
                document.getElementById('multipleModal').classList.add('active');
            }
        }

        function setupMultipleTable(count) {
            const tbody = document.getElementById('multipleTableBody');
            const thicknessHeader = document.getElementById('thicknessHeader');

            const showThickness = currentWorkType === 'BORDO';
            const showLiga = currentWorkType !== 'SIMAS';

            thicknessHeader.style.display = showThickness ? 'table-cell' : 'none';

            tbody.innerHTML = '';
            for (let i = 1; i <= count; i++) {
                const row = document.createElement('tr');
                row.innerHTML = '<td>' + i + '</td>' +
                    '<td><input type="number" step="0.01" id="base_' + i + '" oninput="calcMultipleAll(' + i + ')" required placeholder="0.00"></td>' +
                    '<td><input type="number" step="0.01" id="height_' + i + '" oninput="calcMultipleAll(' + i + ')" required placeholder="0.00"></td>' +
                    '<td><input type="number" step="0.01" id="area_' + i + '" class="calculated-field" readonly placeholder="0.00"></td>' +
                    (showThickness ? '<td><input type="number" step="0.01" id="thickness_' + i + '" placeholder="0.00"></td>' : '') +
                    (showLiga ? '<td><input type="number" step="0.01" id="factor_' + i + '" value="0.5" oninput="calcMultipleLiga(' + i + ')" placeholder="0.5"></td>' : '') +
                    (showLiga ? '<td><input type="number" step="0.01" id="liga_' + i + '" class="calculated-field" readonly placeholder="0.00"></td>' : '');
                tbody.appendChild(row);
            }
        }

        function calcMultipleAll(i) {
            const base = parseFloat(document.getElementById('base_' + i).value) || 0;
            const height = parseFloat(document.getElementById('height_' + i).value) || 0;
            const area = (base * height).toFixed(2);
            document.getElementById('area_' + i).value = area;
            calcMultipleLiga(i);
        }

        function calcMultipleLiga(i) {
            if (currentWorkType === 'SIMAS') return;

            const area = parseFloat(document.getElementById('area_' + i).value) || 0;
            const factor = parseFloat(document.getElementById('factor_' + i).value) || 0;

            if (area > 0 && factor > 0) {
                const litros = (area * factor).toFixed(2);
                document.getElementById('liga_' + i).value = litros;
            } else {
                document.getElementById('liga_' + i).value = '';
            }
        }

        function saveMultipleRecords() {
            const count = document.getElementById('multipleTableBody').children.length;
            const newRecords = [];

            for (let i = 1; i <= count; i++) {
                const base = document.getElementById('base_' + i).value;
                const height = document.getElementById('height_' + i).value;

                if (!base || !height || parseFloat(base) <= 0 || parseFloat(height) <= 0) {
                    showNotification('Por favor completa todas las medidas del registro #' + i, 'error');
                    return;
                }

                const factorLiga = currentWorkType !== 'SIMAS' ? document.getElementById('factor_' + i).value : '';
                const ligaLitros = currentWorkType !== 'SIMAS' ? document.getElementById('liga_' + i).value : '';
                const thickness = currentWorkType === 'BORDO' ? document.getElementById('thickness_' + i).value : '';

                const record = {
                    id: Date.now() + i,
                    folio: generateFolio(),
                    type: tempFormData.type,
                    personalFolio: tempFormData.personalFolio,
                    sector: tempFormData.sector,
                    date: tempFormData.date,
                    colony: tempFormData.colony,
                    street: tempFormData.street,
                    between: tempFormData.between,
                    truck: tempFormData.truck,
                    base: base,
                    height: height,
                    area: document.getElementById('area_' + i).value,
                    thickness: thickness,
                    factorLiga: factorLiga,
                    ligaLitros: ligaLitros,
                    location: tempFormData.location,
                    photos: tempFormData.photos
                };
                newRecords.push(record);
            }

            records.push.apply(records, newRecords);
            saveRecords();
            showNotification(count + ' registros guardados correctamente', 'success');
            closeMultipleModal();
            renderRecords();
            updateStats();
            populateFilters();
        }

        function loadRecords() {
            const saved = localStorage.getItem('serviciosPrimariosRecords');
            if (saved) {
                records = JSON.parse(saved);
                folioCounter = parseInt(localStorage.getItem('folioCounter') || '1');
            }
            renderRecords();
        }

        function saveRecords() {
            localStorage.setItem('serviciosPrimariosRecords', JSON.stringify(records));
            localStorage.setItem('folioCounter', folioCounter.toString());
        }

        function renderRecords() {
            const container = document.getElementById('recordsContainer');
            const search = document.getElementById('searchInput').value.toLowerCase();
            const typeFilter = document.getElementById('filterType').value;
            const sectorFilter = document.getElementById('filterSector').value;
            const colonyFilter = document.getElementById('filterColony').value;
            const truckFilter = document.getElementById('filterTruck').value;

            let filtered = records.filter(function(r) {
                const matchSearch = !search ||
                    r.folio.toLowerCase().indexOf(search) > -1 ||
                    r.colony.toLowerCase().indexOf(search) > -1 ||
                    r.street.toLowerCase().indexOf(search) > -1 ||
                    (r.personalFolio && r.personalFolio.toLowerCase().indexOf(search) > -1);
                const matchType = typeFilter === 'all' || r.type === typeFilter;
                const matchSector = !sectorFilter || r.sector === sectorFilter;
                const matchColony = !colonyFilter || r.colony === colonyFilter;
                const matchTruck = !truckFilter || r.truck === truckFilter;
                const matchPeriod = filterByPeriod(r);
                return matchSearch && matchType && matchSector && matchColony && matchTruck && matchPeriod;
            });

            filtered.sort(function(a, b) {
                return new Date(b.date) - new Date(a.date);
            });

            if (filtered.length === 0) {
                container.innerHTML = '<div class="empty-state">' +
                    '<i class="fas fa-inbox"></i>' +
                    '<h3>No hay registros</h3>' +
                    '<p>No se encontraron registros con los filtros aplicados</p>' +
                    '</div>';
                updateStats();
                return;
            }

            container.innerHTML = filtered.map(function(r) {
                let photosHTML = '';
                if (r.type === 'SIMAS' && r.photos.simasPhoto) {
                    photosHTML = '<div class="photos-preview">' +
                        '<div class="photo-thumb" onclick="viewPhoto(\'' + r.photos.simasPhoto + '\')"><img src="' + r.photos.simasPhoto + '"></div>' +
                        '</div>';
                } else if (r.photos.photo1 || r.photos.photo2 || r.photos.photo3) {
                    photosHTML = '<div class="photos-preview">' +
                        (r.photos.photo1 ? '<div class="photo-thumb" onclick="viewPhoto(\'' + r.photos.photo1 + '\')"><img src="' + r.photos.photo1 + '"></div>' : '') +
                        (r.photos.photo2 ? '<div class="photo-thumb" onclick="viewPhoto(\'' + r.photos.photo2 + '\')"><img src="' + r.photos.photo2 + '"></div>' : '') +
                        (r.photos.photo3 ? '<div class="photo-thumb" onclick="viewPhoto(\'' + r.photos.photo3 + '\')"><img src="' + r.photos.photo3 + '"></div>' : '') +
                        '</div>';
                }

                let ligaHTML = '';
                if (r.ligaLitros && parseFloat(r.ligaLitros) > 0) {
                    const factorText = r.factorLiga ? ' (Factor: ' + r.factorLiga + ')' : '';
                    ligaHTML = '<div class="detail-item liga-highlight"><i class="fas fa-fill-drip"></i><span><strong>Liga:</strong> ' + r.ligaLitros + ' litros' + factorText + '</span></div>';
                }

                return '<div class="record-card">' +
                    '<div class="record-header">' +
                    '<span class="record-type type-' + r.type.toLowerCase() + '">' + r.type + '</span>' +
                    '<span class="record-folio">' + r.folio + '</span>' +
                    '</div>' +
                    '<h3 style="font-size:1.08rem; margin-bottom:0.45rem; color:#333;">' + r.colony + '</h3>' +
                    '<p style="color:#666; font-size:0.82rem;">' +
                    '<i class="fas fa-calendar"></i> ' + formatDate(r.date) +
                    '</p>' +
                    '<div class="record-details">' +
                    '<div class="detail-item"><i class="fas fa-map-pin"></i><span>Sector: ' + r.sector + '</span></div>' +
                    '<div class="detail-item"><i class="fas fa-road"></i><span>' + r.street + '</span></div>' +
                    '<div class="detail-item"><i class="fas fa-map-marker-alt"></i><span>Entre: ' + r.between + '</span></div>' +
                    (r.area ? '<div class="detail-item"><i class="fas fa-ruler-combined"></i><span>' + r.base + 'm × ' + r.height + 'm = ' + r.area + ' m²</span></div>' : '') +
                    (r.thickness ? '<div class="detail-item"><i class="fas fa-layer-group"></i><span>Grosor: ' + r.thickness + ' cm</span></div>' : '') +
                    ligaHTML +
                    '<div class="detail-item"><i class="fas fa-truck"></i><span>Camión: ' + r.truck + '</span></div>' +
                    (r.personalFolio ? '<div class="detail-item"><i class="fas fa-id-card"></i><span>' + r.personalFolio + '</span></div>' : '') +
                    (r.location ? '<div class="detail-item"><i class="fas fa-location-arrow"></i><a href="https://www.google.com/maps?q=' + r.location.lat + ',' + r.location.lng + '" target="_blank">Ver en Maps</a></div>' : '') +
                    '</div>' +
                    photosHTML +
                    '<div class="record-actions">' +
                    '<button class="btn btn-secondary" onclick="editRecord(' + r.id + ')" style="flex:1;"><i class="fas fa-edit"></i> Editar</button>' +
                    '<button class="btn btn-danger" onclick="deleteRecord(' + r.id + ')" style="flex:1;"><i class="fas fa-trash"></i> Eliminar</button>' +
                    '</div>' +
                    '</div>';
            }).join('');

            updateStats();
        }

        function viewPhoto(src) {
            if (!src) {
                showNotification('No hay imagen para mostrar', 'error');
                return;
            }
            currentImageSrc = src;
            document.getElementById('imageViewerImg').src = src;
            document.getElementById('imageViewerModal').classList.add('active');
        }

        function closeImageViewer() {
            document.getElementById('imageViewerModal').classList.remove('active');
            currentImageSrc = '';
        }

        function downloadCurrentImage() {
            if (!currentImageSrc) return;

            const link = document.createElement('a');
            link.href = currentImageSrc;
            link.download = 'foto_bacheo_' + new Date().getTime() + '.jpg';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            showNotification('Imagen descargada', 'success');
        }

        function deleteRecord(id) {
            if (!confirm('¿Eliminar este registro?')) return;
            records = records.filter(function(r) { return r.id !== id; });
            saveRecords();
            showNotification('Registro eliminado', 'success');
            renderRecords();
            updateStats();
            populateFilters();
        }

        function editRecord(id) {
            const record = records.find(function(r) { return r.id === id; });
            if (!record) return;

            editingRecordId = id;
            currentWorkType = record.type;

            document.getElementById('workTypeDisplay').value = record.type;
            document.getElementById('personalFolio').value = record.personalFolio || '';
            document.getElementById('sector').value = record.sector;
            document.getElementById('date').value = record.date;
            document.getElementById('colony').value = record.colony;
            document.getElementById('street').value = record.street;
            document.getElementById('between').value = record.between;
            document.getElementById('truck').value = record.truck;
            document.getElementById('base').value = record.base || '';
            document.getElementById('height').value = record.height || '';
            document.getElementById('area').value = record.area || '';
            document.getElementById('thickness').value = record.thickness || '';
            document.getElementById('factorLiga').value = record.factorLiga || '0.5';
            document.getElementById('ligaLitros').value = record.ligaLitros || '';
            document.getElementById('multipleCount').value = 1;

            currentLocation = record.location;
            selectedLocation = record.location;
            if (currentLocation) {
                document.getElementById('locationDisplay').style.display = 'flex';
                document.getElementById('locationText').textContent =
                    'Lat: ' + currentLocation.lat.toFixed(6) + ', Lng: ' + currentLocation.lng.toFixed(6);
            } else {
                document.getElementById('locationDisplay').style.display = 'none';
            }

            photos.photo1 = record.photos.photo1 || '';
            photos.photo2 = record.photos.photo2 || '';
            photos.photo3 = record.photos.photo3 || '';
            photos.simasPhoto = record.photos.simasPhoto || '';

            loadPhotoPreviews();

            const folioGroup = document.getElementById('folioPersonalGroup');
            const thicknessGroup = document.getElementById('thicknessGroup');
            const ligaSection = document.getElementById('ligaSection');
            const dimensionsSection = document.getElementById('dimensionsSection');
            const normalPhotosSection = document.getElementById('normalPhotosSection');
            const simasPhotoSection = document.getElementById('simasPhotoSection');

            if (record.type === 'SIMAS') {
                folioGroup.style.display = 'block';
                dimensionsSection.style.display = 'none';
                ligaSection.style.display = 'none';
                normalPhotosSection.style.display = 'none';
                simasPhotoSection.style.display = 'grid';
            } else {
                dimensionsSection.style.display = 'grid';
                ligaSection.style.display = 'grid';
                normalPhotosSection.style.display = 'grid';
                simasPhotoSection.style.display = 'none';
                if (record.type === 'BORDO') {
                    folioGroup.style.display = 'block';
                    thicknessGroup.style.display = 'block';
                } else {
                    folioGroup.style.display = 'none';
                    thicknessGroup.style.display = 'none';
                }
            }

            document.querySelector('#formModal .modal-title').textContent = 'Editar Registro';
            document.getElementById('formModal').classList.add('active');
            showNotification('Modo edición activado', 'info');
        }

        function loadPhotoPreviews() {
            if (photos.photo1) {
                document.getElementById('preview1').src = photos.photo1;
                document.getElementById('preview1').style.display = 'block';
                document.getElementById('photoCapture1').classList.add('has-photo');
                document.getElementById('remove1').style.display = 'flex';
                document.getElementById('photoCapture1').querySelector('i').style.display = 'none';
                document.getElementById('photoCapture1').querySelector('p').style.display = 'none';
            }
            if (photos.photo2) {
                document.getElementById('preview2').src = photos.photo2;
                document.getElementById('preview2').style.display = 'block';
                document.getElementById('photoCapture2').classList.add('has-photo');
                document.getElementById('remove2').style.display = 'flex';
                document.getElementById('photoCapture2').querySelector('i').style.display = 'none';
                document.getElementById('photoCapture2').querySelector('p').style.display = 'none';
            }
            if (photos.photo3) {
                document.getElementById('preview3').src = photos.photo3;
                document.getElementById('preview3').style.display = 'block';
                document.getElementById('photoCapture3').classList.add('has-photo');
                document.getElementById('remove3').style.display = 'flex';
                document.getElementById('photoCapture3').querySelector('i').style.display = 'none';
                document.getElementById('photoCapture3').querySelector('p').style.display = 'none';
            }
            if (photos.simasPhoto) {
                document.getElementById('previewSimas').src = photos.simasPhoto;
                document.getElementById('previewSimas').style.display = 'block';
                document.getElementById('photoCaptureSimasOnly').classList.add('has-photo');
                document.getElementById('removeSimas').style.display = 'flex';
                document.getElementById('photoCaptureSimasOnly').querySelector('i').style.display = 'none';
                document.getElementById('photoCaptureSimasOnly').querySelector('p').style.display = 'none';
            }
        }

        function updateStats() {
            const filtered = getFilteredRecordsForStats();

            document.getElementById('totalRecords').textContent = filtered.length;

            const totalArea = filtered.reduce(function(sum, r) {
                return sum + (parseFloat(r.area) || 0);
            }, 0);
            document.getElementById('totalArea').textContent = totalArea.toFixed(2);

            const totalLiga = filtered.reduce(function(sum, r) {
                return sum + (parseFloat(r.ligaLitros) || 0);
            }, 0);
            document.getElementById('totalLiga').textContent = totalLiga.toFixed(2);

            const currentMonth = new Date().toISOString().substring(0, 7);
            const monthRecords = records.filter(function(r) {
                return r.date.indexOf(currentMonth) === 0;
            }).length;
            document.getElementById('monthRecords').textContent = monthRecords;

            const simasCount = filtered.filter(function(r) { return r.type === 'SIMAS'; }).length;
            document.getElementById('totalSimas').textContent = simasCount;

            const bordosCount = filtered.filter(function(r) { return r.type === 'BORDO'; }).length;
            document.getElementById('totalBordos').textContent = bordosCount;
        }

        function getFilteredRecordsForStats() {
            const typeFilter = document.getElementById('filterType').value;
            const sectorFilter = document.getElementById('filterSector').value;
            const colonyFilter = document.getElementById('filterColony').value;
            const truckFilter = document.getElementById('filterTruck').value;

            return records.filter(function(r) {
                const matchType = typeFilter === 'all' || r.type === typeFilter;
                const matchSector = !sectorFilter || r.sector === sectorFilter;
                const matchColony = !colonyFilter || r.colony === colonyFilter;
                const matchTruck = !truckFilter || r.truck === truckFilter;
                const matchPeriod = filterByPeriod(r);
                return matchType && matchSector && matchColony && matchTruck && matchPeriod;
            });
        }

        function filterByPeriod(record) {
            const period = document.getElementById('filterPeriod').value;
            if (!period) return true;

            const recordDate = new Date(record.date);

            if (period === 'day') {
                const selectedDate = document.getElementById('filterDate').value;
                if (!selectedDate) return true;
                return record.date === selectedDate;
            }

            if (period === 'week') {
                const selectedWeek = document.getElementById('filterWeek').value;
                if (!selectedWeek) return true;
                const [year, week] = selectedWeek.split('-W');
                const recordWeek = getWeekNumber(recordDate);
                return recordDate.getFullYear() === parseInt(year) && recordWeek === parseInt(week);
            }

            if (period === 'month') {
                const selectedMonth = document.getElementById('filterMonthSelect').value;
                if (!selectedMonth) return true;
                return record.date.substring(0, 7) === selectedMonth;
            }

            if (period === 'year') {
                const selectedYear = document.getElementById('filterYear').value;
                if (!selectedYear) return true;
                return record.date.substring(0, 4) === selectedYear;
            }

            return true;
        }

        function getWeekNumber(date) {
            const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
            const dayNum = d.getUTCDay() || 7;
            d.setUTCDate(d.getUTCDate() + 4 - dayNum);
            const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
            return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
        }

        function updateDateFilters() {
            const period = document.getElementById('filterPeriod').value;
            const filterDate = document.getElementById('filterDate');
            const filterWeek = document.getElementById('filterWeek');
            const filterMonthSelect = document.getElementById('filterMonthSelect');
            const filterYear = document.getElementById('filterYear');

            filterDate.style.display = 'none';
            filterWeek.style.display = 'none';
            filterMonthSelect.style.display = 'none';
            filterYear.style.display = 'none';

            if (period === 'day') {
                filterDate.style.display = 'block';
            } else if (period === 'week') {
                filterWeek.style.display = 'block';
                populateWeeks();
            } else if (period === 'month') {
                filterMonthSelect.style.display = 'block';
                populateMonths();
            } else if (period === 'year') {
                filterYear.style.display = 'block';
                populateYears();
            }

            renderRecords();
        }

        function populateWeeks() {
            const select = document.getElementById('filterWeek');
            const currentYear = new Date().getFullYear();
            let html = '<option value="">Seleccionar Semana</option>';
            for (let week = 1; week <= 52; week++) {
                html += '<option value="' + currentYear + '-W' + String(week).padStart(2, '0') + '">Semana ' + week + ' (' + currentYear + ')</option>';
            }
            select.innerHTML = html;
        }

        function populateMonths() {
            const select = document.getElementById('filterMonthSelect');
            const months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
            const currentYear = new Date().getFullYear();
            let html = '<option value="">Seleccionar Mes</option>';
            for (let i = 0; i < 12; i++) {
                const monthValue = currentYear + '-' + String(i + 1).padStart(2, '0');
                html += '<option value="' + monthValue + '">' + months[i] + ' ' + currentYear + '</option>';
            }
            select.innerHTML = html;
        }

        function populateYears() {
            const select = document.getElementById('filterYear');
            const currentYear = new Date().getFullYear();
            let html = '<option value="">Seleccionar Año</option>';
            for (let year = currentYear; year >= currentYear - 5; year--) {
                html += '<option value="' + year + '">' + year + '</option>';
            }
            select.innerHTML = html;
        }

        function clearAllFilters() {
            document.getElementById('filterType').value = 'all';
            document.getElementById('filterPeriod').value = '';
            document.getElementById('filterDate').style.display = 'none';
            document.getElementById('filterWeek').style.display = 'none';
            document.getElementById('filterMonthSelect').style.display = 'none';
            document.getElementById('filterYear').style.display = 'none';
            document.getElementById('filterSector').value = '';
            document.getElementById('filterColony').value = '';
            document.getElementById('filterTruck').value = '';
            document.getElementById('searchInput').value = '';
            renderRecords();
            showNotification('Filtros limpiados', 'info');
        }

        function populateFilters() {
            const sectorSelect = document.getElementById('filterSector');
            const colonySelect = document.getElementById('filterColony');
            const truckSelect = document.getElementById('filterTruck');

            const sectors = records.map(function(r) { return r.sector; }).filter(function(v, i, a) { return a.indexOf(v) === i; }).sort();
            sectorSelect.innerHTML = '<option value="">Todos los Sectores</option>' +
                sectors.map(function(s) { return '<option value="' + s + '">Sector ' + s + '</option>'; }).join('');

            const colonies = records.map(function(r) { return r.colony; }).filter(function(v, i, a) { return a.indexOf(v) === i; }).sort();
            colonySelect.innerHTML = '<option value="">Todas las Colonias</option>' +
                colonies.map(function(c) { return '<option value="' + c + '">' + c + '</option>'; }).join('');

            const trucks = records.map(function(r) { return r.truck; }).filter(function(v, i, a) { return a.indexOf(v) === i; }).sort();
            truckSelect.innerHTML = '<option value="">Todos los Camiones</option>' +
                trucks.map(function(t) { return '<option value="' + t + '">Camión ' + t + '</option>'; }).join('');
        }

        function formatDate(dateStr) {
            const parts = dateStr.split('-');
            const year = parts[0];
            const month = parts[1];
            const day = parts[2];
            const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];
            return day + '-' + months[parseInt(month) - 1] + '-' + year;
        }

        function exportToCSV() {
            if (records.length === 0) {
                showNotification('No hay registros para exportar', 'error');
                return;
            }

            let csv = '\uFEFFFOLIO,TIPO,FOLIO PERSONAL,SECTOR,COLONIA,DIRECCIÓN,ENTRE CALLES,FECHA,LARGO,ANCHO,ÁREA,GROSOR,FACTOR LIGA,LIGA(LITROS),CAMIÓN,LATITUD,LONGITUD\n';

            records.forEach(function(r) {
                const lat = r.location ? r.location.lat : '';
                const lng = r.location ? r.location.lng : '';
                csv += '"' + r.folio + '","' + r.type + '","' + (r.personalFolio || '') + '","' + r.sector + '","' + r.colony + '","' + r.street + '","' + r.between + '","' + r.date + '","' + (r.base || '') + '","' + (r.height || '') + '","' + (r.area || '') + '","' + (r.thickness || '') + '","' + (r.factorLiga || '') + '","' + (r.ligaLitros || '') + '","' + r.truck + '","' + lat + '","' + lng + '"\n';
            });

            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'SERVICIOS_PRIMARIOS_' + new Date().toISOString().split('T')[0] + '.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);

            showNotification('Exportados ' + records.length + ' registros', 'success');
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            const text = document.getElementById('notificationText');
            const icon = notification.querySelector('i');

            if (type === 'success') {
                icon.className = 'fas fa-check-circle';
            } else if (type === 'error') {
                icon.className = 'fas fa-exclamation-circle';
            } else {
                icon.className = 'fas fa-info-circle';
            }

            notification.className = 'notification ' + type + ' show';
            text.textContent = message;

            setTimeout(function() {
                notification.classList.remove('show');
            }, 3000);
        }

        console.log('Sistema de Servicios Primarios v4.3 - Estilo Verde');
        console.log('✅ Cálculo de liga: Área (m²) × Factor (editable) = Litros de liga');
        console.log('✅ Factor por defecto: 0.5 | Personalizable para cada registro');
        console.log('✅ Captura múltiple: cada registro con su propio factor de liga ajustable');
        console.log('✅ Ubicación: GPS Actual o Selección en Mapa Interactivo (Opcional)');
        console.log('✅ Visor de imágenes con descarga y zoom');
        console.log('Todos los sistemas operativos');
    </script>
</body>
</html>