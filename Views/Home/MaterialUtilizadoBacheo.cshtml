<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Material Utilizado - Monclova</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #28a745;
            --primary-light: #34ce57;
            --secondary: #1e7e34;
            --success: #10B981;
            --warning: #F59E0B;
            --danger: #EF4444;
            --info: #3B82F6;
            --bg-primary: #f5f5f5;
            --bg-secondary: #ffffff;
            --bg-tertiary: #f0f9f4;
            --text-primary: #111827;
            --text-secondary: #6B7280;
            --border: #d4edda;
            --card-bg: #ffffff;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-tertiary) 100%);
            color: var(--text-primary);
            line-height: 1.6;
            min-height: 100vh;
        }

        /* Panel de Navegación - Estilo del sistema de reportes */
        .nav-panel {
            position: fixed;
            top: 0;
            right: -400px;
            width: 380px;
            height: 100vh;
            background: linear-gradient(180deg, #ffffff 0%, #f0f9f4 100%);
            box-shadow: -10px 0 30px rgba(40, 167, 69, 0.3);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 1000;
            overflow: hidden;
            border-left: 1px solid var(--border);
        }

            .nav-panel.open {
                right: 0;
            }

        .nav-panel-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(40, 167, 69, 0.4);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 999;
        }

            .nav-panel-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .nav-toggle {
            position: fixed;
            top: 50%;
            right: clamp(10px, 3vw, 20px);
            transform: translateY(-50%);
            width: clamp(48px, 8vw, 56px);
            height: clamp(48px, 8vw, 56px);
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            border: none;
            border-radius: 50%;
            color: white;
            font-size: clamp(1.2rem, 2.5vw, 1.4rem);
            cursor: pointer;
            box-shadow: 0 20px 25px -5px rgba(40, 167, 69, 0.2);
            transition: all 0.3s ease;
            z-index: 1001;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-toggle:hover {
                transform: translateY(-50%) scale(1.1);
                box-shadow: 0 25px 35px -5px rgba(40, 167, 69, 0.4);
            }

            .nav-toggle.active {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                transform: translateY(-50%) rotate(180deg);
            }

        .nav-panel-header {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            padding: 2rem 1.5rem;
            color: white;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .nav-panel-title {
            font-size: 1.3rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .nav-panel-subtitle {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .nav-panel-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .nav-panel-close:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: rotate(90deg);
            }

        .nav-panel-body {
            padding: 1.5rem;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            background: #ffffff;
            border-radius: 12px;
            color: #334155;
            text-decoration: none;
            transition: all 0.3s ease;
            border: 1px solid var(--border);
            cursor: pointer;
        }

            .nav-item:hover {
                background: var(--bg-tertiary);
                transform: translateX(-5px);
                border-color: var(--primary);
                box-shadow: 0 4px 6px -1px rgba(40, 167, 69, 0.1);
            }

            .nav-item.active {
                background: linear-gradient(135deg, #28a745, #1e7e34);
                color: white;
                border-color: var(--primary);
            }

        .nav-item-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #28a745, #1e7e34);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            color: white;
            margin-right: 1rem;
            transition: all 0.3s ease;
        }

        .nav-item.active .nav-item-icon {
            background: rgba(255, 255, 255, 0.2);
        }

        .nav-item:hover .nav-item-icon {
            transform: scale(1.1) rotate(5deg);
        }

        .nav-item-content {
            flex: 1;
        }

        .nav-item-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #1e293b;
        }

        .nav-item.active .nav-item-title {
            color: white;
        }

        .nav-item-desc {
            font-size: 0.8rem;
            color: #64748b;
        }

        .nav-item.active .nav-item-desc {
            color: rgba(255, 255, 255, 0.8);
        }

        .nav-item-arrow {
            font-size: 0.9rem;
            color: #94a3b8;
            transition: all 0.3s ease;
        }

        .nav-item:hover .nav-item-arrow {
            color: var(--primary);
            transform: translateX(3px);
        }

        .nav-item.active .nav-item-arrow {
            color: white;
        }

        .header {
            background: linear-gradient(135deg, #1e7e34 0%, #28a745 100%);
            color: white;
            padding: 1.5rem 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 1.2rem;
        }

        .logo-container {
            display: flex;
            gap: 0.8rem;
        }

        .logo {
            width: 70px;
            height: 70px;
            background: white;
            border-radius: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid var(--primary);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            overflow: hidden;
            padding: 5px;
        }

            .logo i {
                color: var(--primary);
                font-size: 1.4rem;
            }

            .logo img {
                width: 100%;
                height: 100%;
                object-fit: contain;
            }

        .header-info h1 {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.3rem;
        }

        .header-info p {
            font-size: 1rem;
            opacity: 0.9;
        }

        .user-avatar {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid var(--primary);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
            overflow: hidden;
        }

            .user-avatar i {
                color: var(--primary);
                font-size: 1.3rem;
            }

            .user-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: clamp(1rem, 4vw, 2rem);
            padding-right: clamp(1rem, 8vw, 100px);
        }

        .stats-bar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-item {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 12px;
            border: 1px solid var(--border);
            text-align: center;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

            .stat-item:hover {
                border-color: var(--primary);
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(40, 167, 69, 0.15);
            }

        .stat-number {
            font-size: 2rem;
            font-weight: 800;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--text-secondary);
            font-weight: 600;
        }

        .toolbar {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            border: 1px solid var(--border);
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .toolbar-row {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            align-items: center;
            margin-bottom: 1rem;
        }

            .toolbar-row:last-child {
                margin-bottom: 0;
            }

        .search-box {
            flex: 1;
            min-width: 250px;
            position: relative;
        }

            .search-box input {
                width: 100%;
                padding: 0.75rem 1rem 0.75rem 2.5rem;
                background: var(--bg-tertiary);
                border: 2px solid var(--border);
                border-radius: 10px;
                color: var(--text-primary);
                font-size: 0.9rem;
                transition: all 0.3s ease;
            }

                .search-box input:focus {
                    outline: none;
                    border-color: var(--primary);
                    box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
                }

            .search-box i {
                position: absolute;
                left: 1rem;
                top: 50%;
                transform: translateY(-50%);
                color: var(--text-secondary);
            }

        .filter-group {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            flex: 1;
        }

        select {
            padding: 0.75rem 1rem;
            background: var(--bg-tertiary);
            border: 2px solid var(--border);
            border-radius: 10px;
            color: var(--text-primary);
            font-size: 0.9rem;
            cursor: pointer;
            min-width: 150px;
            transition: all 0.3s ease;
        }

            select:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
            }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            white-space: nowrap;
            text-decoration: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            color: white;
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(40, 167, 69, 0.4);
            }

        .btn-secondary {
            background: var(--bg-tertiary);
            color: var(--text-secondary);
            border: 2px solid var(--border);
        }

            .btn-secondary:hover {
                border-color: var(--primary);
                color: var(--text-primary);
            }

        .btn-success {
            background: var(--success);
            color: white;
        }

        .btn-danger {
            background: var(--danger);
            color: white;
        }

        .btn-warning {
            background: var(--warning);
            color: white;
        }

        .btn-info {
            background: var(--info);
            color: white;
        }

        .fab {
            position: fixed;
            bottom: clamp(1rem, 4vw, 2rem);
            right: clamp(1rem, 8vw, 5rem);
            width: clamp(52px, 8vw, 62px);
            height: clamp(52px, 8vw, 62px);
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            color: white;
            border: none;
            font-size: clamp(1.4rem, 2.5vw, 1.65rem);
            cursor: pointer;
            box-shadow: 0 8px 30px rgba(40, 167, 69, 0.5);
            z-index: 998;
            transition: all 0.3s ease;
        }

            .fab:hover {
                transform: scale(1.12) rotate(90deg);
                box-shadow: 0 12px 40px rgba(40, 167, 69, 0.7);
            }

        .records-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .record-card {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 1.5rem;
            border: 2px solid var(--border);
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }

            .record-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 40px rgba(40, 167, 69, 0.2);
                border-color: var(--primary);
            }

        .record-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border);
        }

        .record-type {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.75rem;
            font-weight: 700;
            text-transform: uppercase;
        }

        .type-fria {
            background: rgba(59, 130, 246, 0.15);
            color: var(--info);
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .type-caliente {
            background: rgba(245, 158, 11, 0.15);
            color: var(--warning);
            border: 1px solid rgba(245, 158, 11, 0.3);
        }

        .record-folio {
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.75rem;
            font-weight: 700;
            color: white;
        }

        .record-details {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            margin-top: 1rem;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.9rem;
            color: var(--text-secondary);
            padding: 0.5rem;
            background: var(--bg-tertiary);
            border-radius: 8px;
            border: 1px solid var(--border);
        }

            .detail-item i {
                width: 20px;
                color: var(--primary);
                font-size: 1rem;
            }

        .detail-value {
            font-weight: 600;
            color: var(--text-primary);
        }

        .record-actions {
            display: flex;
            gap: 0.75rem;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 2px solid var(--border);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            padding: 1rem;
            backdrop-filter: blur(5px);
        }

            .modal.active {
                display: flex;
            }

        .modal-content {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2rem;
            max-width: 900px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            border: 2px solid var(--border);
            box-shadow: 0 25px 60px rgba(0,0,0,0.3);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border);
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
        }

        .close-modal {
            background: var(--bg-tertiary);
            border: 2px solid var(--border);
            color: var(--text-secondary);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

            .close-modal:hover {
                border-color: var(--primary);
                color: var(--primary);
                transform: rotate(90deg);
            }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-primary);
            font-size: 0.9rem;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 0.75rem;
            background: var(--bg-tertiary);
            border: 2px solid var(--border);
            border-radius: 10px;
            color: var(--text-primary);
            font-size: 0.9rem;
            font-family: inherit;
            transition: all 0.3s ease;
        }

            .form-input:focus, .form-select:focus, .form-textarea:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
            }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .calculated-field {
            background: rgba(40, 167, 69, 0.1) !important;
            border-color: var(--primary) !important;
            font-weight: 700;
            color: var(--primary) !important;
        }

        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 4rem 2rem;
            color: var(--text-secondary);
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 1rem;
                color: var(--border);
            }

        .notification {
            position: fixed;
            top: 2rem;
            right: 2rem;
            padding: 1rem 1.5rem;
            border-radius: 12px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
            z-index: 3000;
            font-weight: 600;
            display: none;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.9rem;
            color: white;
            backdrop-filter: blur(10px);
        }

            .notification.show {
                display: flex;
            }

            .notification.success {
                background: var(--success);
            }

            .notification.error {
                background: var(--danger);
            }

            .notification.info {
                background: var(--info);
            }

        .sync-badge {
            background: rgba(16, 185, 129, 0.15);
            color: var(--success);
            padding: 0.35rem 0.75rem;
            border-radius: 6px;
            font-size: 0.7rem;
            font-weight: 700;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

        /* Responsividad sin media queries */
    </style>
</head>
<body>
    <!-- Panel de Navegación -->
    <div class="nav-panel-overlay" id="navPanelOverlay" onclick="toggleNavPanel()"></div>

    <button class="nav-toggle" id="navToggle" onclick="toggleNavPanel()">
        <i class="fas fa-th-large"></i>
    </button>

    <div class="nav-panel" id="navPanel">
        <div class="nav-panel-header">
            <button class="nav-panel-close" onclick="toggleNavPanel()">
                <i class="fas fa-times"></i>
            </button>
            <h3 class="nav-panel-title">Sistema de Bacheo</h3>
            <p class="nav-panel-subtitle">Navegación Principal</p>
        </div>
        <div class="nav-panel-body">
            <div class="nav-item" onclick="redirectTo('captura')">
                <div class="nav-item-icon"><i class="fas fa-plus-circle"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Captura</div>
                    <div class="nav-item-desc">Registro de bacheos</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('programacion')">
                <div class="nav-item-icon"><i class="fas fa-calendar-alt"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Programación</div>
                    <div class="nav-item-desc">Horarios y cuadrillas</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('mapa')">
                <div class="nav-item-icon"><i class="fas fa-map-marked-alt"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Mapa Interactivo</div>
                    <div class="nav-item-desc">Ubicación de bacheos</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('rastreo')">
                <div class="nav-item-icon"><i class="fas fa-satellite-dish"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Rastreo GPS</div>
                    <div class="nav-item-desc">Monitoreo de unidades</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('dashboard')">
                <div class="nav-item-icon"><i class="fas fa-chart-line"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Dashboard</div>
                    <div class="nav-item-desc">Estadísticas y reportes</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('reportes')">
                <div class="nav-item-icon"><i class="fas fa-exclamation-triangle"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Reportes</div>
                    <div class="nav-item-desc">Incidencias ciudadanas</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item active">
                <div class="nav-item-icon"><i class="fas fa-toolbox"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Material Utilizado</div>
                    <div class="nav-item-desc">Control de inventario</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('asistencia')">
                <div class="nav-item-icon"><i class="fas fa-user-check"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Asistencia</div>
                    <div class="nav-item-desc">Control de personal</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('repositorio')">
                <div class="nav-item-icon"><i class="fas fa-id-card"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Repositorio Vehicular</div>
                    <div class="nav-item-desc">Gestión de unidades</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('citas')">
                <div class="nav-item-icon"><i class="fas fa-wrench"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Citas Mantenimiento</div>
                    <div class="nav-item-desc">Agendar servicios</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
            <div class="nav-item" onclick="redirectTo('oficios')">
                <div class="nav-item-icon"><i class="fas fa-file-invoice"></i></div>
                <div class="nav-item-content">
                    <div class="nav-item-title">Oficios a Almacén</div>
                    <div class="nav-item-desc">Envío de solicitudes</div>
                </div>
                <div class="nav-item-arrow"><i class="fas fa-chevron-right"></i></div>
            </div>
        </div>
    </div>

    <header class="header">
        <div class="header-content">
            <div class="logo-section">
                <div class="logo-container">
                    <div class="logo">
                        <img src="~/imagenes/bacheo.png" alt="Bacheo" onerror="this.style.display='none'; this.parentElement.innerHTML='<i class=\'fas fa-road\' style=\'color: var(--primary); font-size: 1.4rem;\'></i>'">
                    </div>
                    <div class="logo">
                        <img src="~/imagenes/LOGO.png" alt="Gobierno" onerror="this.style.display='none'; this.parentElement.innerHTML='<i class=\'fas fa-landmark\' style=\'color: var(--primary); font-size: 1.4rem;\'></i>'">
                    </div>
                </div>
                <div class="header-info">
                    <h1>Material Utilizado</h1>
                    <p>Control de Inventario • Municipio de Monclova, Coahuila</p>
                </div>
            </div>
            <div class="user-avatar">
                <img src="~/imagenes/angel.jpeg" alt="Usuario" onerror="this.style.display='none'; this.parentElement.innerHTML='<i class=\'fas fa-user-cog\' style=\'color: var(--primary); font-size: 1.3rem;\'></i>'">
            </div>
        </div>
    </header>

    <div class="container">
        <div class="stats-bar">
            <div class="stat-item">
                <div class="stat-number" id="totalRecords">0</div>
                <div class="stat-label">Total Registros</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalFria">0</div>
                <div class="stat-label">Carpeta Fría (ton)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalCaliente">0</div>
                <div class="stat-label">Carpeta Caliente (ton)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalLiga">0</div>
                <div class="stat-label">Liga Asfáltica (lts)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="monthRecords">0</div>
                <div class="stat-label">Mes Actual</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="totalMaterial">0</div>
                <div class="stat-label">Total Material (ton)</div>
            </div>
        </div>

        <div class="toolbar">
            <div class="toolbar-row">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="Buscar por folio, camión, sector...">
                </div>
                <button class="btn btn-warning" id="syncBtn">
                    <i class="fas fa-sync-alt"></i>
                    Sincronizar
                </button>
                <button class="btn btn-info" id="exportBtn">
                    <i class="fas fa-download"></i>
                    Exportar
                </button>
            </div>
            <div class="toolbar-row">
                <div class="filter-group">
                    <select id="filterType">
                        <option value="all">Todos los tipos</option>
                        <option value="FRIA">Carpeta Fría</option>
                        <option value="CALIENTE">Carpeta Caliente</option>
                        <option value="LIGA">Liga Asfáltica</option>
                    </select>
                    <select id="filterMonth">
                        <option value="">Todos los meses</option>
                    </select>
                    <select id="filterTruck">
                        <option value="">Todos los camiones</option>
                    </select>
                </div>
            </div>
        </div>

        <div id="recordsContainer" class="records-grid"></div>
    </div>

    <button class="fab" id="addBtn">
        <i class="fas fa-plus"></i>
    </button>

    <div id="formModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Nuevo Registro de Material</h2>
                <button class="close-modal" onclick="closeFormModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="recordForm">
                <input type="hidden" id="editingId">

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Tipo de Material</label>
                        <select class="form-select" id="materialType" required>
                            <option value="">Seleccionar...</option>
                            <option value="FRIA">Carpeta Fría</option>
                            <option value="CALIENTE">Carpeta Caliente</option>
                            <option value="LIGA">Liga Asfáltica</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Fecha</label>
                        <input type="date" class="form-input" id="date" required>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Sector</label>
                        <input type="text" class="form-input" id="sector" required placeholder="Ej: 311">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Camión</label>
                        <input type="text" class="form-input" id="truck" required placeholder="Ej: 19">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" id="quantityLabel">Cantidad (Toneladas)</label>
                        <input type="number" step="0.01" class="form-input" id="quantity" required placeholder="0.00">
                    </div>
                    <div class="form-group" id="ligaGroup" style="display: none;">
                        <label class="form-label">Liga Asfáltica (Litros)</label>
                        <input type="number" step="0.1" class="form-input" id="ligaQuantity" placeholder="0.0">
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Folio de Referencia (Opcional)</label>
                    <input type="text" class="form-input" id="referenceFolio" placeholder="Folio del trabajo de captura">
                </div>

                <div class="form-group">
                    <label class="form-label">Observaciones (Opcional)</label>
                    <textarea class="form-textarea" id="observations" rows="3" placeholder="Notas adicionales..."></textarea>
                </div>

                <button type="submit" class="btn btn-primary" style="width:100%; margin-top:1rem;">
                    <i class="fas fa-save"></i>
                    Guardar Registro
                </button>
            </form>
        </div>
    </div>

    <div id="notification" class="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notificationText"></span>
    </div>

    <script>
        let records = [];
        let folioCounter = 1;
        let navPanelOpen = false;

        document.addEventListener('DOMContentLoaded', function() {
            loadRecords();
            syncFromCaptura();
            setupEventListeners();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;
            updateStats();
            populateFilters();
        });

        function toggleNavPanel() {
            const navPanel = document.getElementById('navPanel');
            const overlay = document.getElementById('navPanelOverlay');
            const toggleBtn = document.getElementById('navToggle');

            navPanelOpen = !navPanelOpen;

            if (navPanelOpen) {
                navPanel.classList.add('open');
                overlay.classList.add('active');
                toggleBtn.classList.add('active');
                toggleBtn.innerHTML = '<i class="fas fa-times"></i>';
                document.body.style.overflow = 'hidden';
            } else {
                navPanel.classList.remove('open');
                overlay.classList.remove('active');
                toggleBtn.classList.remove('active');
                toggleBtn.innerHTML = '<i class="fas fa-th-large"></i>';
                document.body.style.overflow = '';
            }
        }

        function redirectTo(module) {
            if (navPanelOpen) toggleNavPanel();

            const urls = {
                'captura': '/Home/CapturaBacheo',
                'programacion': '/Home/ProgramacionBacheo',
                'mapa': '/Home/MapaBacheo',
                'rastreo': '/Home/RastreoBacheo',
                'dashboard': '/Home/DashboardBacheo',
                'reportes': '/Home/ReportesBacheo',
                'material': '/Home/MaterialUtilizadoBacheo',
                'asistencia': '/Home/AsistenciaPersonalBacheo',
                'repositorio': '/Home/RepositorioPlacasBacheo',
                'citas': '/Home/AgendarCitasMantenimiento',
                'oficios': '/Home/EnviarOficiosAlmacenBacheo'
            };

            if (urls[module]) {
                showNotification(`Navegando a ${module}...`, 'info');
                setTimeout(() => window.location.href = urls[module], 300);
            }
        }

        function setupEventListeners() {
            document.getElementById('addBtn').addEventListener('click', openFormModal);
            document.getElementById('recordForm').addEventListener('submit', handleFormSubmit);
            document.getElementById('searchInput').addEventListener('input', renderRecords);
            document.getElementById('filterType').addEventListener('change', renderRecords);
            document.getElementById('filterMonth').addEventListener('change', renderRecords);
            document.getElementById('filterTruck').addEventListener('change', renderRecords);
            document.getElementById('exportBtn').addEventListener('click', exportToCSV);
            document.getElementById('syncBtn').addEventListener('click', syncFromCaptura);

            // Listener para cambio de tipo de material
            document.getElementById('materialType').addEventListener('change', function() {
                const materialType = this.value;
                const quantityLabel = document.getElementById('quantityLabel');
                const ligaGroup = document.getElementById('ligaGroup');
                const ligaQuantity = document.getElementById('ligaQuantity');

                if (materialType === 'LIGA') {
                    quantityLabel.textContent = 'Cantidad (Litros)';
                    ligaGroup.style.display = 'none';
                    ligaQuantity.required = false;
                } else {
                    quantityLabel.textContent = 'Cantidad (Toneladas)';
                    ligaGroup.style.display = 'block';
                    ligaQuantity.required = false;
                }
            });
        }

        function syncFromCaptura() {
            const capturaRecords = JSON.parse(localStorage.getItem('serviciosPrimariosRecords') || '[]');
            let newRecordsCount = 0;

            capturaRecords.forEach(function(capturaRecord) {
                const exists = records.some(function(r) {
                    return r.referenceFolio === capturaRecord.folio;
                });

                if (!exists && (capturaRecord.type === 'BACHEO' || capturaRecord.type === 'BORDO')) {
                    const area = parseFloat(capturaRecord.area) || 0;
                    let quantity = 0;
                    let ligaQuantity = 0;
                    let materialType = 'FRIA';

                    if (capturaRecord.type === 'BACHEO') {
                        quantity = (area * 0.05).toFixed(2);
                        ligaQuantity = (area * 2.5).toFixed(1); // Estimación de liga
                        materialType = 'FRIA';
                    } else if (capturaRecord.type === 'BORDO') {
                        const thickness = parseFloat(capturaRecord.thickness) || 5;
                        quantity = (area * thickness * 0.01).toFixed(2);
                        ligaQuantity = (area * thickness * 0.5).toFixed(1);
                        materialType = 'CALIENTE';
                    }

                    if (quantity > 0) {
                        const materialRecord = {
                            id: Date.now() + newRecordsCount,
                            folio: generateFolio(),
                            type: materialType,
                            date: capturaRecord.date,
                            sector: capturaRecord.sector,
                            truck: capturaRecord.truck,
                            quantity: quantity,
                            ligaQuantity: ligaQuantity,
                            referenceFolio: capturaRecord.folio,
                            observations: 'Sincronizado desde captura',
                            syncedFrom: 'captura'
                        };
                        records.push(materialRecord);
                        newRecordsCount++;
                    }
                }
            });

            if (newRecordsCount > 0) {
                saveRecords();
                showNotification('Sincronizados ' + newRecordsCount + ' registros nuevos', 'success');
                renderRecords();
                updateStats();
                populateFilters();
            } else {
                showNotification('No hay registros nuevos para sincronizar', 'info');
            }
        }

        function openFormModal() {
            document.getElementById('modalTitle').textContent = 'Nuevo Registro de Material';
            document.getElementById('editingId').value = '';
            document.getElementById('recordForm').reset();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;
            document.getElementById('formModal').classList.add('active');

            // Resetear labels y visibilidad
            document.getElementById('quantityLabel').textContent = 'Cantidad (Toneladas)';
            document.getElementById('ligaGroup').style.display = 'block';
        }

        function closeFormModal() {
            document.getElementById('formModal').classList.remove('active');
            document.getElementById('recordForm').reset();
            document.getElementById('editingId').value = '';
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').value = today;
        }

        function generateFolio() {
            const date = new Date();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const year = date.getFullYear().toString().slice(-2);
            const num = String(folioCounter).padStart(4, '0');
            folioCounter++;
            return 'MAT' + month + year + '-' + num;
        }

        function handleFormSubmit(e) {
            e.preventDefault();

            const editingId = document.getElementById('editingId').value;
            const materialType = document.getElementById('materialType').value;
            const quantity = document.getElementById('quantity').value;
            const ligaQuantity = materialType === 'LIGA' ? '0' : (document.getElementById('ligaQuantity').value || '0');

            if (editingId) {
                const index = records.findIndex(function(r) { return r.id == editingId; });
                if (index !== -1) {
                    records[index] = {
                        id: parseInt(editingId),
                        folio: records[index].folio,
                        type: materialType,
                        date: document.getElementById('date').value,
                        sector: document.getElementById('sector').value,
                        truck: document.getElementById('truck').value,
                        quantity: quantity,
                        ligaQuantity: ligaQuantity,
                        referenceFolio: document.getElementById('referenceFolio').value,
                        observations: document.getElementById('observations').value
                    };
                    showNotification('Registro actualizado correctamente', 'success');
                }
            } else {
                const record = {
                    id: Date.now(),
                    folio: generateFolio(),
                    type: materialType,
                    date: document.getElementById('date').value,
                    sector: document.getElementById('sector').value,
                    truck: document.getElementById('truck').value,
                    quantity: quantity,
                    ligaQuantity: ligaQuantity,
                    referenceFolio: document.getElementById('referenceFolio').value,
                    observations: document.getElementById('observations').value
                };
                records.push(record);
                showNotification('Registro guardado correctamente', 'success');
            }

            saveRecords();
            closeFormModal();
            renderRecords();
            updateStats();
            populateFilters();
        }

        function loadRecords() {
            const saved = localStorage.getItem('materialUtilizadoRecords');
            if (saved) {
                records = JSON.parse(saved);
                // Asegurar que todos los registros tengan ligaQuantity
                records.forEach(record => {
                    if (record.ligaQuantity === undefined) {
                        record.ligaQuantity = '0';
                    }
                });
                folioCounter = parseInt(localStorage.getItem('materialFolioCounter') || '1');
            }
            renderRecords();
        }

        function saveRecords() {
            localStorage.setItem('materialUtilizadoRecords', JSON.stringify(records));
            localStorage.setItem('materialFolioCounter', folioCounter.toString());
        }

        function renderRecords() {
            const container = document.getElementById('recordsContainer');
            const search = document.getElementById('searchInput').value.toLowerCase();
            const typeFilter = document.getElementById('filterType').value;
            const monthFilter = document.getElementById('filterMonth').value;
            const truckFilter = document.getElementById('filterTruck').value;

            let filtered = records.filter(function(r) {
                const matchSearch = !search ||
                    r.folio.toLowerCase().indexOf(search) > -1 ||
                    r.sector.toLowerCase().indexOf(search) > -1 ||
                    r.truck.toLowerCase().indexOf(search) > -1 ||
                    (r.referenceFolio && r.referenceFolio.toLowerCase().indexOf(search) > -1);
                const matchType = typeFilter === 'all' || r.type === typeFilter;
                const matchMonth = !monthFilter || r.date.indexOf(monthFilter) === 0;
                const matchTruck = !truckFilter || r.truck === truckFilter;
                return matchSearch && matchType && matchMonth && matchTruck;
            });

            filtered.sort(function(a, b) {
                return new Date(b.date) - new Date(a.date);
            });

            if (filtered.length === 0) {
                container.innerHTML = '<div class="empty-state">' +
                    '<i class="fas fa-toolbox"></i>' +
                    '<h3>No hay registros</h3>' +
                    '<p>Agrega tu primer registro de material o sincroniza desde captura</p>' +
                    '</div>';
                return;
            }

            container.innerHTML = filtered.map(function(r) {
                const syncBadge = r.syncedFrom ? '<span class="sync-badge"><i class="fas fa-sync-alt"></i> Auto</span>' : '';

                let typeDisplayName = '';
                if (r.type === 'FRIA') typeDisplayName = 'Carpeta Fría';
                else if (r.type === 'CALIENTE') typeDisplayName = 'Carpeta Caliente';
                else if (r.type === 'LIGA') typeDisplayName = 'Liga Asfáltica';

                let quantityDisplay = '';
                let ligaDisplay = '';

                if (r.type === 'LIGA') {
                    quantityDisplay = '<div class="detail-item"><i class="fas fa-tint"></i><span>Cantidad: <span class="detail-value">' + r.quantity + ' litros</span></span></div>';
                } else {
                    quantityDisplay = '<div class="detail-item"><i class="fas fa-weight-hanging"></i><span>Cantidad: <span class="detail-value">' + r.quantity + ' toneladas</span></span></div>';
                    if (parseFloat(r.ligaQuantity || 0) > 0) {
                        ligaDisplay = '<div class="detail-item"><i class="fas fa-tint"></i><span>Liga: <span class="detail-value">' + r.ligaQuantity + ' litros</span></span></div>';
                    }
                }

                return '<div class="record-card">' +
                    '<div class="record-header">' +
                    '<div style="display:flex; gap:0.5rem; align-items:center;">' +
                    '<span class="record-type type-' + r.type.toLowerCase() + '">' + typeDisplayName + '</span>' +
                    syncBadge +
                    '</div>' +
                    '<span class="record-folio">' + r.folio + '</span>' +
                    '</div>' +
                    '<h3 style="font-size:1.1rem; margin-bottom:0.5rem; color:var(--text-primary); font-weight:600;">Sector ' + r.sector + '</h3>' +
                    '<p style="color:var(--text-secondary); font-size:0.85rem; margin-bottom:1rem;">' +
                    '<i class="fas fa-calendar" style="margin-right:0.5rem;"></i>' + formatDate(r.date) +
                    '</p>' +
                    '<div class="record-details">' +
                    '<div class="detail-item"><i class="fas fa-truck"></i><span>Camión: <span class="detail-value">' + r.truck + '</span></span></div>' +
                    quantityDisplay +
                    ligaDisplay +
                    (r.referenceFolio ? '<div class="detail-item"><i class="fas fa-link"></i><span>Ref: <span class="detail-value">' + r.referenceFolio + '</span></span></div>' : '') +
                    (r.observations ? '<div class="detail-item"><i class="fas fa-comment"></i><span><span class="detail-value">' + r.observations + '</span></span></div>' : '') +
                    '</div>' +
                    '<div class="record-actions">' +
                    '<button class="btn btn-secondary" onclick="editRecord(' + r.id + ')" style="flex:1;"><i class="fas fa-edit"></i> Editar</button>' +
                    '<button class="btn btn-danger" onclick="deleteRecord(' + r.id + ')" style="flex:1;"><i class="fas fa-trash"></i> Eliminar</button>' +
                    '</div>' +
                    '</div>';
            }).join('');
        }

        function deleteRecord(id) {
            if (!confirm('¿Eliminar este registro?')) return;
            records = records.filter(function(r) { return r.id !== id; });
            saveRecords();
            showNotification('Registro eliminado', 'success');
            renderRecords();
            updateStats();
            populateFilters();
        }

        function editRecord(id) {
            const record = records.find(function(r) { return r.id === id; });
            if (!record) return;

            document.getElementById('modalTitle').textContent = 'Editar Registro de Material';
            document.getElementById('editingId').value = record.id;
            document.getElementById('materialType').value = record.type;
            document.getElementById('date').value = record.date;
            document.getElementById('sector').value = record.sector;
            document.getElementById('truck').value = record.truck;
            document.getElementById('quantity').value = record.quantity;
            document.getElementById('ligaQuantity').value = record.ligaQuantity || '';
            document.getElementById('referenceFolio').value = record.referenceFolio || '';
            document.getElementById('observations').value = record.observations || '';

            // Actualizar visibilidad y labels según el tipo
            const quantityLabel = document.getElementById('quantityLabel');
            const ligaGroup = document.getElementById('ligaGroup');

            if (record.type === 'LIGA') {
                quantityLabel.textContent = 'Cantidad (Litros)';
                ligaGroup.style.display = 'none';
            } else {
                quantityLabel.textContent = 'Cantidad (Toneladas)';
                ligaGroup.style.display = 'block';
            }

            document.getElementById('formModal').classList.add('active');
            showNotification('Editando registro', 'info');
        }

        function updateStats() {
            document.getElementById('totalRecords').textContent = records.length;

            const totalFria = records.filter(function(r) { return r.type === 'FRIA'; })
                .reduce(function(sum, r) { return sum + parseFloat(r.quantity); }, 0);
            document.getElementById('totalFria').textContent = totalFria.toFixed(2);

            const totalCaliente = records.filter(function(r) { return r.type === 'CALIENTE'; })
                .reduce(function(sum, r) { return sum + parseFloat(r.quantity); }, 0);
            document.getElementById('totalCaliente').textContent = totalCaliente.toFixed(2);

            // Total de liga asfáltica (incluyendo registros tipo LIGA y ligaQuantity de otros tipos)
            const totalLiga = records.reduce(function(sum, r) {
                if (r.type === 'LIGA') {
                    return sum + parseFloat(r.quantity);
                } else {
                    return sum + parseFloat(r.ligaQuantity || 0);
                }
            }, 0);
            document.getElementById('totalLiga').textContent = totalLiga.toFixed(1);

            const currentMonth = new Date().toISOString().substring(0, 7);
            const monthRecords = records.filter(function(r) {
                return r.date.indexOf(currentMonth) === 0;
            }).length;
            document.getElementById('monthRecords').textContent = monthRecords;

            const totalMaterial = totalFria + totalCaliente;
            document.getElementById('totalMaterial').textContent = totalMaterial.toFixed(2);
        }

        function populateFilters() {
            const monthSelect = document.getElementById('filterMonth');
            const truckSelect = document.getElementById('filterTruck');

            const trucks = records.map(function(r) { return r.truck; })
                .filter(function(v, i, a) { return a.indexOf(v) === i; }).sort();
            truckSelect.innerHTML = '<option value="">Todos los camiones</option>' +
                trucks.map(function(t) { return '<option value="' + t + '">Camión ' + t + '</option>'; }).join('');

            const months = ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];
            const year = new Date().getFullYear();
            monthSelect.innerHTML = '<option value="">Todos los meses</option>' +
                months.map(function(m, i) {
                    const monthValue = year + '-' + String(i + 1).padStart(2, '0');
                    return '<option value="' + monthValue + '">' + m + ' ' + year + '</option>';
                }).join('');
        }

        function formatDate(dateStr) {
            const parts = dateStr.split('-');
            const year = parts[0];
            const month = parts[1];
            const day = parts[2];
            const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];
            return day + '-' + months[parseInt(month) - 1] + '-' + year;
        }

        function exportToCSV() {
            if (records.length === 0) {
                showNotification('No hay registros para exportar', 'error');
                return;
            }

            let csv = '\uFEFFFOLIO,TIPO,FECHA,SECTOR,CAMIÓN,CANTIDAD,LIGA (LTS),REFERENCIA,OBSERVACIONES\n';

            records.forEach(function(r) {
                let typeName = '';
                if (r.type === 'FRIA') typeName = 'Carpeta Fría';
                else if (r.type === 'CALIENTE') typeName = 'Carpeta Caliente';
                else if (r.type === 'LIGA') typeName = 'Liga Asfáltica';

                const quantityDisplay = r.type === 'LIGA' ? r.quantity + ' lts' : r.quantity + ' ton';
                const ligaDisplay = r.type === 'LIGA' ? '' : (r.ligaQuantity || '0');

                csv += '"' + r.folio + '","' + typeName + '","' + r.date + '","' + r.sector + '","' + r.truck + '","' + quantityDisplay + '","' + ligaDisplay + '","' + (r.referenceFolio || '') + '","' + (r.observations || '') + '"\n';
            });

            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'MATERIAL_UTILIZADO_' + new Date().toISOString().split('T')[0] + '.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);

            showNotification('Exportados ' + records.length + ' registros', 'success');
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            const text = document.getElementById('notificationText');
            const icon = notification.querySelector('i');

            if (type === 'success') {
                icon.className = 'fas fa-check-circle';
            } else if (type === 'error') {
                icon.className = 'fas fa-exclamation-circle';
            } else {
                icon.className = 'fas fa-info-circle';
            }

            notification.className = 'notification ' + type + ' show';
            text.textContent = message;

            setTimeout(function() {
                notification.classList.remove('show');
            }, 3000);
        }

        console.log('Sistema de Material Utilizado - Versión Verde Iniciado correctamente');
        console.log('Sincronización automática desde Captura activada');
        console.log('Soporte para Liga Asfáltica habilitado');
    </script>
</body>
</html>